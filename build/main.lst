ARM GAS  /tmp/cc0479pd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemClock_Config:
  26              	.LFB288:
  27              		.file 1 "main.c"
   1:main.c        **** #include "main.h"
   2:main.c        **** #include "adc.h"
   3:main.c        **** #include "dma.h"
   4:main.c        **** #include "i2c.h"
   5:main.c        **** #include "quadspi.h"
   6:main.c        **** #include "sai.h"
   7:main.c        **** #include "spi.h"
   8:main.c        **** #include "tim.h"
   9:main.c        **** #include "usart.h"
  10:main.c        **** #include "gpio.h"
  11:main.c        **** 
  12:main.c        **** #include "stdio.h"
  13:main.c        **** 
  14:main.c        **** void SystemClock_Config(void);
  15:main.c        **** 
  16:main.c        **** int main(void)
  17:main.c        **** {
  18:main.c        ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  19:main.c        ****   HAL_Init();
  20:main.c        ****   /* Configure the system clock */
  21:main.c        ****   SystemClock_Config();
  22:main.c        **** 
  23:main.c        ****   /* Initialize all configured peripherals */
  24:main.c        ****   MX_GPIO_Init();
  25:main.c        ****   // MX_DMA_Init();
  26:main.c        ****   // MX_ADC1_Init();
  27:main.c        ****   // MX_I2C1_Init();
  28:main.c        ****   // MX_QUADSPI_Init();
  29:main.c        ****   // MX_SAI1_Init();
  30:main.c        ****   // MX_SPI1_Init();
  31:main.c        ****   // MX_TIM2_Init();
ARM GAS  /tmp/cc0479pd.s 			page 2


  32:main.c        ****   // MX_USART1_UART_Init();
  33:main.c        ****   MX_USART2_UART_Init();
  34:main.c        **** 
  35:main.c        ****   while (1)
  36:main.c        ****   {
  37:main.c        ****     printf("hello world!\n");
  38:main.c        ****     HAL_Delay(500);
  39:main.c        ****   }
  40:main.c        **** }
  41:main.c        **** 
  42:main.c        **** /**
  43:main.c        ****   * @brief System Clock Configuration
  44:main.c        ****   * @retval None
  45:main.c        ****   */
  46:main.c        **** void SystemClock_Config(void)
  47:main.c        **** {
  28              		.loc 1 47 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 184
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 28
  35              		.cfi_offset 4, -28
  36              		.cfi_offset 5, -24
  37              		.cfi_offset 6, -20
  38              		.cfi_offset 7, -16
  39              		.cfi_offset 8, -12
  40              		.cfi_offset 9, -8
  41              		.cfi_offset 14, -4
  42 0004 AFB0     		sub	sp, sp, #188
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 216
  48:main.c        ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  45              		.loc 1 48 0
  46 0006 4422     		movs	r2, #68
  47 0008 0021     		movs	r1, #0
  48 000a 1DA8     		add	r0, sp, #116
  49 000c FFF7FEFF 		bl	memset
  50              	.LVL0:
  49:main.c        ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  51              		.loc 1 49 0
  52 0010 0024     		movs	r4, #0
  53 0012 1894     		str	r4, [sp, #96]
  54 0014 1994     		str	r4, [sp, #100]
  55 0016 1A94     		str	r4, [sp, #104]
  56 0018 1B94     		str	r4, [sp, #108]
  57 001a 1C94     		str	r4, [sp, #112]
  50:main.c        ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  58              		.loc 1 50 0
  59 001c 6022     		movs	r2, #96
  60 001e 2146     		mov	r1, r4
  61 0020 6846     		mov	r0, sp
  62 0022 FFF7FEFF 		bl	memset
  63              	.LVL1:
  51:main.c        **** 
  52:main.c        ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/cc0479pd.s 			page 3


  53:main.c        ****   */
  54:main.c        ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  64              		.loc 1 54 0
  65 0026 0127     		movs	r7, #1
  66 0028 1D97     		str	r7, [sp, #116]
  55:main.c        ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  67              		.loc 1 55 0
  68 002a 4FF48033 		mov	r3, #65536
  69 002e 1E93     		str	r3, [sp, #120]
  56:main.c        ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  70              		.loc 1 56 0
  71 0030 0225     		movs	r5, #2
  72 0032 2795     		str	r5, [sp, #156]
  57:main.c        ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  73              		.loc 1 57 0
  74 0034 0326     		movs	r6, #3
  75 0036 2896     		str	r6, [sp, #160]
  58:main.c        ****   RCC_OscInitStruct.PLL.PLLM = 1;
  76              		.loc 1 58 0
  77 0038 2997     		str	r7, [sp, #164]
  59:main.c        ****   RCC_OscInitStruct.PLL.PLLN = 16;
  78              		.loc 1 59 0
  79 003a 4FF01009 		mov	r9, #16
  80 003e CDF8A890 		str	r9, [sp, #168]
  60:main.c        ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
  81              		.loc 1 60 0
  82 0042 4FF00708 		mov	r8, #7
  83 0046 CDF8AC80 		str	r8, [sp, #172]
  61:main.c        ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  84              		.loc 1 61 0
  85 004a 2C95     		str	r5, [sp, #176]
  62:main.c        ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  86              		.loc 1 62 0
  87 004c 2D95     		str	r5, [sp, #180]
  63:main.c        ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  88              		.loc 1 63 0
  89 004e 1DA8     		add	r0, sp, #116
  90 0050 FFF7FEFF 		bl	HAL_RCC_OscConfig
  91              	.LVL2:
  64:main.c        ****   {
  65:main.c        ****     Error_Handler();
  66:main.c        ****   }
  67:main.c        ****   /** Initializes the CPU, AHB and APB busses clocks 
  68:main.c        ****   */
  69:main.c        ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  92              		.loc 1 69 0
  93 0054 0F23     		movs	r3, #15
  94 0056 1893     		str	r3, [sp, #96]
  70:main.c        ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  71:main.c        ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  95              		.loc 1 71 0
  96 0058 1996     		str	r6, [sp, #100]
  72:main.c        ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 72 0
  98 005a 1A94     		str	r4, [sp, #104]
  73:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  99              		.loc 1 73 0
ARM GAS  /tmp/cc0479pd.s 			page 4


 100 005c 1B94     		str	r4, [sp, #108]
  74:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 74 0
 102 005e 1C94     		str	r4, [sp, #112]
  75:main.c        **** 
  76:main.c        ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 103              		.loc 1 76 0
 104 0060 3146     		mov	r1, r6
 105 0062 18A8     		add	r0, sp, #96
 106 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 107              	.LVL3:
  77:main.c        ****   {
  78:main.c        ****     Error_Handler();
  79:main.c        ****   }
  80:main.c        ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 108              		.loc 1 80 0
 109 0068 44F64303 		movw	r3, #18499
 110 006c 0093     		str	r3, [sp]
  81:main.c        ****                               |RCC_PERIPHCLK_SAI1|RCC_PERIPHCLK_I2C1
  82:main.c        ****                               |RCC_PERIPHCLK_ADC;
  83:main.c        ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 111              		.loc 1 83 0
 112 006e 0894     		str	r4, [sp, #32]
  84:main.c        ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 113              		.loc 1 84 0
 114 0070 0994     		str	r4, [sp, #36]
  85:main.c        ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 115              		.loc 1 85 0
 116 0072 0C94     		str	r4, [sp, #48]
  86:main.c        ****   PeriphClkInit.Sai1ClockSelection = RCC_SAI1CLKSOURCE_PLLSAI1;
 117              		.loc 1 86 0
 118 0074 1194     		str	r4, [sp, #68]
  87:main.c        ****   PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 119              		.loc 1 87 0
 120 0076 4FF08053 		mov	r3, #268435456
 121 007a 1593     		str	r3, [sp, #84]
  88:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSE;
 122              		.loc 1 88 0
 123 007c 0196     		str	r6, [sp, #4]
  89:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 124              		.loc 1 89 0
 125 007e 0297     		str	r7, [sp, #8]
  90:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1N = 16;
 126              		.loc 1 90 0
 127 0080 CDF80C90 		str	r9, [sp, #12]
  91:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 128              		.loc 1 91 0
 129 0084 CDF81080 		str	r8, [sp, #16]
  92:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 130              		.loc 1 92 0
 131 0088 0595     		str	r5, [sp, #20]
  93:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 132              		.loc 1 93 0
 133 008a 0695     		str	r5, [sp, #24]
  94:main.c        ****   PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_SAI1CLK|RCC_PLLSAI1_ADC1CLK;
 134              		.loc 1 94 0
 135 008c 054B     		ldr	r3, .L3
ARM GAS  /tmp/cc0479pd.s 			page 5


 136 008e 0793     		str	r3, [sp, #28]
  95:main.c        ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 137              		.loc 1 95 0
 138 0090 6846     		mov	r0, sp
 139 0092 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 140              	.LVL4:
  96:main.c        ****   {
  97:main.c        ****     Error_Handler();
  98:main.c        ****   }
  99:main.c        ****   /** Configure the main internal regulator output voltage 
 100:main.c        ****   */
 101:main.c        ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 141              		.loc 1 101 0
 142 0096 4FF40070 		mov	r0, #512
 143 009a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 144              	.LVL5:
 102:main.c        ****   {
 103:main.c        ****     Error_Handler();
 104:main.c        ****   }
 105:main.c        **** }
 145              		.loc 1 105 0
 146 009e 2FB0     		add	sp, sp, #188
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 28
 149              		@ sp needed
 150 00a0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 151              	.L4:
 152              		.align	2
 153              	.L3:
 154 00a4 00000101 		.word	16842752
 155              		.cfi_endproc
 156              	.LFE288:
 158              		.section	.text.main,"ax",%progbits
 159              		.align	1
 160              		.global	main
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu fpv4-sp-d16
 166              	main:
 167              	.LFB287:
  17:main.c        ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 168              		.loc 1 17 0
 169              		.cfi_startproc
 170              		@ Volatile: function does not return.
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
  19:main.c        ****   /* Configure the system clock */
 178              		.loc 1 19 0
 179 0002 FFF7FEFF 		bl	HAL_Init
 180              	.LVL6:
  21:main.c        **** 
ARM GAS  /tmp/cc0479pd.s 			page 6


 181              		.loc 1 21 0
 182 0006 FFF7FEFF 		bl	SystemClock_Config
 183              	.LVL7:
  24:main.c        ****   // MX_DMA_Init();
 184              		.loc 1 24 0
 185 000a FFF7FEFF 		bl	MX_GPIO_Init
 186              	.LVL8:
  33:main.c        **** 
 187              		.loc 1 33 0
 188 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 189              	.LVL9:
 190              	.L6:
  37:main.c        ****     HAL_Delay(500);
 191              		.loc 1 37 0 discriminator 1
 192 0012 0448     		ldr	r0, .L8
 193 0014 FFF7FEFF 		bl	puts
 194              	.LVL10:
  38:main.c        ****   }
 195              		.loc 1 38 0 discriminator 1
 196 0018 4FF4FA70 		mov	r0, #500
 197 001c FFF7FEFF 		bl	HAL_Delay
 198              	.LVL11:
 199 0020 F7E7     		b	.L6
 200              	.L9:
 201 0022 00BF     		.align	2
 202              	.L8:
 203 0024 00000000 		.word	.LC0
 204              		.cfi_endproc
 205              	.LFE287:
 207              		.section	.text.Error_Handler,"ax",%progbits
 208              		.align	1
 209              		.global	Error_Handler
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 213              		.fpu fpv4-sp-d16
 215              	Error_Handler:
 216              	.LFB289:
 106:main.c        **** 
 107:main.c        **** /* USER CODE BEGIN 4 */
 108:main.c        **** 
 109:main.c        **** /* USER CODE END 4 */
 110:main.c        **** 
 111:main.c        **** /**
 112:main.c        ****   * @brief  This function is executed in case of error occurrence.
 113:main.c        ****   * @retval None
 114:main.c        ****   */
 115:main.c        **** void Error_Handler(void)
 116:main.c        **** {
 217              		.loc 1 116 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE289:
ARM GAS  /tmp/cc0479pd.s 			page 7


 226              		.section	.text.assert_failed,"ax",%progbits
 227              		.align	1
 228              		.global	assert_failed
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 232              		.fpu fpv4-sp-d16
 234              	assert_failed:
 235              	.LFB290:
 117:main.c        ****   /* USER CODE BEGIN Error_Handler_Debug */
 118:main.c        ****   /* User can add his own implementation to report the HAL error return state */
 119:main.c        **** 
 120:main.c        ****   /* USER CODE END Error_Handler_Debug */
 121:main.c        **** }
 122:main.c        **** 
 123:main.c        **** #ifdef  USE_FULL_ASSERT
 124:main.c        **** /**
 125:main.c        ****   * @brief  Reports the name of the source file and the source line number
 126:main.c        ****   *         where the assert_param error has occurred.
 127:main.c        ****   * @param  file: pointer to the source file name
 128:main.c        ****   * @param  line: assert_param error line source number
 129:main.c        ****   * @retval None
 130:main.c        ****   */
 131:main.c        **** void assert_failed(char *file, uint32_t line)
 132:main.c        **** { 
 236              		.loc 1 132 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 241              	.LVL12:
 242 0000 7047     		bx	lr
 243              		.cfi_endproc
 244              	.LFE290:
 246              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 247              		.align	2
 248              	.LC0:
 249 0000 68656C6C 		.ascii	"hello world!\000"
 249      6F20776F 
 249      726C6421 
 249      00
 250              		.text
 251              	.Letext0:
 252              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 253              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 254              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 255              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 256              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 257              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 258              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 259              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 260              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 261              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 262              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 263              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 264              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_i2c.h"
 265              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_qspi.h"
ARM GAS  /tmp/cc0479pd.s 			page 8


 266              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_sai.h"
 267              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 268              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 269              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 270              		.file 20 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 271              		.file 21 "Inc/adc.h"
 272              		.file 22 "Inc/i2c.h"
 273              		.file 23 "Inc/quadspi.h"
 274              		.file 24 "Inc/sai.h"
 275              		.file 25 "Inc/spi.h"
 276              		.file 26 "Inc/tim.h"
 277              		.file 27 "Inc/usart.h"
 278              		.file 28 "/usr/include/newlib/sys/lock.h"
 279              		.file 29 "/usr/include/newlib/sys/_types.h"
 280              		.file 30 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 281              		.file 31 "/usr/include/newlib/sys/reent.h"
 282              		.file 32 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 283              		.file 33 "Inc/gpio.h"
 284              		.file 34 "<built-in>"
ARM GAS  /tmp/cc0479pd.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc0479pd.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc0479pd.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc0479pd.s:154    .text.SystemClock_Config:00000000000000a4 $d
     /tmp/cc0479pd.s:159    .text.main:0000000000000000 $t
     /tmp/cc0479pd.s:166    .text.main:0000000000000000 main
     /tmp/cc0479pd.s:203    .text.main:0000000000000024 $d
     /tmp/cc0479pd.s:208    .text.Error_Handler:0000000000000000 $t
     /tmp/cc0479pd.s:215    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc0479pd.s:227    .text.assert_failed:0000000000000000 $t
     /tmp/cc0479pd.s:234    .text.assert_failed:0000000000000000 assert_failed
     /tmp/cc0479pd.s:247    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_PWREx_ControlVoltageScaling
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
puts
HAL_Delay
