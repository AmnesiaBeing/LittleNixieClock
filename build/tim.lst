ARM GAS  /tmp/ccozpO9F.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_TIM_PWM_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_TIM_PWM_MspInit:
  26              	.LFB285:
  27              		.file 1 "HAL/tim.c"
   1:HAL/tim.c     **** /**
   2:HAL/tim.c     ****   ******************************************************************************
   3:HAL/tim.c     ****   * File Name          : TIM.c
   4:HAL/tim.c     ****   * Description        : This file provides code for the configuration
   5:HAL/tim.c     ****   *                      of the TIM instances.
   6:HAL/tim.c     ****   ******************************************************************************
   7:HAL/tim.c     ****   * @attention
   8:HAL/tim.c     ****   *
   9:HAL/tim.c     ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:HAL/tim.c     ****   * All rights reserved.</center></h2>
  11:HAL/tim.c     ****   *
  12:HAL/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:HAL/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:HAL/tim.c     ****   * License. You may obtain a copy of the License at:
  15:HAL/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:HAL/tim.c     ****   *
  17:HAL/tim.c     ****   ******************************************************************************
  18:HAL/tim.c     ****   */
  19:HAL/tim.c     **** 
  20:HAL/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:HAL/tim.c     **** #include "tim.h"
  22:HAL/tim.c     **** 
  23:HAL/tim.c     **** /* USER CODE BEGIN 0 */
  24:HAL/tim.c     **** 
  25:HAL/tim.c     **** /* USER CODE END 0 */
  26:HAL/tim.c     **** 
  27:HAL/tim.c     **** TIM_HandleTypeDef htim2;
  28:HAL/tim.c     **** 
  29:HAL/tim.c     **** /* TIM2 init function */
  30:HAL/tim.c     **** void MX_TIM2_Init(void)
  31:HAL/tim.c     **** {
ARM GAS  /tmp/ccozpO9F.s 			page 2


  32:HAL/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  33:HAL/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  34:HAL/tim.c     **** 
  35:HAL/tim.c     ****   htim2.Instance = TIM2;
  36:HAL/tim.c     ****   htim2.Init.Prescaler = 0;
  37:HAL/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  38:HAL/tim.c     ****   htim2.Init.Period = 0;
  39:HAL/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  40:HAL/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  41:HAL/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
  42:HAL/tim.c     ****   {
  43:HAL/tim.c     ****     Error_Handler();
  44:HAL/tim.c     ****   }
  45:HAL/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  46:HAL/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  47:HAL/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  48:HAL/tim.c     ****   {
  49:HAL/tim.c     ****     Error_Handler();
  50:HAL/tim.c     ****   }
  51:HAL/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  52:HAL/tim.c     ****   sConfigOC.Pulse = 0;
  53:HAL/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  54:HAL/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  55:HAL/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  56:HAL/tim.c     ****   {
  57:HAL/tim.c     ****     Error_Handler();
  58:HAL/tim.c     ****   }
  59:HAL/tim.c     ****   HAL_TIM_MspPostInit(&htim2);
  60:HAL/tim.c     **** 
  61:HAL/tim.c     **** }
  62:HAL/tim.c     **** 
  63:HAL/tim.c     **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
  64:HAL/tim.c     **** {
  28              		.loc 1 64 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  65:HAL/tim.c     **** 
  66:HAL/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
  34              		.loc 1 66 0
  35 0000 0368     		ldr	r3, [r0]
  36 0002 B3F1804F 		cmp	r3, #1073741824
  37 0006 00D0     		beq	.L8
  38              	.L7:
  67:HAL/tim.c     ****   {
  68:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
  69:HAL/tim.c     **** 
  70:HAL/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
  71:HAL/tim.c     ****     /* TIM2 clock enable */
  72:HAL/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
  73:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  74:HAL/tim.c     **** 
  75:HAL/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
  76:HAL/tim.c     ****   }
  77:HAL/tim.c     **** }
ARM GAS  /tmp/ccozpO9F.s 			page 3


  39              		.loc 1 77 0
  40 0008 7047     		bx	lr
  41              	.L8:
  64:HAL/tim.c     **** 
  42              		.loc 1 64 0
  43 000a 82B0     		sub	sp, sp, #8
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 8
  46              	.LBB2:
  72:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  47              		.loc 1 72 0
  48 000c 03F50433 		add	r3, r3, #135168
  49 0010 9A6D     		ldr	r2, [r3, #88]
  50 0012 42F00102 		orr	r2, r2, #1
  51 0016 9A65     		str	r2, [r3, #88]
  52 0018 9B6D     		ldr	r3, [r3, #88]
  53 001a 03F00103 		and	r3, r3, #1
  54 001e 0193     		str	r3, [sp, #4]
  55 0020 019B     		ldr	r3, [sp, #4]
  56              	.LBE2:
  57              		.loc 1 77 0
  58 0022 02B0     		add	sp, sp, #8
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 0
  61              		@ sp needed
  62 0024 F0E7     		b	.L7
  63              		.cfi_endproc
  64              	.LFE285:
  66              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
  67              		.align	1
  68              		.global	HAL_TIM_MspPostInit
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	HAL_TIM_MspPostInit:
  75              	.LFB286:
  78:HAL/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
  79:HAL/tim.c     **** {
  76              		.loc 1 79 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 24
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL1:
  81 0000 00B5     		push	{lr}
  82              	.LCFI2:
  83              		.cfi_def_cfa_offset 4
  84              		.cfi_offset 14, -4
  85 0002 87B0     		sub	sp, sp, #28
  86              	.LCFI3:
  87              		.cfi_def_cfa_offset 32
  80:HAL/tim.c     **** 
  81:HAL/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  88              		.loc 1 81 0
  89 0004 0023     		movs	r3, #0
  90 0006 0193     		str	r3, [sp, #4]
  91 0008 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccozpO9F.s 			page 4


  92 000a 0393     		str	r3, [sp, #12]
  93 000c 0493     		str	r3, [sp, #16]
  94 000e 0593     		str	r3, [sp, #20]
  82:HAL/tim.c     ****   if(timHandle->Instance==TIM2)
  95              		.loc 1 82 0
  96 0010 0368     		ldr	r3, [r0]
  97 0012 B3F1804F 		cmp	r3, #1073741824
  98 0016 02D0     		beq	.L12
  99              	.LVL2:
 100              	.L9:
  83:HAL/tim.c     ****   {
  84:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
  85:HAL/tim.c     **** 
  86:HAL/tim.c     ****   /* USER CODE END TIM2_MspPostInit 0 */
  87:HAL/tim.c     ****   
  88:HAL/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  89:HAL/tim.c     ****     /**TIM2 GPIO Configuration    
  90:HAL/tim.c     ****     PA15 (JTDI)     ------> TIM2_CH1 
  91:HAL/tim.c     ****     */
  92:HAL/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_15;
  93:HAL/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  94:HAL/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  95:HAL/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  96:HAL/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
  97:HAL/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  98:HAL/tim.c     **** 
  99:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 100:HAL/tim.c     **** 
 101:HAL/tim.c     ****   /* USER CODE END TIM2_MspPostInit 1 */
 102:HAL/tim.c     ****   }
 103:HAL/tim.c     **** 
 104:HAL/tim.c     **** }
 101              		.loc 1 104 0
 102 0018 07B0     		add	sp, sp, #28
 103              	.LCFI4:
 104              		.cfi_remember_state
 105              		.cfi_def_cfa_offset 4
 106              		@ sp needed
 107 001a 5DF804FB 		ldr	pc, [sp], #4
 108              	.LVL3:
 109              	.L12:
 110              	.LCFI5:
 111              		.cfi_restore_state
 112              	.LBB3:
  88:HAL/tim.c     ****     /**TIM2 GPIO Configuration    
 113              		.loc 1 88 0
 114 001e 03F50433 		add	r3, r3, #135168
 115 0022 DA6C     		ldr	r2, [r3, #76]
 116 0024 42F00102 		orr	r2, r2, #1
 117 0028 DA64     		str	r2, [r3, #76]
 118 002a DB6C     		ldr	r3, [r3, #76]
 119 002c 03F00103 		and	r3, r3, #1
 120 0030 0093     		str	r3, [sp]
 121 0032 009B     		ldr	r3, [sp]
 122              	.LBE3:
  92:HAL/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 123              		.loc 1 92 0
ARM GAS  /tmp/ccozpO9F.s 			page 5


 124 0034 4FF40043 		mov	r3, #32768
 125 0038 0193     		str	r3, [sp, #4]
  93:HAL/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 126              		.loc 1 93 0
 127 003a 0223     		movs	r3, #2
 128 003c 0293     		str	r3, [sp, #8]
  96:HAL/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 129              		.loc 1 96 0
 130 003e 0123     		movs	r3, #1
 131 0040 0593     		str	r3, [sp, #20]
  97:HAL/tim.c     **** 
 132              		.loc 1 97 0
 133 0042 01A9     		add	r1, sp, #4
 134 0044 4FF09040 		mov	r0, #1207959552
 135              	.LVL4:
 136 0048 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL5:
 138              		.loc 1 104 0
 139 004c E4E7     		b	.L9
 140              		.cfi_endproc
 141              	.LFE286:
 143              		.section	.text.MX_TIM2_Init,"ax",%progbits
 144              		.align	1
 145              		.global	MX_TIM2_Init
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	MX_TIM2_Init:
 152              	.LFB284:
  31:HAL/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 153              		.loc 1 31 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 40
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 00B5     		push	{lr}
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 8BB0     		sub	sp, sp, #44
 162              	.LCFI7:
 163              		.cfi_def_cfa_offset 48
  32:HAL/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 164              		.loc 1 32 0
 165 0004 0023     		movs	r3, #0
 166 0006 0793     		str	r3, [sp, #28]
 167 0008 0893     		str	r3, [sp, #32]
 168 000a 0993     		str	r3, [sp, #36]
  33:HAL/tim.c     **** 
 169              		.loc 1 33 0
 170 000c 0093     		str	r3, [sp]
 171 000e 0193     		str	r3, [sp, #4]
 172 0010 0293     		str	r3, [sp, #8]
 173 0012 0393     		str	r3, [sp, #12]
 174 0014 0493     		str	r3, [sp, #16]
 175 0016 0593     		str	r3, [sp, #20]
 176 0018 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccozpO9F.s 			page 6


  35:HAL/tim.c     ****   htim2.Init.Prescaler = 0;
 177              		.loc 1 35 0
 178 001a 1748     		ldr	r0, .L21
 179 001c 4FF08042 		mov	r2, #1073741824
 180 0020 0260     		str	r2, [r0]
  36:HAL/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 181              		.loc 1 36 0
 182 0022 4360     		str	r3, [r0, #4]
  37:HAL/tim.c     ****   htim2.Init.Period = 0;
 183              		.loc 1 37 0
 184 0024 8360     		str	r3, [r0, #8]
  38:HAL/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 185              		.loc 1 38 0
 186 0026 C360     		str	r3, [r0, #12]
  39:HAL/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 187              		.loc 1 39 0
 188 0028 0361     		str	r3, [r0, #16]
  40:HAL/tim.c     ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 189              		.loc 1 40 0
 190 002a 8361     		str	r3, [r0, #24]
  41:HAL/tim.c     ****   {
 191              		.loc 1 41 0
 192 002c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 193              	.LVL6:
 194 0030 C0B9     		cbnz	r0, .L18
 195              	.L14:
  45:HAL/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 196              		.loc 1 45 0
 197 0032 0023     		movs	r3, #0
 198 0034 0793     		str	r3, [sp, #28]
  46:HAL/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 199              		.loc 1 46 0
 200 0036 0993     		str	r3, [sp, #36]
  47:HAL/tim.c     ****   {
 201              		.loc 1 47 0
 202 0038 07A9     		add	r1, sp, #28
 203 003a 0F48     		ldr	r0, .L21
 204 003c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 205              	.LVL7:
 206 0040 98B9     		cbnz	r0, .L19
 207              	.L15:
  51:HAL/tim.c     ****   sConfigOC.Pulse = 0;
 208              		.loc 1 51 0
 209 0042 6023     		movs	r3, #96
 210 0044 0093     		str	r3, [sp]
  52:HAL/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 211              		.loc 1 52 0
 212 0046 0022     		movs	r2, #0
 213 0048 0192     		str	r2, [sp, #4]
  53:HAL/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 214              		.loc 1 53 0
 215 004a 0292     		str	r2, [sp, #8]
  54:HAL/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 216              		.loc 1 54 0
 217 004c 0492     		str	r2, [sp, #16]
  55:HAL/tim.c     ****   {
 218              		.loc 1 55 0
ARM GAS  /tmp/ccozpO9F.s 			page 7


 219 004e 6946     		mov	r1, sp
 220 0050 0948     		ldr	r0, .L21
 221 0052 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 222              	.LVL8:
 223 0056 58B9     		cbnz	r0, .L20
 224              	.L16:
  59:HAL/tim.c     **** 
 225              		.loc 1 59 0
 226 0058 0748     		ldr	r0, .L21
 227 005a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 228              	.LVL9:
  61:HAL/tim.c     **** 
 229              		.loc 1 61 0
 230 005e 0BB0     		add	sp, sp, #44
 231              	.LCFI8:
 232              		.cfi_remember_state
 233              		.cfi_def_cfa_offset 4
 234              		@ sp needed
 235 0060 5DF804FB 		ldr	pc, [sp], #4
 236              	.L18:
 237              	.LCFI9:
 238              		.cfi_restore_state
  43:HAL/tim.c     ****   }
 239              		.loc 1 43 0
 240 0064 FFF7FEFF 		bl	Error_Handler
 241              	.LVL10:
 242 0068 E3E7     		b	.L14
 243              	.L19:
  49:HAL/tim.c     ****   }
 244              		.loc 1 49 0
 245 006a FFF7FEFF 		bl	Error_Handler
 246              	.LVL11:
 247 006e E8E7     		b	.L15
 248              	.L20:
  57:HAL/tim.c     ****   }
 249              		.loc 1 57 0
 250 0070 FFF7FEFF 		bl	Error_Handler
 251              	.LVL12:
 252 0074 F0E7     		b	.L16
 253              	.L22:
 254 0076 00BF     		.align	2
 255              	.L21:
 256 0078 00000000 		.word	htim2
 257              		.cfi_endproc
 258              	.LFE284:
 260              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 261              		.align	1
 262              		.global	HAL_TIM_PWM_MspDeInit
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	HAL_TIM_PWM_MspDeInit:
 269              	.LFB287:
 105:HAL/tim.c     **** 
 106:HAL/tim.c     **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* tim_pwmHandle)
 107:HAL/tim.c     **** {
ARM GAS  /tmp/ccozpO9F.s 			page 8


 270              		.loc 1 107 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 0
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275              	.LVL13:
 108:HAL/tim.c     **** 
 109:HAL/tim.c     ****   if(tim_pwmHandle->Instance==TIM2)
 276              		.loc 1 109 0
 277 0000 0368     		ldr	r3, [r0]
 278 0002 B3F1804F 		cmp	r3, #1073741824
 279 0006 00D0     		beq	.L25
 280              	.L23:
 281 0008 7047     		bx	lr
 282              	.L25:
 110:HAL/tim.c     ****   {
 111:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 112:HAL/tim.c     **** 
 113:HAL/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 114:HAL/tim.c     ****     /* Peripheral clock disable */
 115:HAL/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 283              		.loc 1 115 0
 284 000a 034A     		ldr	r2, .L26
 285 000c 936D     		ldr	r3, [r2, #88]
 286 000e 23F00103 		bic	r3, r3, #1
 287 0012 9365     		str	r3, [r2, #88]
 116:HAL/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 117:HAL/tim.c     **** 
 118:HAL/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 119:HAL/tim.c     ****   }
 120:HAL/tim.c     **** } 
 288              		.loc 1 120 0
 289 0014 F8E7     		b	.L23
 290              	.L27:
 291 0016 00BF     		.align	2
 292              	.L26:
 293 0018 00100240 		.word	1073876992
 294              		.cfi_endproc
 295              	.LFE287:
 297              		.comm	htim2,64,4
 298              		.text
 299              	.Letext0:
 300              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 301              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 302              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 303              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 304              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 305              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 306              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 307              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 308              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 309              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 310              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 311              		.file 13 "Inc/tim.h"
 312              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 313              		.file 15 "Inc/main.h"
ARM GAS  /tmp/ccozpO9F.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccozpO9F.s:18     .text.HAL_TIM_PWM_MspInit:0000000000000000 $t
     /tmp/ccozpO9F.s:25     .text.HAL_TIM_PWM_MspInit:0000000000000000 HAL_TIM_PWM_MspInit
     /tmp/ccozpO9F.s:67     .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccozpO9F.s:74     .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccozpO9F.s:144    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccozpO9F.s:151    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccozpO9F.s:256    .text.MX_TIM2_Init:0000000000000078 $d
                            *COM*:0000000000000040 htim2
     /tmp/ccozpO9F.s:261    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 $t
     /tmp/ccozpO9F.s:268    .text.HAL_TIM_PWM_MspDeInit:0000000000000000 HAL_TIM_PWM_MspDeInit
     /tmp/ccozpO9F.s:293    .text.HAL_TIM_PWM_MspDeInit:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
Error_Handler
