ARM GAS  /tmp/ccxf1fbt.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	HAL_ADC_MspInit:
  26              	.LFB286:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @file    stm32l4xx_hal_adc.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          "stm32l4xx_hal_adc_ex.c".
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   [..]
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC calibration
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC conversion of regular group.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       Vdda or to an external voltage reference).
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                      ##### How to use this driver #####
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ==============================================================================
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Enable the ADC interface
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from APB clock
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    or asynchronous clock derived from system clock, PLLSAI1 or the PLLSAI2
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    running up to 80MHz.
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL enable:                       (optional: if asynchronous clock 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL;
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_GPIO_Init()
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ADCx_IRQHandler().
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ================================================================
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_Init().
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         monitored, thresholds, ...)
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Execution of ADC conversions ***
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ====================================
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         conversion accuracy
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         transfer by DMA.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by polling:
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start()
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
ARM GAS  /tmp/ccxf1fbt.s 			page 4


 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion by interruption:
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (this function must be implemented in user program)
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Retrieve conversion results
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 (these functions must be implemented in user program)
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 destination variable address.
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      *** Deinitialization of ADC ***
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ============================================================
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Disable the ADC interface
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         (++) ADC clock disable
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              (+++) Example:
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    other device clock parameters configuration:
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) ADC pins configuration
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
ARM GAS  /tmp/ccxf1fbt.s 			page 5


 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Deinitialize the DMA
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_DMA_Init().
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     *** Callback registration ***
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     =============================================
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      to register an interrupt callback.
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and a pointer to the user callback function.
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      weak function.
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      and the Callback ID.
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      This function allows to reset following callbacks:
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 6


 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      [..]
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      are set to the corresponding weak functions.
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   @endverbatim
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @attention
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * All rights reserved.</center></h2>
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ******************************************************************************
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #include "stm32l4xx_hal.h"
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC ADC
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief ADC HAL module driver
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /tmp/ccxf1fbt.s 			page 7


 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((ADC_CFGR_RES    | ADC_CFGR_ALIGN   |\
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                                                         when no regular conversion 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Timeout fixed to longest ADC conversion possible, for 1 channel:           */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - maximum sampling time (640.5 adc_clk)                                  */
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC resolution (Tsar 12 bits= 12.5 adc_clk)                            */
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - System clock / ADC clock <= 4096 (hypothesis of maximum clock ratio)   */
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   - ADC oversampling ratio 256                                             */
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /*   Calculation: 653 * 4096 * 256 CPU clock cycles max                       */
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (653UL * 4096UL * 256UL)  /*!< ADC conversion completion
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) De-initialize the ADC.
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 8


 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in header of this file).
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         before HAL_ADC_Init().
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs are disabled.
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without  disabling the other ADCs.
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DFSDMCFG_MODE(hadc));
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
ARM GAS  /tmp/ccxf1fbt.s 			page 9


 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the ADC Callback settings */
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Init the low level hardware */
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to none */
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize Lock */
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC deep power down mode */
ARM GAS  /tmp/ccxf1fbt.s 			page 10


 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * (SystemCoreClock / (100000UL 
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       wait_loop_index--;
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - clock configuration                                                 */
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
ARM GAS  /tmp/ccxf1fbt.s 			page 11


 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*                                                                      */
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* parameters):                                                         */
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - data alignment                           Init.DataAlign             */
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* start.                                                                 */
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       software start.                                                  */
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update Configuration Register CFGR */
ARM GAS  /tmp/ccxf1fbt.s 			page 12


 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - DMA continuous request          Init.DMAContinuousRequests          */
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpCFGR = (ADC_CFGR_DFSDM(hadc)                                            |
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configuration of Oversampler:                                      */
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling Ratio                                              */
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Right bit shift                                                 */
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Triggered mode                                                  */
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                           */
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2,
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSS  |
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_TROVS |
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSM,
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.Ratio         |
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   );
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
ARM GAS  /tmp/ccxf1fbt.s 			page 13


 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Initialize the ADC state */
 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         common group is still running.
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check ADC handle */
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc == NULL)
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
ARM GAS  /tmp/ccxf1fbt.s 			page 14


 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Stop potential conversion on going */
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* injected sequence.                                                       */
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the ADC peripheral */
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state */
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register IER */
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register ISR */
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CR */
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      no direct reset applicable.
ARM GAS  /tmp/ccxf1fbt.s 			page 15


 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR */
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_FIELDS);
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CFGR2 */
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR1 */
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SMPR2 */
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR1 */
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR1, ADC_TR1_HT1 | ADC_TR1_LT1);
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR2 */
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR2, ADC_TR2_HT2 | ADC_TR2_LT2);
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register TR3 */
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->TR3, ADC_TR3_HT3 | ADC_TR3_LT3);
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR1 */
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR2 */
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR3 */
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register SQR4 */
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DR */
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR1 */
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_OFFSET2_EN | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_OFFSET3_EN | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_OFFSET4_EN | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
ARM GAS  /tmp/ccxf1fbt.s 			page 16


 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD2CR */
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register AWD3CR */
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register DIFSEL */
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register CALFACT */
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ADCs are disabled.   */
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - multimode related parameters (when this feature is available): MDMA,
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         DMACFG, DELAY, DUAL (set by HAL_ADCEx_MultiModeConfigChannel() API)
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     */
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware.
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      For example:
 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_FORCE_RESET();
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_RELEASE_RESET();
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_RCC_ADC_CLK_DISABLE();
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     Keep in mind that all ADCs use the same clock: disabling
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     the clock will reset all ADCs.
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* DeInit the low level hardware: RCC clock, NVIC */
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 17


 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to none */
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
  28              		.loc 1 910 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE286:
  38              		.section	.text.HAL_ADC_Init,"ax",%progbits
  39              		.align	1
  40              		.global	HAL_ADC_Init
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  44              		.fpu fpv4-sp-d16
  46              	HAL_ADC_Init:
  47              	.LFB284:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  48              		.loc 1 403 0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 8
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              	.LVL1:
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  53              		.loc 1 403 0
  54 0000 30B5     		push	{r4, r5, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 12
  57              		.cfi_offset 4, -12
  58              		.cfi_offset 5, -8
  59              		.cfi_offset 14, -4
  60 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccxf1fbt.s 			page 18


  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 24
  63              	.LVL2:
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
  64              		.loc 1 407 0
  65 0004 0023     		movs	r3, #0
  66 0006 0193     		str	r3, [sp, #4]
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
  67              		.loc 1 412 0
  68 0008 0028     		cmp	r0, #0
  69 000a 00F04982 		beq	.L47
  70 000e 0446     		mov	r4, r0
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  71              		.loc 1 418 0
  72 0010 0268     		ldr	r2, [r0]
  73 0012 9D4B     		ldr	r3, .L66
  74 0014 9A42     		cmp	r2, r3
  75 0016 04D0     		beq	.L4
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  76              		.loc 1 418 0 is_stmt 0 discriminator 1
  77 0018 4FF4D171 		mov	r1, #418
  78 001c 9B48     		ldr	r0, .L66+4
  79              	.LVL3:
  80 001e FFF7FEFF 		bl	assert_failed
  81              	.LVL4:
  82              	.L4:
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  83              		.loc 1 419 0 is_stmt 1
  84 0022 6368     		ldr	r3, [r4, #4]
  85 0024 B3F5803F 		cmp	r3, #65536
  86 0028 2CD0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  87              		.loc 1 419 0 is_stmt 0 discriminator 1
  88 002a B3F5003F 		cmp	r3, #131072
  89 002e 29D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  90              		.loc 1 419 0 discriminator 2
  91 0030 B3F5403F 		cmp	r3, #196608
  92 0034 26D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  93              		.loc 1 419 0 discriminator 3
  94 0036 2BB3     		cbz	r3, .L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  95              		.loc 1 419 0 discriminator 4
  96 0038 B3F5802F 		cmp	r3, #262144
  97 003c 22D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  98              		.loc 1 419 0 discriminator 5
  99 003e B3F5002F 		cmp	r3, #524288
 100 0042 1FD0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 101              		.loc 1 419 0 discriminator 6
 102 0044 B3F5402F 		cmp	r3, #786432
 103 0048 1CD0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 104              		.loc 1 419 0 discriminator 7
 105 004a B3F5801F 		cmp	r3, #1048576
ARM GAS  /tmp/ccxf1fbt.s 			page 19


 106 004e 19D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 107              		.loc 1 419 0 discriminator 8
 108 0050 B3F5A01F 		cmp	r3, #1310720
 109 0054 16D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 110              		.loc 1 419 0 discriminator 9
 111 0056 B3F5C01F 		cmp	r3, #1572864
 112 005a 13D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 113              		.loc 1 419 0 discriminator 10
 114 005c B3F5E01F 		cmp	r3, #1835008
 115 0060 10D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 116              		.loc 1 419 0 discriminator 11
 117 0062 B3F5001F 		cmp	r3, #2097152
 118 0066 0DD0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 119              		.loc 1 419 0 discriminator 12
 120 0068 B3F5101F 		cmp	r3, #2359296
 121 006c 0AD0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 122              		.loc 1 419 0 discriminator 13
 123 006e B3F5201F 		cmp	r3, #2621440
 124 0072 07D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 125              		.loc 1 419 0 discriminator 14
 126 0074 B3F5301F 		cmp	r3, #2883584
 127 0078 04D0     		beq	.L5
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 128              		.loc 1 419 0 discriminator 15
 129 007a 40F2A311 		movw	r1, #419
 130 007e 8348     		ldr	r0, .L66+4
 131 0080 FFF7FEFF 		bl	assert_failed
 132              	.LVL5:
 133              	.L5:
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 134              		.loc 1 420 0 is_stmt 1
 135 0084 A368     		ldr	r3, [r4, #8]
 136 0086 53B1     		cbz	r3, .L6
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 137              		.loc 1 420 0 is_stmt 0 discriminator 1
 138 0088 082B     		cmp	r3, #8
 139 008a 08D0     		beq	.L6
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 140              		.loc 1 420 0 discriminator 2
 141 008c 102B     		cmp	r3, #16
 142 008e 06D0     		beq	.L6
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 143              		.loc 1 420 0 discriminator 3
 144 0090 182B     		cmp	r3, #24
 145 0092 04D0     		beq	.L6
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 146              		.loc 1 420 0 discriminator 4
 147 0094 4FF4D271 		mov	r1, #420
 148 0098 7C48     		ldr	r0, .L66+4
 149 009a FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccxf1fbt.s 			page 20


 150              	.LVL6:
 151              	.L6:
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 152              		.loc 1 424 0 is_stmt 1
 153 009e E368     		ldr	r3, [r4, #12]
 154 00a0 33B1     		cbz	r3, .L7
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 155              		.loc 1 424 0 is_stmt 0 discriminator 1
 156 00a2 202B     		cmp	r3, #32
 157 00a4 04D0     		beq	.L7
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 158              		.loc 1 424 0 discriminator 2
 159 00a6 4FF4D471 		mov	r1, #424
 160 00aa 7848     		ldr	r0, .L66+4
 161 00ac FFF7FEFF 		bl	assert_failed
 162              	.LVL7:
 163              	.L7:
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 164              		.loc 1 425 0 is_stmt 1
 165 00b0 2369     		ldr	r3, [r4, #16]
 166 00b2 012B     		cmp	r3, #1
 167 00b4 04D9     		bls	.L8
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 168              		.loc 1 425 0 is_stmt 0 discriminator 1
 169 00b6 40F2A911 		movw	r1, #425
 170 00ba 7448     		ldr	r0, .L66+4
 171 00bc FFF7FEFF 		bl	assert_failed
 172              	.LVL8:
 173              	.L8:
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 174              		.loc 1 426 0 is_stmt 1
 175 00c0 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 176 00c2 012B     		cmp	r3, #1
 177 00c4 04D9     		bls	.L9
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 178              		.loc 1 426 0 is_stmt 0 discriminator 1
 179 00c6 4FF4D571 		mov	r1, #426
 180 00ca 7048     		ldr	r0, .L66+4
 181 00cc FFF7FEFF 		bl	assert_failed
 182              	.LVL9:
 183              	.L9:
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 184              		.loc 1 427 0 is_stmt 1
 185 00d0 E36A     		ldr	r3, [r4, #44]
 186 00d2 6BB1     		cbz	r3, .L10
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 187              		.loc 1 427 0 is_stmt 0 discriminator 1
 188 00d4 B3F5806F 		cmp	r3, #1024
 189 00d8 0AD0     		beq	.L10
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 190              		.loc 1 427 0 discriminator 2
 191 00da B3F5006F 		cmp	r3, #2048
 192 00de 07D0     		beq	.L10
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 193              		.loc 1 427 0 discriminator 3
 194 00e0 B3F5406F 		cmp	r3, #3072
 195 00e4 04D0     		beq	.L10
ARM GAS  /tmp/ccxf1fbt.s 			page 21


 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc, hadc->Init.ExternalTrigConv));
 196              		.loc 1 427 0 discriminator 4
 197 00e6 40F2AB11 		movw	r1, #427
 198 00ea 6848     		ldr	r0, .L66+4
 199 00ec FFF7FEFF 		bl	assert_failed
 200              	.LVL10:
 201              	.L10:
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 202              		.loc 1 428 0 is_stmt 1
 203 00f0 A36A     		ldr	r3, [r4, #40]
 204 00f2 B3F5806F 		cmp	r3, #1024
 205 00f6 2ED0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 206              		.loc 1 428 0 is_stmt 0 discriminator 1
 207 00f8 B3F5886F 		cmp	r3, #1088
 208 00fc 2BD0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 209              		.loc 1 428 0 discriminator 2
 210 00fe B3F5906F 		cmp	r3, #1152
 211 0102 28D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 212              		.loc 1 428 0 discriminator 3
 213 0104 B3F5986F 		cmp	r3, #1216
 214 0108 25D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 215              		.loc 1 428 0 discriminator 4
 216 010a B3F5A06F 		cmp	r3, #1280
 217 010e 22D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 218              		.loc 1 428 0 discriminator 5
 219 0110 B3F5A86F 		cmp	r3, #1344
 220 0114 1FD0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 221              		.loc 1 428 0 discriminator 6
 222 0116 B3F5B06F 		cmp	r3, #1408
 223 011a 1CD0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 224              		.loc 1 428 0 discriminator 7
 225 011c B3F5B86F 		cmp	r3, #1472
 226 0120 19D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 227              		.loc 1 428 0 discriminator 8
 228 0122 B3F5C06F 		cmp	r3, #1536
 229 0126 16D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 230              		.loc 1 428 0 discriminator 9
 231 0128 B3F5C86F 		cmp	r3, #1600
 232 012c 13D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 233              		.loc 1 428 0 discriminator 10
 234 012e B3F5D06F 		cmp	r3, #1664
 235 0132 10D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 236              		.loc 1 428 0 discriminator 11
 237 0134 B3F5D86F 		cmp	r3, #1728
 238 0138 0DD0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
ARM GAS  /tmp/ccxf1fbt.s 			page 22


 239              		.loc 1 428 0 discriminator 12
 240 013a B3F5E06F 		cmp	r3, #1792
 241 013e 0AD0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 242              		.loc 1 428 0 discriminator 13
 243 0140 B3F5E86F 		cmp	r3, #1856
 244 0144 07D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 245              		.loc 1 428 0 discriminator 14
 246 0146 B3F5F06F 		cmp	r3, #1920
 247 014a 04D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 248              		.loc 1 428 0 discriminator 15
 249 014c B3F5F86F 		cmp	r3, #1984
 250 0150 01D0     		beq	.L11
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 251              		.loc 1 428 0 discriminator 16
 252 0152 002B     		cmp	r3, #0
 253 0154 6DD1     		bne	.L58
 254              	.L11:
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 255              		.loc 1 429 0 is_stmt 1
 256 0156 94F83030 		ldrb	r3, [r4, #48]	@ zero_extendqisi2
 257 015a 012B     		cmp	r3, #1
 258 015c 04D9     		bls	.L12
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 259              		.loc 1 429 0 is_stmt 0 discriminator 1
 260 015e 40F2AD11 		movw	r1, #429
 261 0162 4A48     		ldr	r0, .L66+4
 262 0164 FFF7FEFF 		bl	assert_failed
 263              	.LVL11:
 264              	.L12:
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 265              		.loc 1 430 0 is_stmt 1
 266 0168 6369     		ldr	r3, [r4, #20]
 267 016a 042B     		cmp	r3, #4
 268 016c 06D0     		beq	.L13
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 269              		.loc 1 430 0 is_stmt 0 discriminator 1
 270 016e 082B     		cmp	r3, #8
 271 0170 04D0     		beq	.L13
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 272              		.loc 1 430 0 discriminator 2
 273 0172 4FF4D771 		mov	r1, #430
 274 0176 4548     		ldr	r0, .L66+4
 275 0178 FFF7FEFF 		bl	assert_failed
 276              	.LVL12:
 277              	.L13:
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 278              		.loc 1 431 0 is_stmt 1
 279 017c 636B     		ldr	r3, [r4, #52]
 280 017e 3BB1     		cbz	r3, .L14
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 281              		.loc 1 431 0 is_stmt 0 discriminator 1
 282 0180 B3F5805F 		cmp	r3, #4096
 283 0184 04D0     		beq	.L14
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
ARM GAS  /tmp/ccxf1fbt.s 			page 23


 284              		.loc 1 431 0 discriminator 2
 285 0186 40F2AF11 		movw	r1, #431
 286 018a 4048     		ldr	r0, .L66+4
 287 018c FFF7FEFF 		bl	assert_failed
 288              	.LVL13:
 289              	.L14:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 290              		.loc 1 432 0 is_stmt 1
 291 0190 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 292 0192 012B     		cmp	r3, #1
 293 0194 04D9     		bls	.L15
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 294              		.loc 1 432 0 is_stmt 0 discriminator 1
 295 0196 4FF4D871 		mov	r1, #432
 296 019a 3C48     		ldr	r0, .L66+4
 297 019c FFF7FEFF 		bl	assert_failed
 298              	.LVL14:
 299              	.L15:
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 300              		.loc 1 433 0 is_stmt 1
 301 01a0 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 302 01a4 012B     		cmp	r3, #1
 303 01a6 04D9     		bls	.L16
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 304              		.loc 1 433 0 is_stmt 0 discriminator 1
 305 01a8 40F2B111 		movw	r1, #433
 306 01ac 3748     		ldr	r0, .L66+4
 307 01ae FFF7FEFF 		bl	assert_failed
 308              	.LVL15:
 309              	.L16:
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 310              		.loc 1 435 0 is_stmt 1
 311 01b2 2369     		ldr	r3, [r4, #16]
 312 01b4 83B1     		cbz	r3, .L17
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 313              		.loc 1 437 0
 314 01b6 E369     		ldr	r3, [r4, #28]
 315 01b8 013B     		subs	r3, r3, #1
 316 01ba 0F2B     		cmp	r3, #15
 317 01bc 3FD8     		bhi	.L59
 318              	.L18:
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 319              		.loc 1 438 0
 320 01be 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 321 01c2 012B     		cmp	r3, #1
 322 01c4 04D9     		bls	.L19
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 323              		.loc 1 438 0 is_stmt 0 discriminator 1
 324 01c6 4FF4DB71 		mov	r1, #438
 325 01ca 3048     		ldr	r0, .L66+4
 326 01cc FFF7FEFF 		bl	assert_failed
 327              	.LVL16:
 328              	.L19:
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 329              		.loc 1 440 0 is_stmt 1
 330 01d0 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 331 01d4 012B     		cmp	r3, #1
ARM GAS  /tmp/ccxf1fbt.s 			page 24


 332 01d6 38D0     		beq	.L60
 333              	.L17:
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 334              		.loc 1 447 0
 335 01d8 94F82030 		ldrb	r3, [r4, #32]	@ zero_extendqisi2
 336 01dc 012B     		cmp	r3, #1
 337 01de 3ED0     		beq	.L61
 338              	.L20:
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 339              		.loc 1 451 0
 340 01e0 636D     		ldr	r3, [r4, #84]
 341 01e2 002B     		cmp	r3, #0
 342 01e4 44D0     		beq	.L62
 343              	.L21:
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 344              		.loc 1 485 0
 345 01e6 2368     		ldr	r3, [r4]
 346              	.LVL17:
 347              	.LBB258:
 348              	.LBB259:
 349              		.file 2 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  17:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  19:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  20:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  22:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  23:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  24:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  27:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  28:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  30:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  31:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  32:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  33:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  34:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  35:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  36:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 25


  37:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  39:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  40:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  41:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  44:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  47:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  48:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  49:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  52:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  53:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  54:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  55:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  56:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  57:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  58:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  59:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  60:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  61:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  62:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  63:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  68:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  69:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  70:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  71:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  72:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  73:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  74:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  75:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  76:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  77:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  78:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  79:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  80:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  81:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  82:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  83:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  89:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
ARM GAS  /tmp/ccxf1fbt.s 			page 26


  94:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
  99:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
ARM GAS  /tmp/ccxf1fbt.s 			page 27


 151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
ARM GAS  /tmp/ccxf1fbt.s 			page 28


 208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
ARM GAS  /tmp/ccxf1fbt.s 			page 29


 265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
ARM GAS  /tmp/ccxf1fbt.s 			page 30


 322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
 344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 31


 379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 serie, if ADC group injected is us
 402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
ARM GAS  /tmp/ccxf1fbt.s 			page 32


 436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  /tmp/ccxf1fbt.s 			page 33


 493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
ARM GAS  /tmp/ccxf1fbt.s 			page 34


 550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
ARM GAS  /tmp/ccxf1fbt.s 			page 35


 607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
ARM GAS  /tmp/ccxf1fbt.s 			page 36


 664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement pathes all d
 691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 37


 721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
ARM GAS  /tmp/ccxf1fbt.s 			page 38


 778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
ARM GAS  /tmp/ccxf1fbt.s 			page 39


 835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
ARM GAS  /tmp/ccxf1fbt.s 			page 40


 892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
 915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
ARM GAS  /tmp/ccxf1fbt.s 			page 41


 949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
 972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
 997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 42


1006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
ARM GAS  /tmp/ccxf1fbt.s 			page 43


1063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  /tmp/ccxf1fbt.s 			page 44


1120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
1143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
1157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
1158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
ARM GAS  /tmp/ccxf1fbt.s 			page 45


1177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
ARM GAS  /tmp/ccxf1fbt.s 			page 46


1234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
1257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
ARM GAS  /tmp/ccxf1fbt.s 			page 47


1291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
1320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 serie:                                                         */
1332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
ARM GAS  /tmp/ccxf1fbt.s 			page 48


1348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
1354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    (120UL)  /*!< Delay for temperature sensor stabilization
1360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
1363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
1394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
1402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 49


1405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
ARM GAS  /tmp/ccxf1fbt.s 			page 50


1462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (                                                                                     \
1464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                                     \
1466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
1467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
ARM GAS  /tmp/ccxf1fbt.s 			page 51


1519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (                                                                                             
1524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                                             
1528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
1541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  /tmp/ccxf1fbt.s 			page 52


1576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  /tmp/ccxf1fbt.s 			page 53


1633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
ARM GAS  /tmp/ccxf1fbt.s 			page 54


1690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1)                                                \
1709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ? (                                                                        \
1710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                         \
1711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                         \
1712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                  \
1713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       )                                                                        \
1714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       :                                                                        \
1715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__ADC_INSTANCE__) == ADC2)                                             \
1716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ? (                                                                      \
1717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                     \
1718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                     \
1719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                        \
1720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         )                                                                      \
1721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         :                                                                      \
1722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         ((__ADC_INSTANCE__) == ADC3)                                           \
1723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         ? (                                                                    \
1724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                   \
1725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                   \
1726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                   \
1727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                   \
1728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                      \
1729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           )                                                                    \
1730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           :                                                                    \
1731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           (0UL)                                                                 \
1732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1)                                                \
1736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ? (                                                                        \
1737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                         \
1738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                         \
1739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                  \
1740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       )                                                                        \
1741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       :                                                                        \
1742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__ADC_INSTANCE__) == ADC2)                                             \
1743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ? (                                                                      \
1744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                     \
1745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                     \
1746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                        \
ARM GAS  /tmp/ccxf1fbt.s 			page 55


1747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         )                                                                      \
1748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         :                                                                      \
1749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         (0UL)                                                                   \
1750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
1754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
1761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
1768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
ARM GAS  /tmp/ccxf1fbt.s 			page 56


1804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
ARM GAS  /tmp/ccxf1fbt.s 			page 57


1861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
1883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
ARM GAS  /tmp/ccxf1fbt.s 			page 58


1918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
ARM GAS  /tmp/ccxf1fbt.s 			page 59


1975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
1992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
1998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
1999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
ARM GAS  /tmp/ccxf1fbt.s 			page 60


2032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )?                                                                         \
2035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (ADC1)                                                                    \
2036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
2037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (__ADCx__)                                                                \
2038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
ARM GAS  /tmp/ccxf1fbt.s 			page 61


2089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DATA__)                                                                 \
2135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
ARM GAS  /tmp/ccxf1fbt.s 			page 62


2146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
2169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
2176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       (__ADC_RESOLUTION__),                    \
2195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       LL_ADC_RESOLUTION_12B))
2196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
ARM GAS  /tmp/ccxf1fbt.s 			page 63


2203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
2225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
2248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
ARM GAS  /tmp/ccxf1fbt.s 			page 64


2260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((( (                                                                        \
2307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * 1000UL)                                                     \
2310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        -                                                                       \
2311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * 1000UL)                                                     \
2313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       )                                                                        \
2314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
ARM GAS  /tmp/ccxf1fbt.s 			page 65


2317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register uint32_t data_reg_addr;
2373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 66


2374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
2392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
2397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, if ADC group injected is used, some
2409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
2411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
ARM GAS  /tmp/ccxf1fbt.s 			page 67


2431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
ARM GAS  /tmp/ccxf1fbt.s 			page 68


2488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
ARM GAS  /tmp/ccxf1fbt.s 			page 69


2545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
ARM GAS  /tmp/ccxf1fbt.s 			page 70


2602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 71


2659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             IRQ vector sequencer.
2694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
ARM GAS  /tmp/ccxf1fbt.s 			page 72


2716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             IRQ vector sequencer.
2747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
ARM GAS  /tmp/ccxf1fbt.s 			page 73


2773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
2781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
2782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
2783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  /tmp/ccxf1fbt.s 			page 74


2830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
2869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccxf1fbt.s 			page 75


2887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
2931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
2932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
2935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
2939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
ARM GAS  /tmp/ccxf1fbt.s 			page 76


2944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
2945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
2949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
2950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
2951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
2952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
2961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
2965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
2969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
2970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
2971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
2972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
2973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
2974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
2979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
2980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
2981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
2982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
2989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
2990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
2991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
2994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
2999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 77


3001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
ARM GAS  /tmp/ccxf1fbt.s 			page 78


3058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
3074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
ARM GAS  /tmp/ccxf1fbt.s 			page 79


3115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET
3154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
ARM GAS  /tmp/ccxf1fbt.s 			page 80


3172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
ARM GAS  /tmp/ccxf1fbt.s 			page 81


3229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
ARM GAS  /tmp/ccxf1fbt.s 			page 82


3286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
ARM GAS  /tmp/ccxf1fbt.s 			page 83


3343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
3389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
3395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
3397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccxf1fbt.s 			page 84


3400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
3409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
ARM GAS  /tmp/ccxf1fbt.s 			page 85


3457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_M
3483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
3493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /tmp/ccxf1fbt.s 			page 86


3514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
3523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
ARM GAS  /tmp/ccxf1fbt.s 			page 87


3571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOF
3588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
3593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccxf1fbt.s 			page 88


3628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
ARM GAS  /tmp/ccxf1fbt.s 			page 89


3685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 90


3742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
3747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
ARM GAS  /tmp/ccxf1fbt.s 			page 91


3799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
3800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
ARM GAS  /tmp/ccxf1fbt.s 			page 92


3856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFS
3880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
3892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
ARM GAS  /tmp/ccxf1fbt.s 			page 93


3913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
3927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
3929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
3936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
3938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
3942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
3944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
3945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
3946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
3953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
3956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
3957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
3958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
3959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
3964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
3968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
3969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
ARM GAS  /tmp/ccxf1fbt.s 			page 94


3970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
3971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
3972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
3975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
3978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
3979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
3980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
3981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
3983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
3985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
3989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
3992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
3993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
3994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
3997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
3998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
ARM GAS  /tmp/ccxf1fbt.s 			page 95


4027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccxf1fbt.s 			page 96


4084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
ARM GAS  /tmp/ccxf1fbt.s 			page 97


4141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
4184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
ARM GAS  /tmp/ccxf1fbt.s 			page 98


4198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
4242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
ARM GAS  /tmp/ccxf1fbt.s 			page 99


4255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
4285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
4293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
4300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
ARM GAS  /tmp/ccxf1fbt.s 			page 100


4312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  /tmp/ccxf1fbt.s 			page 101


4369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
ARM GAS  /tmp/ccxf1fbt.s 			page 102


4426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
ARM GAS  /tmp/ccxf1fbt.s 			page 103


4483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1U
4517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
4533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
ARM GAS  /tmp/ccxf1fbt.s 			page 104


4540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
4549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
4550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
4553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
4557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
4564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
ARM GAS  /tmp/ccxf1fbt.s 			page 105


4597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_RE
4649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 106


4654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
4662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
ARM GAS  /tmp/ccxf1fbt.s 			page 107


4711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SM
4741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
ARM GAS  /tmp/ccxf1fbt.s 			page 108


4768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
ARM GAS  /tmp/ccxf1fbt.s 			page 109


4825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
4865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
4869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
4870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
ARM GAS  /tmp/ccxf1fbt.s 			page 110


4882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
4926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
4927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
4928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
4929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
4930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
4931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
4932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
4933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
4934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
4935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
4936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
4937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
4938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
ARM GAS  /tmp/ccxf1fbt.s 			page 111


4939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
4940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
4941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
4942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
4943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
4944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
4945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
4946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
4947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
4948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
4949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
4950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
4951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
4952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
4953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
4954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
4955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
4956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
4957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
4958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
4959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
4960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
4961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
4962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
4963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
4964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
4965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
4966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
4967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
4968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
4969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
4970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
4971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
4972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
4973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
4974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
4975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
4976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
4977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
4978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
4979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
4980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
4981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
4982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
4983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
4984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
4985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
4986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
4987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
4988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
4989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
4990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
4991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
4992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
4993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
4995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  /tmp/ccxf1fbt.s 			page 112


4996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
4999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MA
5010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
ARM GAS  /tmp/ccxf1fbt.s 			page 113


5053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
ARM GAS  /tmp/ccxf1fbt.s 			page 114


5110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFF
5142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_
5145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  )
5160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
ARM GAS  /tmp/ccxf1fbt.s 			page 115


5167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
5172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
5191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
5198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
ARM GAS  /tmp/ccxf1fbt.s 			page 116


5224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
5233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
5256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
5265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
5271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
ARM GAS  /tmp/ccxf1fbt.s 			page 117


5281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
5325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
5335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
ARM GAS  /tmp/ccxf1fbt.s 			page 118


5338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
5346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFS
5362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
5367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
ARM GAS  /tmp/ccxf1fbt.s 			page 119


5395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
5444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, oversampling discontinuous mode
5445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
ARM GAS  /tmp/ccxf1fbt.s 			page 120


5452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
5483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
5484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
ARM GAS  /tmp/ccxf1fbt.s 			page 121


5509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 122


5566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 123


5623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
ARM GAS  /tmp/ccxf1fbt.s 			page 124


5680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
ARM GAS  /tmp/ccxf1fbt.s 			page 125


5737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 126


5794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccxf1fbt.s 			page 127


5851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
5864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
 350              		.loc 2 5865 0
 351 01e8 9A68     		ldr	r2, [r3, #8]
 352 01ea 12F0005F 		tst	r2, #536870912
 353 01ee 47D0     		beq	.L48
 354 01f0 0122     		movs	r2, #1
 355              	.L22:
 356              	.LVL18:
 357              	.LBE259:
 358              	.LBE258:
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 359              		.loc 1 485 0
 360 01f2 2AB1     		cbz	r2, .L23
 361              	.LVL19:
 362              	.LBB261:
 363              	.LBB262:
5854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 364              		.loc 2 5854 0
 365 01f4 9A68     		ldr	r2, [r3, #8]
 366 01f6 22F02042 		bic	r2, r2, #-1610612736
 367 01fa 22F03F02 		bic	r2, r2, #63
 368 01fe 9A60     		str	r2, [r3, #8]
 369              	.LVL20:
 370              	.L23:
 371              	.LBE262:
 372              	.LBE261:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 373              		.loc 1 495 0
 374 0200 2268     		ldr	r2, [r4]
 375              	.LVL21:
 376              	.LBB263:
 377              	.LBB264:
5866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
5871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  /tmp/ccxf1fbt.s 			page 128


5877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 378              		.loc 2 5914 0
 379 0202 9368     		ldr	r3, [r2, #8]
 380 0204 13F0805F 		tst	r3, #268435456
 381 0208 3CD0     		beq	.L49
 382 020a 0123     		movs	r3, #1
 383              	.L24:
 384              	.LVL22:
 385              	.LBE264:
 386              	.LBE263:
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 387              		.loc 1 495 0
 388 020c 002B     		cmp	r3, #0
 389 020e 49D1     		bne	.L25
 390              	.LVL23:
 391              	.LBB266:
 392              	.LBB267:
5887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 393              		.loc 2 5887 0
 394 0210 9368     		ldr	r3, [r2, #8]
ARM GAS  /tmp/ccxf1fbt.s 			page 129


 395 0212 23F01043 		bic	r3, r3, #-1879048192
 396 0216 23F03F03 		bic	r3, r3, #63
 397 021a 43F08053 		orr	r3, r3, #268435456
 398 021e 9360     		str	r3, [r2, #8]
 399              	.LVL24:
 400              	.LBE267:
 401              	.LBE266:
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 402              		.loc 1 503 0
 403 0220 1B4B     		ldr	r3, .L66+8
 404 0222 1B68     		ldr	r3, [r3]
 405 0224 9B09     		lsrs	r3, r3, #6
 406 0226 1B4A     		ldr	r2, .L66+12
 407 0228 A2FB0323 		umull	r2, r3, r2, r3
 408 022c 9B09     		lsrs	r3, r3, #6
 409 022e 0193     		str	r3, [sp, #4]
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 410              		.loc 1 504 0
 411 0230 35E0     		b	.L26
 412              	.L58:
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 413              		.loc 1 428 0 discriminator 17
 414 0232 4FF4D671 		mov	r1, #428
 415 0236 1548     		ldr	r0, .L66+4
 416 0238 FFF7FEFF 		bl	assert_failed
 417              	.LVL25:
 418 023c 8BE7     		b	.L11
 419              	.L59:
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 420              		.loc 1 437 0 discriminator 1
 421 023e 40F2B511 		movw	r1, #437
 422 0242 1248     		ldr	r0, .L66+4
 423 0244 FFF7FEFF 		bl	assert_failed
 424              	.LVL26:
 425 0248 B9E7     		b	.L18
 426              	.L60:
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 427              		.loc 1 442 0
 428 024a 636A     		ldr	r3, [r4, #36]
 429 024c 013B     		subs	r3, r3, #1
 430 024e 072B     		cmp	r3, #7
 431 0250 C2D9     		bls	.L17
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 432              		.loc 1 442 0 is_stmt 0 discriminator 1
 433 0252 4FF4DD71 		mov	r1, #442
 434 0256 0D48     		ldr	r0, .L66+4
 435 0258 FFF7FEFF 		bl	assert_failed
 436              	.LVL27:
 437 025c BCE7     		b	.L17
 438              	.L61:
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 439              		.loc 1 447 0 is_stmt 1 discriminator 1
 440 025e 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 441 0260 012B     		cmp	r3, #1
 442 0262 BDD1     		bne	.L20
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 443              		.loc 1 447 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccxf1fbt.s 			page 130


 444 0264 40F2BF11 		movw	r1, #447
 445 0268 0848     		ldr	r0, .L66+4
 446 026a FFF7FEFF 		bl	assert_failed
 447              	.LVL28:
 448 026e B7E7     		b	.L20
 449              	.L62:
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 450              		.loc 1 474 0 is_stmt 1
 451 0270 2046     		mov	r0, r4
 452 0272 FFF7FEFF 		bl	HAL_ADC_MspInit
 453              	.LVL29:
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 454              		.loc 1 478 0
 455 0276 0023     		movs	r3, #0
 456 0278 A365     		str	r3, [r4, #88]
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 457              		.loc 1 481 0
 458 027a 84F85030 		strb	r3, [r4, #80]
 459 027e B2E7     		b	.L21
 460              	.LVL30:
 461              	.L48:
 462              	.LBB268:
 463              	.LBB260:
5865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 464              		.loc 2 5865 0
 465 0280 0022     		movs	r2, #0
 466 0282 B6E7     		b	.L22
 467              	.LVL31:
 468              	.L49:
 469              	.LBE260:
 470              	.LBE268:
 471              	.LBB269:
 472              	.LBB265:
 473              		.loc 2 5914 0
 474 0284 0023     		movs	r3, #0
 475 0286 C1E7     		b	.L24
 476              	.L67:
 477              		.align	2
 478              	.L66:
 479 0288 00000450 		.word	1342439424
 480 028c 00000000 		.word	.LC0
 481 0290 00000000 		.word	SystemCoreClock
 482 0294 632D3E05 		.word	87960931
 483              	.LVL32:
 484              	.L27:
 485              	.LBE265:
 486              	.LBE269:
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 487              		.loc 1 506 0
 488 0298 019B     		ldr	r3, [sp, #4]
 489 029a 013B     		subs	r3, r3, #1
 490 029c 0193     		str	r3, [sp, #4]
 491              	.L26:
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 492              		.loc 1 504 0
 493 029e 019B     		ldr	r3, [sp, #4]
 494 02a0 002B     		cmp	r3, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 131


 495 02a2 F9D1     		bne	.L27
 496              	.L25:
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 497              		.loc 1 513 0
 498 02a4 2368     		ldr	r3, [r4]
 499              	.LVL33:
 500              	.LBB270:
 501              	.LBB271:
 502              		.loc 2 5914 0
 503 02a6 9A68     		ldr	r2, [r3, #8]
 504 02a8 12F0805F 		tst	r2, #268435456
 505 02ac 7FD0     		beq	.L50
 506 02ae 0122     		movs	r2, #1
 507              	.L28:
 508              	.LVL34:
 509              	.LBE271:
 510              	.LBE270:
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 511              		.loc 1 513 0
 512 02b0 002A     		cmp	r2, #0
 513 02b2 7ED1     		bne	.L51
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 514              		.loc 1 516 0
 515 02b4 626D     		ldr	r2, [r4, #84]
 516 02b6 42F01002 		orr	r2, r2, #16
 517 02ba 6265     		str	r2, [r4, #84]
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 518              		.loc 1 519 0
 519 02bc A26D     		ldr	r2, [r4, #88]
 520 02be 42F00102 		orr	r2, r2, #1
 521 02c2 A265     		str	r2, [r4, #88]
 522              	.LVL35:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 523              		.loc 1 521 0
 524 02c4 0125     		movs	r5, #1
 525              	.LVL36:
 526              	.L29:
 527              	.LBB273:
 528              	.LBB274:
5915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for
5920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
5926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
5929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
5930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 132


5933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
5934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
5941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
5945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
5946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
5948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
5950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
5954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
5961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
5965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
5966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
5967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
5968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
5969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
5971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
5973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
5975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
5979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
5980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
5982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
5984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
5986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
ARM GAS  /tmp/ccxf1fbt.s 			page 133


5990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
5991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
5992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
5993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
5994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
5995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
5996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
5997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
5998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
5999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
6012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
ARM GAS  /tmp/ccxf1fbt.s 			page 134


6047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
6095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 529              		.loc 2 6096 0
 530 02c6 9A68     		ldr	r2, [r3, #8]
 531 02c8 12F0040F 		tst	r2, #4
 532 02cc 73D0     		beq	.L52
 533 02ce 0121     		movs	r1, #1
 534              	.L30:
 535              	.LVL37:
ARM GAS  /tmp/ccxf1fbt.s 			page 135


 536              	.LBE274:
 537              	.LBE273:
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 538              		.loc 1 530 0
 539 02d0 626D     		ldr	r2, [r4, #84]
 540 02d2 12F0100F 		tst	r2, #16
 541 02d6 40F0DB80 		bne	.L31
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 542              		.loc 1 531 0
 543 02da 0029     		cmp	r1, #0
 544 02dc 40F0D880 		bne	.L31
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 545              		.loc 1 535 0
 546 02e0 626D     		ldr	r2, [r4, #84]
 547 02e2 22F48172 		bic	r2, r2, #258
 548 02e6 42F00202 		orr	r2, r2, #2
 549 02ea 6265     		str	r2, [r4, #84]
 550              	.LVL38:
 551              	.LBB276:
 552              	.LBB277:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 553              		.loc 2 5974 0
 554 02ec 9B68     		ldr	r3, [r3, #8]
 555              	.LVL39:
 556 02ee 13F0010F 		tst	r3, #1
 557 02f2 62D0     		beq	.L53
 558 02f4 0123     		movs	r3, #1
 559              	.L32:
 560              	.LVL40:
 561              	.LBE277:
 562              	.LBE276:
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 563              		.loc 1 544 0
 564 02f6 6BB9     		cbnz	r3, .L33
 565              	.LVL41:
 566              	.LBB279:
 567              	.LBB280:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 568              		.loc 2 5974 0
 569 02f8 6A4B     		ldr	r3, .L68
 570 02fa 9B68     		ldr	r3, [r3, #8]
 571 02fc 13F0010F 		tst	r3, #1
 572 0300 5DD0     		beq	.L54
 573 0302 0123     		movs	r3, #1
 574              	.L34:
 575              	.LVL42:
 576              	.LBE280:
 577              	.LBE279:
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 578              		.loc 1 546 0
 579 0304 33B9     		cbnz	r3, .L33
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 580              		.loc 1 565 0
 581 0306 6368     		ldr	r3, [r4, #4]
 582              	.LVL43:
 583              	.LBB282:
 584              	.LBB283:
ARM GAS  /tmp/ccxf1fbt.s 			page 136


2442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 585              		.loc 2 2442 0
 586 0308 6749     		ldr	r1, .L68+4
 587 030a 8A68     		ldr	r2, [r1, #8]
 588 030c 22F47C12 		bic	r2, r2, #4128768
 589 0310 1343     		orrs	r3, r3, r2
 590              	.LVL44:
 591 0312 8B60     		str	r3, [r1, #8]
 592              	.LVL45:
 593              	.L33:
 594              	.LBE283:
 595              	.LBE282:
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 596              		.loc 1 578 0
 597 0314 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 598              		.loc 1 579 0
 599 0316 636B     		ldr	r3, [r4, #52]
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 600              		.loc 1 578 0
 601 0318 43EA4233 		orr	r3, r3, r2, lsl #13
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 602              		.loc 1 580 0
 603 031c E268     		ldr	r2, [r4, #12]
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.DataAlign                                                   |
 604              		.loc 1 579 0
 605 031e 1343     		orrs	r3, r3, r2
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 606              		.loc 1 581 0
 607 0320 A268     		ldr	r2, [r4, #8]
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Resolution                                                  |
 608              		.loc 1 580 0
 609 0322 1343     		orrs	r3, r3, r2
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 610              		.loc 1 582 0
 611 0324 94F82020 		ldrb	r2, [r4, #32]	@ zero_extendqisi2
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                 hadc->Init.Overrun                                                     |
 612              		.loc 1 578 0
 613 0328 43EA0243 		orr	r3, r3, r2, lsl #16
 614              	.LVL46:
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 615              		.loc 1 584 0
 616 032c 012A     		cmp	r2, #1
 617 032e 48D0     		beq	.L63
 618              	.L35:
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 619              		.loc 1 594 0
 620 0330 A26A     		ldr	r2, [r4, #40]
 621 0332 22B1     		cbz	r2, .L36
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 622              		.loc 1 596 0
 623 0334 02F47072 		and	r2, r2, #960
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  );
 624              		.loc 1 597 0
 625 0338 E16A     		ldr	r1, [r4, #44]
 626 033a 0A43     		orrs	r2, r2, r1
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
ARM GAS  /tmp/ccxf1fbt.s 			page 137


 627              		.loc 1 596 0
 628 033c 1343     		orrs	r3, r3, r2
 629              	.LVL47:
 630              	.L36:
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 631              		.loc 1 602 0
 632 033e 2168     		ldr	r1, [r4]
 633 0340 C868     		ldr	r0, [r1, #12]
 634 0342 5A4A     		ldr	r2, .L68+8
 635 0344 0240     		ands	r2, r2, r0
 636 0346 1343     		orrs	r3, r3, r2
 637              	.LVL48:
 638 0348 CB60     		str	r3, [r1, #12]
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 639              		.loc 1 610 0
 640 034a 2368     		ldr	r3, [r4]
 641              	.LVL49:
 642              	.LBB284:
 643              	.LBB285:
 644              		.loc 2 6096 0
 645 034c 9A68     		ldr	r2, [r3, #8]
 646 034e 12F0040F 		tst	r2, #4
 647 0352 3BD0     		beq	.L55
 648 0354 0121     		movs	r1, #1
 649              	.L37:
 650              	.LVL50:
 651              	.LBE285:
 652              	.LBE284:
 653              	.LBB287:
 654              	.LBB288:
6097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 138


6124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  /tmp/ccxf1fbt.s 			page 139


6181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
6196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6197:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6198:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6199:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6200:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6201:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6202:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6203:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6204:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6205:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6206:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6207:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6208:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6209:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
6210:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6211:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6212:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6213:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6214:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6215:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6216:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6217:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6218:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6219:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6220:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6221:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6222:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6223:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6224:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6225:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both
6226:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6227:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6228:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6229:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6230:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6231:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6232:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6233:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6234:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6235:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6236:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6237:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
ARM GAS  /tmp/ccxf1fbt.s 			page 140


6238:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6239:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6240:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6241:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6242:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6243:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6244:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6245:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6246:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6247:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6248:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6249:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6250:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6251:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6252:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6253:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
6254:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6256:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6258:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6259:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6260:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6261:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6262:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6263:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6264:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6265:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6267:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6268:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6269:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6270:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6271:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6272:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6273:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6274:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6275:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
6276:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6277:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
6278:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 655              		.loc 2 6279 0
 656 0356 9A68     		ldr	r2, [r3, #8]
 657 0358 12F0080F 		tst	r2, #8
 658 035c 38D0     		beq	.L56
 659 035e 0122     		movs	r2, #1
 660              	.L38:
 661              	.LVL51:
 662              	.LBE288:
 663              	.LBE287:
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 664              		.loc 1 612 0
 665 0360 B1B9     		cbnz	r1, .L39
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 666              		.loc 1 613 0
 667 0362 AAB9     		cbnz	r2, .L39
ARM GAS  /tmp/ccxf1fbt.s 			page 141


 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 668              		.loc 1 617 0
 669 0364 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 670              		.loc 1 618 0
 671 0366 94F83020 		ldrb	r2, [r4, #48]	@ zero_extendqisi2
 672 036a 5200     		lsls	r2, r2, #1
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                  ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 673              		.loc 1 616 0
 674 036c 42EA8132 		orr	r2, r2, r1, lsl #14
 675              	.LVL52:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 676              		.loc 1 620 0
 677 0370 D968     		ldr	r1, [r3, #12]
 678 0372 21F48041 		bic	r1, r1, #16384
 679 0376 21F00201 		bic	r1, r1, #2
 680 037a 0A43     		orrs	r2, r2, r1
 681              	.LVL53:
 682 037c DA60     		str	r2, [r3, #12]
 683              	.LVL54:
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 684              		.loc 1 622 0
 685 037e 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 686 0382 012B     		cmp	r3, #1
 687 0384 26D0     		beq	.L64
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 688              		.loc 1 649 0
 689 0386 2268     		ldr	r2, [r4]
 690 0388 1369     		ldr	r3, [r2, #16]
 691 038a 23F00103 		bic	r3, r3, #1
 692 038e 1361     		str	r3, [r2, #16]
 693              	.L39:
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 694              		.loc 1 663 0
 695 0390 2369     		ldr	r3, [r4, #16]
 696 0392 012B     		cmp	r3, #1
 697 0394 73D0     		beq	.L65
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 698              		.loc 1 670 0
 699 0396 2268     		ldr	r2, [r4]
 700 0398 136B     		ldr	r3, [r2, #48]
 701 039a 23F00F03 		bic	r3, r3, #15
 702 039e 1363     		str	r3, [r2, #48]
 703              	.L46:
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 704              		.loc 1 675 0
 705 03a0 636D     		ldr	r3, [r4, #84]
 706 03a2 23F00303 		bic	r3, r3, #3
 707 03a6 43F00103 		orr	r3, r3, #1
 708 03aa 6365     		str	r3, [r4, #84]
 709 03ac 75E0     		b	.L3
 710              	.LVL55:
 711              	.L50:
 712              	.LBB290:
 713              	.LBB272:
5914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 714              		.loc 2 5914 0
ARM GAS  /tmp/ccxf1fbt.s 			page 142


 715 03ae 0022     		movs	r2, #0
 716 03b0 7EE7     		b	.L28
 717              	.LVL56:
 718              	.L51:
 719              	.LBE272:
 720              	.LBE290:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpCFGR;
 721              		.loc 1 404 0
 722 03b2 0025     		movs	r5, #0
 723 03b4 87E7     		b	.L29
 724              	.LVL57:
 725              	.L52:
 726              	.LBB291:
 727              	.LBB275:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 728              		.loc 2 6096 0
 729 03b6 0021     		movs	r1, #0
 730 03b8 8AE7     		b	.L30
 731              	.LVL58:
 732              	.L53:
 733              	.LBE275:
 734              	.LBE291:
 735              	.LBB292:
 736              	.LBB278:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 737              		.loc 2 5974 0
 738 03ba 0023     		movs	r3, #0
 739 03bc 9BE7     		b	.L32
 740              	.LVL59:
 741              	.L54:
 742              	.LBE278:
 743              	.LBE292:
 744              	.LBB293:
 745              	.LBB281:
 746 03be 0023     		movs	r3, #0
 747 03c0 A0E7     		b	.L34
 748              	.LVL60:
 749              	.L63:
 750              	.LBE281:
 751              	.LBE293:
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 752              		.loc 1 586 0
 753 03c2 626A     		ldr	r2, [r4, #36]
 754 03c4 013A     		subs	r2, r2, #1
 755 03c6 43EA4243 		orr	r3, r3, r2, lsl #17
 756              	.LVL61:
 757 03ca B1E7     		b	.L35
 758              	.LVL62:
 759              	.L55:
 760              	.LBB294:
 761              	.LBB286:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 762              		.loc 2 6096 0
 763 03cc 0021     		movs	r1, #0
 764 03ce C2E7     		b	.L37
 765              	.LVL63:
 766              	.L56:
ARM GAS  /tmp/ccxf1fbt.s 			page 143


 767              	.LBE286:
 768              	.LBE294:
 769              	.LBB295:
 770              	.LBB289:
 771              		.loc 2 6279 0
 772 03d0 0022     		movs	r2, #0
 773 03d2 C5E7     		b	.L38
 774              	.LVL64:
 775              	.L64:
 776              	.LBE289:
 777              	.LBE295:
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 778              		.loc 1 624 0
 779 03d4 E36B     		ldr	r3, [r4, #60]
 780 03d6 93B1     		cbz	r3, .L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 781              		.loc 1 624 0 is_stmt 0 discriminator 1
 782 03d8 042B     		cmp	r3, #4
 783 03da 10D0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 784              		.loc 1 624 0 discriminator 2
 785 03dc 082B     		cmp	r3, #8
 786 03de 0ED0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 787              		.loc 1 624 0 discriminator 3
 788 03e0 0C2B     		cmp	r3, #12
 789 03e2 0CD0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 790              		.loc 1 624 0 discriminator 4
 791 03e4 102B     		cmp	r3, #16
 792 03e6 0AD0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 793              		.loc 1 624 0 discriminator 5
 794 03e8 142B     		cmp	r3, #20
 795 03ea 08D0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 796              		.loc 1 624 0 discriminator 6
 797 03ec 182B     		cmp	r3, #24
 798 03ee 06D0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 799              		.loc 1 624 0 discriminator 7
 800 03f0 1C2B     		cmp	r3, #28
 801 03f2 04D0     		beq	.L41
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 802              		.loc 1 624 0 discriminator 8
 803 03f4 4FF41C71 		mov	r1, #624
 804 03f8 2D48     		ldr	r0, .L68+12
 805 03fa FFF7FEFF 		bl	assert_failed
 806              	.LVL65:
 807              	.L41:
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 808              		.loc 1 625 0 is_stmt 1
 809 03fe 236C     		ldr	r3, [r4, #64]
 810 0400 ABB1     		cbz	r3, .L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 811              		.loc 1 625 0 is_stmt 0 discriminator 1
 812 0402 202B     		cmp	r3, #32
ARM GAS  /tmp/ccxf1fbt.s 			page 144


 813 0404 13D0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 814              		.loc 1 625 0 discriminator 2
 815 0406 402B     		cmp	r3, #64
 816 0408 11D0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 817              		.loc 1 625 0 discriminator 3
 818 040a 602B     		cmp	r3, #96
 819 040c 0FD0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 820              		.loc 1 625 0 discriminator 4
 821 040e 802B     		cmp	r3, #128
 822 0410 0DD0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 823              		.loc 1 625 0 discriminator 5
 824 0412 A02B     		cmp	r3, #160
 825 0414 0BD0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 826              		.loc 1 625 0 discriminator 6
 827 0416 C02B     		cmp	r3, #192
 828 0418 09D0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 829              		.loc 1 625 0 discriminator 7
 830 041a E02B     		cmp	r3, #224
 831 041c 07D0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 832              		.loc 1 625 0 discriminator 8
 833 041e B3F5807F 		cmp	r3, #256
 834 0422 04D0     		beq	.L42
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 835              		.loc 1 625 0 discriminator 9
 836 0424 40F27121 		movw	r1, #625
 837 0428 2148     		ldr	r0, .L68+12
 838 042a FFF7FEFF 		bl	assert_failed
 839              	.LVL66:
 840              	.L42:
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 841              		.loc 1 626 0 is_stmt 1
 842 042e 636C     		ldr	r3, [r4, #68]
 843 0430 3BB1     		cbz	r3, .L43
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 844              		.loc 1 626 0 is_stmt 0 discriminator 1
 845 0432 B3F5007F 		cmp	r3, #512
 846 0436 04D0     		beq	.L43
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 847              		.loc 1 626 0 discriminator 2
 848 0438 40F27221 		movw	r1, #626
 849 043c 1C48     		ldr	r0, .L68+12
 850 043e FFF7FEFF 		bl	assert_failed
 851              	.LVL67:
 852              	.L43:
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 853              		.loc 1 627 0 is_stmt 1
 854 0442 A36C     		ldr	r3, [r4, #72]
 855 0444 012B     		cmp	r3, #1
 856 0446 08D0     		beq	.L44
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 145


 857              		.loc 1 627 0 is_stmt 0 discriminator 1
 858 0448 40F20142 		movw	r2, #1025
 859 044c 9342     		cmp	r3, r2
 860 044e 04D0     		beq	.L44
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 861              		.loc 1 627 0 discriminator 2
 862 0450 40F27321 		movw	r1, #627
 863 0454 1648     		ldr	r0, .L68+12
 864 0456 FFF7FEFF 		bl	assert_failed
 865              	.LVL68:
 866              	.L44:
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                    ADC_CFGR2_OVSR  |
 867              		.loc 1 634 0 is_stmt 1
 868 045a 2168     		ldr	r1, [r4]
 869 045c 0B69     		ldr	r3, [r1, #16]
 870 045e 23F4FF63 		bic	r3, r3, #2040
 871 0462 23F00403 		bic	r3, r3, #4
 872 0466 E26B     		ldr	r2, [r4, #60]
 873 0468 206C     		ldr	r0, [r4, #64]
 874 046a 0243     		orrs	r2, r2, r0
 875 046c 606C     		ldr	r0, [r4, #68]
 876 046e 0243     		orrs	r2, r2, r0
 877 0470 A06C     		ldr	r0, [r4, #72]
 878 0472 0243     		orrs	r2, r2, r0
 879 0474 1343     		orrs	r3, r3, r2
 880 0476 43F00103 		orr	r3, r3, #1
 881 047a 0B61     		str	r3, [r1, #16]
 882 047c 88E7     		b	.L39
 883              	.L65:
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 884              		.loc 1 666 0
 885 047e 2168     		ldr	r1, [r4]
 886 0480 0B6B     		ldr	r3, [r1, #48]
 887 0482 23F00F03 		bic	r3, r3, #15
 888 0486 E269     		ldr	r2, [r4, #28]
 889 0488 013A     		subs	r2, r2, #1
 890 048a 1343     		orrs	r3, r3, r2
 891 048c 0B63     		str	r3, [r1, #48]
 892 048e 87E7     		b	.L46
 893              	.L31:
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 894              		.loc 1 680 0
 895 0490 636D     		ldr	r3, [r4, #84]
 896 0492 43F01003 		orr	r3, r3, #16
 897 0496 6365     		str	r3, [r4, #84]
 898              	.LVL69:
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 899              		.loc 1 682 0
 900 0498 0125     		movs	r5, #1
 901              	.LVL70:
 902              	.L3:
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 903              		.loc 1 687 0
 904 049a 2846     		mov	r0, r5
 905 049c 03B0     		add	sp, sp, #12
 906              	.LCFI2:
 907              		.cfi_remember_state
ARM GAS  /tmp/ccxf1fbt.s 			page 146


 908              		.cfi_def_cfa_offset 12
 909              		@ sp needed
 910 049e 30BD     		pop	{r4, r5, pc}
 911              	.LVL71:
 912              	.L47:
 913              	.LCFI3:
 914              		.cfi_restore_state
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 915              		.loc 1 414 0
 916 04a0 0125     		movs	r5, #1
 917 04a2 FAE7     		b	.L3
 918              	.L69:
 919              		.align	2
 920              	.L68:
 921 04a4 00000450 		.word	1342439424
 922 04a8 00030450 		.word	1342440192
 923 04ac 07C0F0FF 		.word	-999417
 924 04b0 00000000 		.word	.LC0
 925              		.cfi_endproc
 926              	.LFE284:
 928              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 929              		.align	1
 930              		.weak	HAL_ADC_MspDeInit
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu fpv4-sp-d16
 936              	HAL_ADC_MspDeInit:
 937              	.LFB287:
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 938              		.loc 1 927 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943              	.LVL72:
 944 0000 7047     		bx	lr
 945              		.cfi_endproc
 946              	.LFE287:
 948              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 949              		.align	1
ARM GAS  /tmp/ccxf1fbt.s 			page 147


 950              		.global	HAL_ADC_PollForConversion
 951              		.syntax unified
 952              		.thumb
 953              		.thumb_func
 954              		.fpu fpv4-sp-d16
 956              	HAL_ADC_PollForConversion:
 957              	.LFB290:
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (pCallback == NULL)
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     return HAL_ERROR;
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
ARM GAS  /tmp/ccxf1fbt.s 			page 148


 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
ARM GAS  /tmp/ccxf1fbt.s 			page 149


1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status = HAL_ERROR;
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This parameter can be one of the following values:
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccxf1fbt.s 			page 150


1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (CallbackID)
1148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccxf1fbt.s 			page 151


1149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default :
1158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update the error code */
1159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Return error status */
1162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         status =  HAL_ERROR;
1163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
1164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update the error code */
1169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Return error status */
1172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     status =  HAL_ERROR;
1173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return status;
1176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
1182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    ADC IO operation functions
1186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
1187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
1188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                       ##### IO operation functions #####
1190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
1191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group.
1193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group.
1194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Poll for conversion event.
1196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Handle ADC interrupt request
1200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
1203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
1204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 152


1206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
ARM GAS  /tmp/ccxf1fbt.s 			page 153


1263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
ARM GAS  /tmp/ccxf1fbt.s 			page 154


1320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccxf1fbt.s 			page 155


1377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 958              		.loc 1 1405 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	.LVL73:
 963              		.loc 1 1405 0
 964 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 965              	.LCFI4:
 966              		.cfi_def_cfa_offset 24
 967              		.cfi_offset 3, -24
 968              		.cfi_offset 4, -20
 969              		.cfi_offset 5, -16
 970              		.cfi_offset 6, -12
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 0446     		mov	r4, r0
 974 0004 0D46     		mov	r5, r1
1406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_Flag_End;
1408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
1409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 975              		.loc 1 1415 0
ARM GAS  /tmp/ccxf1fbt.s 			page 156


 976 0006 0268     		ldr	r2, [r0]
 977 0008 304B     		ldr	r3, .L90
 978 000a 9A42     		cmp	r2, r3
 979 000c 04D0     		beq	.L72
 980              		.loc 1 1415 0 is_stmt 0 discriminator 1
 981 000e 40F28751 		movw	r1, #1415
 982              	.LVL74:
 983 0012 2F48     		ldr	r0, .L90+4
 984              	.LVL75:
 985 0014 FFF7FEFF 		bl	assert_failed
 986              	.LVL76:
 987              	.L72:
1416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 988              		.loc 1 1418 0 is_stmt 1
 989 0018 6369     		ldr	r3, [r4, #20]
 990 001a 082B     		cmp	r3, #8
 991 001c 25D0     		beq	.L82
1419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* each conversion:                                                       */
1427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
1436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in independent mode on ADC group regular */
1438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
1439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
1451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
1452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
1455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
ARM GAS  /tmp/ccxf1fbt.s 			page 157


1457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check ADC DMA mode */
1463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN) != 0UL)
 992              		.loc 1 1463 0
 993 001e 2368     		ldr	r3, [r4]
 994 0020 DB68     		ldr	r3, [r3, #12]
 995 0022 13F0010F 		tst	r3, #1
 996 0026 1AD1     		bne	.L87
1464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
1467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 997              		.loc 1 1470 0
 998 0028 0426     		movs	r6, #4
 999              	.L73:
 1000              	.LVL77:
1471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1001              		.loc 1 1476 0
 1002 002a FFF7FEFF 		bl	HAL_GetTick
 1003              	.LVL78:
 1004 002e 0746     		mov	r7, r0
 1005              	.LVL79:
 1006              	.L76:
1477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 1007              		.loc 1 1479 0
 1008 0030 2368     		ldr	r3, [r4]
 1009 0032 1A68     		ldr	r2, [r3]
 1010 0034 1642     		tst	r6, r2
 1011 0036 1AD1     		bne	.L88
1480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 1012              		.loc 1 1482 0
 1013 0038 B5F1FF3F 		cmp	r5, #-1
 1014 003c F8D0     		beq	.L76
1483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 1015              		.loc 1 1484 0
 1016 003e FFF7FEFF 		bl	HAL_GetTick
 1017              	.LVL80:
 1018 0042 C01B     		subs	r0, r0, r7
 1019 0044 8542     		cmp	r5, r0
 1020 0046 01D3     		bcc	.L77
ARM GAS  /tmp/ccxf1fbt.s 			page 158


 1021              		.loc 1 1484 0 is_stmt 0 discriminator 1
 1022 0048 002D     		cmp	r5, #0
 1023 004a F1D1     		bne	.L76
 1024              	.L77:
1485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1025              		.loc 1 1487 0 is_stmt 1
 1026 004c 636D     		ldr	r3, [r4, #84]
 1027 004e 43F00403 		orr	r3, r3, #4
 1028 0052 6365     		str	r3, [r4, #84]
1488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1029              		.loc 1 1490 0
 1030 0054 0023     		movs	r3, #0
 1031 0056 84F85030 		strb	r3, [r4, #80]
1491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 1032              		.loc 1 1492 0
 1033 005a 0320     		movs	r0, #3
 1034 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1035              	.LVL81:
 1036              	.L87:
1465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
 1037              		.loc 1 1465 0
 1038 005e 636D     		ldr	r3, [r4, #84]
 1039 0060 43F02003 		orr	r3, r3, #32
 1040 0064 6365     		str	r3, [r4, #84]
1466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1041              		.loc 1 1466 0
 1042 0066 0120     		movs	r0, #1
 1043 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1044              	.LVL82:
 1045              	.L82:
1420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1046              		.loc 1 1420 0
 1047 006a 0826     		movs	r6, #8
 1048 006c DDE7     		b	.L73
 1049              	.LVL83:
 1050              	.L88:
1493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update ADC state machine */
1498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 1051              		.loc 1 1498 0
 1052 006e 626D     		ldr	r2, [r4, #84]
 1053 0070 42F40072 		orr	r2, r2, #512
 1054 0074 6265     		str	r2, [r4, #84]
 1055              	.LVL84:
 1056              	.LBB296:
 1057              	.LBB297:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1058              		.loc 2 3176 0
 1059 0076 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/ccxf1fbt.s 			page 159


 1060 0078 12F4406F 		tst	r2, #3072
 1061 007c 1DD1     		bne	.L84
 1062 007e 0122     		movs	r2, #1
 1063              	.L79:
 1064              	.LVL85:
 1065              	.LBE297:
 1066              	.LBE296:
1499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 1067              		.loc 1 1502 0
 1068 0080 8AB1     		cbz	r2, .L80
1503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 1069              		.loc 1 1503 0
 1070 0082 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 1071 0084 7AB9     		cbnz	r2, .L80
1504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 1072              		.loc 1 1507 0
 1073 0086 1A68     		ldr	r2, [r3]
 1074 0088 12F0080F 		tst	r2, #8
 1075 008c 0BD0     		beq	.L80
1508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1076              		.loc 1 1510 0
 1077 008e 626D     		ldr	r2, [r4, #84]
 1078 0090 22F48072 		bic	r2, r2, #256
 1079 0094 6265     		str	r2, [r4, #84]
1511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1080              		.loc 1 1512 0
 1081 0096 626D     		ldr	r2, [r4, #84]
 1082 0098 12F4805F 		tst	r2, #4096
 1083 009c 03D1     		bne	.L80
1513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 1084              		.loc 1 1514 0
 1085 009e 626D     		ldr	r2, [r4, #84]
 1086 00a0 42F00102 		orr	r2, r2, #1
 1087 00a4 6265     		str	r2, [r4, #84]
 1088              	.L80:
1515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* available).                                                              */
1522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
ARM GAS  /tmp/ccxf1fbt.s 			page 160


1527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
1528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
1531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve handle ADC CFGR register */
1540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 1089              		.loc 1 1540 0
 1090 00a6 DA68     		ldr	r2, [r3, #12]
 1091              	.LVL86:
1541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Clear polled flag */
1544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 1092              		.loc 1 1544 0
 1093 00a8 082E     		cmp	r6, #8
 1094 00aa 08D0     		beq	.L89
1545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
1549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 1095              		.loc 1 1553 0
 1096 00ac 12F4804F 		tst	r2, #16384
 1097 00b0 09D1     		bne	.L85
1554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 1098              		.loc 1 1555 0
 1099 00b2 0C22     		movs	r2, #12
 1100              	.LVL87:
 1101 00b4 1A60     		str	r2, [r3]
1556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 1102              		.loc 1 1560 0
 1103 00b6 0020     		movs	r0, #0
 1104 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1105              	.LVL88:
 1106              	.L84:
 1107              	.LBB299:
 1108              	.LBB298:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1109              		.loc 2 3176 0
 1110 00ba 0022     		movs	r2, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 161


 1111 00bc E0E7     		b	.L79
 1112              	.LVL89:
 1113              	.L89:
 1114              	.LBE298:
 1115              	.LBE299:
1546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1116              		.loc 1 1546 0
 1117 00be 0822     		movs	r2, #8
 1118              	.LVL90:
 1119 00c0 1A60     		str	r2, [r3]
 1120              		.loc 1 1560 0
 1121 00c2 0020     		movs	r0, #0
 1122 00c4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1123              	.LVL91:
 1124              	.L85:
 1125 00c6 0020     		movs	r0, #0
1561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1126              		.loc 1 1561 0
 1127 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1128              	.LVL92:
 1129              	.L91:
 1130 00ca 00BF     		.align	2
 1131              	.L90:
 1132 00cc 00000450 		.word	1342439424
 1133 00d0 00000000 		.word	.LC0
 1134              		.cfi_endproc
 1135              	.LFE290:
 1137              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1138              		.align	1
 1139              		.global	HAL_ADC_PollForEvent
 1140              		.syntax unified
 1141              		.thumb
 1142              		.thumb_func
 1143              		.fpu fpv4-sp-d16
 1145              	HAL_ADC_PollForEvent:
 1146              	.LFB291:
1562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Poll for ADC event.
1565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param EventType the ADC event type.
1567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
1568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 162


1583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1147              		.loc 1 1584 0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151              	.LVL93:
 1152 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1153              	.LCFI5:
 1154              		.cfi_def_cfa_offset 24
 1155              		.cfi_offset 3, -24
 1156              		.cfi_offset 4, -20
 1157              		.cfi_offset 5, -16
 1158              		.cfi_offset 6, -12
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 0546     		mov	r5, r0
 1162 0004 0C46     		mov	r4, r1
 1163 0006 1646     		mov	r6, r2
1585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
1586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1164              		.loc 1 1588 0
 1165 0008 0268     		ldr	r2, [r0]
 1166              	.LVL94:
 1167 000a 424B     		ldr	r3, .L111
 1168 000c 9A42     		cmp	r2, r3
 1169 000e 04D0     		beq	.L93
 1170              		.loc 1 1588 0 is_stmt 0 discriminator 1
 1171 0010 40F23461 		movw	r1, #1588
 1172              	.LVL95:
 1173 0014 4048     		ldr	r0, .L111+4
 1174              	.LVL96:
 1175 0016 FFF7FEFF 		bl	assert_failed
 1176              	.LVL97:
 1177              	.L93:
1589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1178              		.loc 1 1589 0 is_stmt 1
 1179 001a 022C     		cmp	r4, #2
 1180 001c 11D0     		beq	.L94
 1181              		.loc 1 1589 0 is_stmt 0 discriminator 1
 1182 001e 802C     		cmp	r4, #128
 1183 0020 0FD0     		beq	.L94
 1184              		.loc 1 1589 0 discriminator 2
 1185 0022 B4F5807F 		cmp	r4, #256
 1186 0026 0CD0     		beq	.L94
 1187              		.loc 1 1589 0 discriminator 3
 1188 0028 B4F5007F 		cmp	r4, #512
 1189 002c 09D0     		beq	.L94
 1190              		.loc 1 1589 0 discriminator 4
 1191 002e 102C     		cmp	r4, #16
 1192 0030 07D0     		beq	.L94
 1193              		.loc 1 1589 0 discriminator 5
 1194 0032 B4F5806F 		cmp	r4, #1024
 1195 0036 04D0     		beq	.L94
 1196              		.loc 1 1589 0 discriminator 6
ARM GAS  /tmp/ccxf1fbt.s 			page 163


 1197 0038 40F23561 		movw	r1, #1589
 1198 003c 3648     		ldr	r0, .L111+4
 1199 003e FFF7FEFF 		bl	assert_failed
 1200              	.LVL98:
 1201              	.L94:
1590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Get tick count */
1592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1202              		.loc 1 1592 0 is_stmt 1
 1203 0042 FFF7FEFF 		bl	HAL_GetTick
 1204              	.LVL99:
 1205 0046 0746     		mov	r7, r0
 1206              	.LVL100:
 1207              	.L96:
1593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check selected event flag */
1595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1208              		.loc 1 1595 0
 1209 0048 2B68     		ldr	r3, [r5]
 1210 004a 1A68     		ldr	r2, [r3]
 1211 004c 34EA0202 		bics	r2, r4, r2
 1212 0050 12D0     		beq	.L109
1596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 1213              		.loc 1 1598 0
 1214 0052 B6F1FF3F 		cmp	r6, #-1
 1215 0056 F7D0     		beq	.L96
1599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 1216              		.loc 1 1600 0
 1217 0058 FFF7FEFF 		bl	HAL_GetTick
 1218              	.LVL101:
 1219 005c C01B     		subs	r0, r0, r7
 1220 005e 8642     		cmp	r6, r0
 1221 0060 01D3     		bcc	.L97
 1222              		.loc 1 1600 0 is_stmt 0 discriminator 1
 1223 0062 002E     		cmp	r6, #0
 1224 0064 F0D1     		bne	.L96
 1225              	.L97:
1601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 1226              		.loc 1 1603 0 is_stmt 1
 1227 0066 6B6D     		ldr	r3, [r5, #84]
 1228 0068 43F00403 		orr	r3, r3, #4
 1229 006c 6B65     		str	r3, [r5, #84]
1604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
1606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
 1230              		.loc 1 1606 0
 1231 006e 0023     		movs	r3, #0
 1232 0070 85F85030 		strb	r3, [r5, #80]
1607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_TIMEOUT;
 1233              		.loc 1 1608 0
 1234 0074 0320     		movs	r0, #3
ARM GAS  /tmp/ccxf1fbt.s 			page 164


 1235 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1236              	.LVL102:
 1237              	.L109:
1609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   switch (EventType)
 1238              		.loc 1 1613 0
 1239 0078 B4F5807F 		cmp	r4, #256
 1240 007c 27D0     		beq	.L101
 1241 007e 0BD8     		bhi	.L102
 1242 0080 022C     		cmp	r4, #2
 1243 0082 1CD0     		beq	.L103
 1244 0084 802C     		cmp	r4, #128
 1245 0086 34D1     		bne	.L100
1614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling event */
1616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* For example:                                                             */
1630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD_EVENT:
1636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 1246              		.loc 1 1637 0
 1247 0088 6A6D     		ldr	r2, [r5, #84]
 1248 008a 42F48032 		orr	r2, r2, #65536
 1249 008e 6A65     		str	r2, [r5, #84]
1638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 1250              		.loc 1 1640 0
 1251 0090 8022     		movs	r2, #128
 1252 0092 1A60     		str	r2, [r3]
1641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
ARM GAS  /tmp/ccxf1fbt.s 			page 165


1648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow event */
1665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
1668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
1671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
1674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Overrun event */
1678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* considered as an error.                                                */
1681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* overrun ")                                                             */
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state */
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to overrun */
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            as OVR is cleared. */
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       break;
1699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
 1253              		.loc 1 1702 0
 1254 0094 0020     		movs	r0, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 166


1642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1255              		.loc 1 1642 0
 1256 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1257              	.LVL103:
 1258              	.L102:
1613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1259              		.loc 1 1613 0
 1260 0098 B4F5007F 		cmp	r4, #512
 1261 009c 20D0     		beq	.L105
 1262 009e B4F5806F 		cmp	r4, #1024
 1263 00a2 26D1     		bne	.L100
1667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1264              		.loc 1 1667 0
 1265 00a4 6A6D     		ldr	r2, [r5, #84]
 1266 00a6 42F48042 		orr	r2, r2, #16384
 1267 00aa 6A65     		str	r2, [r5, #84]
1670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1268              		.loc 1 1670 0
 1269 00ac AA6D     		ldr	r2, [r5, #88]
 1270 00ae 42F00802 		orr	r2, r2, #8
 1271 00b2 AA65     		str	r2, [r5, #88]
1673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1272              		.loc 1 1673 0
 1273 00b4 4FF48062 		mov	r2, #1024
 1274 00b8 1A60     		str	r2, [r3]
 1275              		.loc 1 1702 0
 1276 00ba 0020     		movs	r0, #0
1675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1277              		.loc 1 1675 0
 1278 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1279              	.LVL104:
 1280              	.L103:
1618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1281              		.loc 1 1618 0
 1282 00be 6A6D     		ldr	r2, [r5, #84]
 1283 00c0 42F40062 		orr	r2, r2, #2048
 1284 00c4 6A65     		str	r2, [r5, #84]
1621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1285              		.loc 1 1621 0
 1286 00c6 0222     		movs	r2, #2
 1287 00c8 1A60     		str	r2, [r3]
 1288              		.loc 1 1702 0
 1289 00ca 0020     		movs	r0, #0
1623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1290              		.loc 1 1623 0
 1291 00cc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1292              	.LVL105:
 1293              	.L101:
1647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1294              		.loc 1 1647 0
 1295 00ce 6A6D     		ldr	r2, [r5, #84]
 1296 00d0 42F40032 		orr	r2, r2, #131072
 1297 00d4 6A65     		str	r2, [r5, #84]
1650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1298              		.loc 1 1650 0
 1299 00d6 4FF48072 		mov	r2, #256
 1300 00da 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccxf1fbt.s 			page 167


 1301              		.loc 1 1702 0
 1302 00dc 0020     		movs	r0, #0
1652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1303              		.loc 1 1652 0
 1304 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1305              	.LVL106:
 1306              	.L105:
1657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1307              		.loc 1 1657 0
 1308 00e0 6A6D     		ldr	r2, [r5, #84]
 1309 00e2 42F48022 		orr	r2, r2, #262144
 1310 00e6 6A65     		str	r2, [r5, #84]
1660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1311              		.loc 1 1660 0
 1312 00e8 4FF40072 		mov	r2, #512
 1313 00ec 1A60     		str	r2, [r3]
 1314              		.loc 1 1702 0
 1315 00ee 0020     		movs	r0, #0
1662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1316              		.loc 1 1662 0
 1317 00f0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1318              	.LVL107:
 1319              	.L100:
1683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1320              		.loc 1 1683 0
 1321 00f2 6A6B     		ldr	r2, [r5, #52]
 1322 00f4 1AB1     		cbz	r2, .L110
1696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 1323              		.loc 1 1696 0
 1324 00f6 1022     		movs	r2, #16
 1325 00f8 1A60     		str	r2, [r3]
 1326              		.loc 1 1702 0
 1327 00fa 0020     		movs	r0, #0
1703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1328              		.loc 1 1703 0
 1329 00fc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1330              	.LVL108:
 1331              	.L110:
1686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1332              		.loc 1 1686 0
 1333 00fe 6B6D     		ldr	r3, [r5, #84]
 1334 0100 43F48063 		orr	r3, r3, #1024
 1335 0104 6B65     		str	r3, [r5, #84]
1689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 1336              		.loc 1 1689 0
 1337 0106 AB6D     		ldr	r3, [r5, #88]
 1338 0108 43F00203 		orr	r3, r3, #2
 1339 010c AB65     		str	r3, [r5, #88]
1702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1340              		.loc 1 1702 0
 1341 010e 0020     		movs	r0, #0
 1342 0110 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1343              	.LVL109:
 1344              	.L112:
 1345 0112 00BF     		.align	2
 1346              	.L111:
 1347 0114 00000450 		.word	1342439424
ARM GAS  /tmp/ccxf1fbt.s 			page 168


 1348 0118 00000000 		.word	.LC0
 1349              		.cfi_endproc
 1350              	.LFE291:
 1352              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1353              		.align	1
 1354              		.global	HAL_ADC_GetValue
 1355              		.syntax unified
 1356              		.thumb
 1357              		.thumb_func
 1358              		.fpu fpv4-sp-d16
 1360              	HAL_ADC_GetValue:
 1361              	.LFB296:
1704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         OVR overrun.
1710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC Master.
1714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         mode), the user must:
1722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
1727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
1744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
ARM GAS  /tmp/ccxf1fbt.s 			page 169


1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state                                                        */
1752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code */
1771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset all ADC error code fields */
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
1805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccxf1fbt.s 			page 170


1806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* trigger event.                                                       */
1820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
1830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
1855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
1856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
1858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
1862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
ARM GAS  /tmp/ccxf1fbt.s 			page 171


1863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
1867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
1868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
1870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
1872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             default:
1878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               break;
1881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
1882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
1885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* ADC instance is not a multimode slave instance with multimode regular conversions enabled 
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable as well injected interruptions in case
1891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          allows to start regular and injected conversions when JAUTO is
1893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          set with a single call to HAL_ADC_Start_IT() */
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         switch (hadc->Init.EOCSelection)
1895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
1896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           case ADC_EOC_SEQ_CONV:
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* case ADC_EOC_SINGLE_CONV */
1901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           default:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
1905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
1906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
1907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start ADC group regular conversion */
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
1913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
ARM GAS  /tmp/ccxf1fbt.s 			page 172


1920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
1944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
1951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
1961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
1966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
1967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
1974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
1976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
ARM GAS  /tmp/ccxf1fbt.s 			page 173


1977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
1981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
1982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
1983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
1984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param pData Destination Buffer address.
1985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
1987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
1988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
1990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
1994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
1998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Process locked */
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_LOCK(hadc);
2003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Enable the ADC peripheral */
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC state                                                        */
2020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            )
2033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
ARM GAS  /tmp/ccxf1fbt.s 			page 174


2034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
2045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Reset all ADC error code fields */
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set the DMA error callback */
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
2065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* operations)                                                        */
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable ADC DMA mode */
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start the DMA channel */
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* trigger event.                                                       */
2088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Start ADC group regular conversion */
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccxf1fbt.s 			page 175


2091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Process unlocked */
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Process unlocked */
2103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         ADC peripheral.
2120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
2128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continous requests is kept) */
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
2147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 176


2148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
2167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            to flag EOC.
2204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
ARM GAS  /tmp/ccxf1fbt.s 			page 177


2205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         To clear this flag, either use function:
2208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC group regular conversion data
2213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1362              		.loc 1 2215 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              	.LVL110:
 1367 0000 10B5     		push	{r4, lr}
 1368              	.LCFI6:
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 4, -8
 1371              		.cfi_offset 14, -4
 1372 0002 0446     		mov	r4, r0
2216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1373              		.loc 1 2217 0
 1374 0004 0268     		ldr	r2, [r0]
 1375 0006 054B     		ldr	r3, .L116
 1376 0008 9A42     		cmp	r2, r3
 1377 000a 04D0     		beq	.L114
 1378              		.loc 1 2217 0 is_stmt 0 discriminator 1
 1379 000c 40F6A901 		movw	r1, #2217
 1380 0010 0348     		ldr	r0, .L116+4
 1381              	.LVL111:
 1382 0012 FFF7FEFF 		bl	assert_failed
 1383              	.LVL112:
 1384              	.L114:
2218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC converted value */
2223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->Instance->DR;
 1385              		.loc 1 2223 0 is_stmt 1
 1386 0016 2368     		ldr	r3, [r4]
 1387 0018 186C     		ldr	r0, [r3, #64]
2224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 1388              		.loc 1 2224 0
 1389 001a 10BD     		pop	{r4, pc}
 1390              	.LVL113:
 1391              	.L117:
 1392              		.align	2
 1393              	.L116:
 1394 001c 00000450 		.word	1342439424
 1395 0020 00000000 		.word	.LC0
 1396              		.cfi_endproc
 1397              	.LFE296:
 1399              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
ARM GAS  /tmp/ccxf1fbt.s 			page 178


 1400              		.align	1
 1401              		.weak	HAL_ADC_ConvCpltCallback
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv4-sp-d16
 1407              	HAL_ADC_ConvCpltCallback:
 1408              	.LFB298:
2225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_cfgr;
2239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* End Of Sampling callback */
2259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
ARM GAS  /tmp/ccxf1fbt.s 			page 179


2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* available).                                                          */
2288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          )
2294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
2319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
ARM GAS  /tmp/ccxf1fbt.s 			page 180


2331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Change ADC state to error state */
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
2345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       possibility to use:                                              */
2348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear regular group conversion flag */
2356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC state */
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Retrieve ADC configuration */
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
2376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* available).                                                        */
2380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
ARM GAS  /tmp/ccxf1fbt.s 			page 181


2388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
2406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
2407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Particular case if injected contexts queue is enabled:             */
2412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* when the last context has been fully processed, JSQR is reset      */
2413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* by the hardware. Even if no injected conversion is planned to come */
2414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (queue empty, triggers are ignored), it can start again            */
2415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* immediately after setting a new context (JADSTART is still set).   */
2416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Therefore, state of HAL ADC injected group is kept to busy.        */
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* JADSTART==0 (no conversion on going)                             */
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt  */
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC state */
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
2433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
2435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Update ADC state machine to error */
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
ARM GAS  /tmp/ccxf1fbt.s 			page 182


2445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected Conversion complete callback */
2447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****               sequence.    */
2452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear injected group conversion flag */
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 1 callback */
2469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 2 callback */
2486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 183


2502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Level out of window 3 callback */
2503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* overrun ")                                                             */
2520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* error.                                                                 */
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       overrun_error = 1UL;
2525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
2527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Check DMA configuration */
2529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMAEN) != 0UL)
2544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           overrun_error = 1UL;
2546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (overrun_error == 1UL)
2551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Change ADC state to error state */
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to overrun */
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Error callback */
ARM GAS  /tmp/ccxf1fbt.s 			page 184


2559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear ADC overrun flag */
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Change ADC state to overrun state */
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Injected context queue overflow callback */
2587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1409              		.loc 1 2602 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414              	.LVL114:
 1415 0000 7047     		bx	lr
 1416              		.cfi_endproc
 1417              	.LFE298:
 1419              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1420              		.align	1
 1421              		.weak	HAL_ADC_ConvHalfCpltCallback
 1422              		.syntax unified
ARM GAS  /tmp/ccxf1fbt.s 			page 185


 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv4-sp-d16
 1427              	HAL_ADC_ConvHalfCpltCallback:
 1428              	.LFB299:
2603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****    */
2609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1429              		.loc 1 2617 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434              	.LVL115:
 1435 0000 7047     		bx	lr
 1436              		.cfi_endproc
 1437              	.LFE299:
 1439              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1440              		.align	1
 1441              		.global	ADC_DMAHalfConvCplt
 1442              		.syntax unified
 1443              		.thumb
 1444              		.thumb_func
 1445              		.fpu fpv4-sp-d16
 1447              	ADC_DMAHalfConvCplt:
 1448              	.LFB310:
2618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
ARM GAS  /tmp/ccxf1fbt.s 			page 186


2637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
2652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   UNUSED(hadc);
2657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
2665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief    Peripheral Control functions
2669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
2670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
2671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****              ##### Peripheral Control functions #####
2673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
2674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure channels on regular group
2676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Configure the analog watchdog
2677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
2679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
2680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         These internal paths can be disabled using function
2687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         without resetting the ADC.
2693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
ARM GAS  /tmp/ccxf1fbt.s 			page 187


2694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      ignored (considered as reset) */
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification of channel number */
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfig->Channel));
2724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfig->Channel));
2728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel number                                                        */
2737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Channel rank                                                          */
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     #if !defined (USE_FULL_ASSERT)
2741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Correspondence for compatibility with legacy definition of             */
2742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* sequencer ranks in direct number format. This correspondence can       */
2743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* be done only on ranks 1 to 5 due to literal values.                    */
2744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: Sequencer ranks in direct number format are no more used         */
2745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*       and are detected by activating USE_FULL_ASSERT feature.          */
2746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (sConfig->Rank <= 5U)
2747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (sConfig->Rank)
2749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 2U: sConfig->Rank = ADC_REGULAR_RANK_2; break;
ARM GAS  /tmp/ccxf1fbt.s 			page 188


2751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 3U: sConfig->Rank = ADC_REGULAR_RANK_3; break;
2752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 4U: sConfig->Rank = ADC_REGULAR_RANK_4; break;
2753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case 5U: sConfig->Rank = ADC_REGULAR_RANK_5; break;
2754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* case 1U */
2755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: sConfig->Rank = ADC_REGULAR_RANK_1; break;
2756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     #endif
2759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
2760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Channel offset                                                        */
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
2773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if defined(ADC_SMPR1_SMPPLUS)
2775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
2776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SamplingTime == ADC_SAMPLETIME_3CYCLES_5)
2777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, LL_ADC_SAMPLINGTIME_2CYCLES
2780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5)
2783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC sampling time common configuration */
2790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
2791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
2793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
2796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC selected offset number */
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 189


2808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Scan each offset register to check if the selected channel is targeted. */
2812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* If this is the case, the corresponding offset number is disabled.       */
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
2814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
2818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
2822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if(__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
2826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
2834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /*  - Single or differential mode                                           */
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
2839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of differential mode */
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
2842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
2844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
2847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
2848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* If internal channel selected, enable dedicated internal buffers and    */
2854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* paths.                                                                 */
2855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Note: these internal measurement paths can be disabled using           */
2856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* HAL_ADC_DeInit().                                                      */
2857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->I
2861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* If the requested internal measurement path has already been enabled, */
2863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* bypass the configuration processing.                                 */
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_PA
ARM GAS  /tmp/ccxf1fbt.s 			page 190


2865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Wait loop initialization and execution */
2873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (100000U
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
2878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             wait_loop_index--;
2880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
2881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_PAT
2884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else if ((sConfig->Channel == ADC_CHANNEL_VREFINT)
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (ADC_VREFINT_INSTANCE(hadc))
2895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
2899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
2901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
2902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* nothing to do */
2903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
2904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
2905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* parameters.                                                              */
2910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
ARM GAS  /tmp/ccxf1fbt.s 			page 191


2922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
2924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
2926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         the ADC.
2932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   On this STM32 serie, analog watchdog thresholds cannot be modified
2936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         while ADC conversion is on going.
2937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
2938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status
2940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
2941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
2957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
2958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(hadc, AnalogWDGConfig->Channel));
2960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verify thresholds range */
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
2972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
2977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process locked */
ARM GAS  /tmp/ccxf1fbt.s 			page 192


2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_LOCK(hadc);
2980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
2981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
2984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
2990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
2991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
2992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Analog watchdog configuration */
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
2995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
2999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* are set to 0                                                         */ 
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
ARM GAS  /tmp/ccxf1fbt.s 			page 193


3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
3038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
3041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           else
3075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
3089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* have to be left-aligned on bit 7, the LSB (right bits) are set to 0  */
ARM GAS  /tmp/ccxf1fbt.s 			page 194


3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
3096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighTh
3098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       else
3122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         else
3138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else
3148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Update ADC state machine to error */
ARM GAS  /tmp/ccxf1fbt.s 			page 195


3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Process unlocked */
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return function status */
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return tmp_hal_status;
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *
3169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @verbatim
3170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****  ===============================================================================
3173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     [..]
3174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     peripheral.
3176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC state
3177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (+) Check the ADC error code
3178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** @endverbatim
3180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
3186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         compared with states bits.
3187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         For example:
3188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return ADC handle state */
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->State;
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Return the ADC error code.
3204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 196


3207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return hadc->ErrorCode;
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @}
3221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @{
3225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *          This parameter can be one of the following values:
3232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
3243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* (see reference manual).                                                */
ARM GAS  /tmp/ccxf1fbt.s 			page 197


3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
3268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Use stop of regular group */
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Update ADC state machine to error */
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           return HAL_ERROR;
3284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Clear JEOS */
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
ARM GAS  /tmp/ccxf1fbt.s 			page 198


3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     switch (conversion_group_reassigned)
3322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       default:
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
3333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
ARM GAS  /tmp/ccxf1fbt.s 			page 199


3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Enable the ADC peripheral */
3390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           has been cleared (after a calibration), ADEN bit is reset by the
3399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           calibration logic.
3400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           The workaround is to continue setting ADEN until ADRDY is becomes 1.
3401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           4 ADC clock cycle duration */
3403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Note: Test of ADC enabled required due to hardware constraint to     */
3404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /*       not enable ADC if already enabled.                             */
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         LL_ADC_Enable(hadc->Instance);
3408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   *         stopped.
3431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hadc ADC handle
3432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval HAL status.
3433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
ARM GAS  /tmp/ccxf1fbt.s 			page 200


3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /*       disabled.                                                          */
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
3445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Disable the ADC peripheral */
3450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Update ADC state machine to error */
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       return HAL_ERROR;
3462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Get tick count */
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tickstart = HAL_GetTick();
3467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Update ADC state machine to error */
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         return HAL_ERROR;
3479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Return HAL status */
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   return HAL_OK;
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 201


3492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
3494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Set ADC state */
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* to disable interruption.                                               */
3506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
3508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* Is CONT bit set ? */
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
3521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMACFG) == 0UL)
3529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
3530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
3536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
3537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     /* Conversion complete callback */
3540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
ARM GAS  /tmp/ccxf1fbt.s 			page 202


3549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     else
3558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
3559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       /* Call ADC DMA error callback */
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
3562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
3563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 1449              		.loc 1 3571 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453              	.LVL116:
 1454              		.loc 1 3571 0
 1455 0000 08B5     		push	{r3, lr}
 1456              	.LCFI7:
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
 1460              	.LVL117:
3572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Half conversion callback */
3576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1461              		.loc 1 3579 0
 1462 0002 806A     		ldr	r0, [r0, #40]
 1463              	.LVL118:
 1464 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1465              	.LVL119:
 1466 0008 08BD     		pop	{r3, pc}
 1467              		.cfi_endproc
 1468              	.LFE310:
 1470              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1471              		.align	1
 1472              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
ARM GAS  /tmp/ccxf1fbt.s 			page 203


 1476              		.fpu fpv4-sp-d16
 1478              	HAL_ADC_LevelOutOfWindowCallback:
 1479              	.LFB300:
2632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1480              		.loc 1 2632 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485              	.LVL120:
 1486 0000 7047     		bx	lr
 1487              		.cfi_endproc
 1488              	.LFE300:
 1490              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1491              		.align	1
 1492              		.weak	HAL_ADC_ErrorCallback
 1493              		.syntax unified
 1494              		.thumb
 1495              		.thumb_func
 1496              		.fpu fpv4-sp-d16
 1498              	HAL_ADC_ErrorCallback:
 1499              	.LFB301:
2654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1500              		.loc 1 2654 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505              	.LVL121:
 1506 0000 7047     		bx	lr
 1507              		.cfi_endproc
 1508              	.LFE301:
 1510              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1511              		.align	1
 1512              		.global	HAL_ADC_IRQHandler
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu fpv4-sp-d16
 1518              	HAL_ADC_IRQHandler:
 1519              	.LFB297:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1520              		.loc 1 2232 0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 1524              	.LVL122:
2232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1525              		.loc 1 2232 0
 1526 0000 70B5     		push	{r4, r5, r6, lr}
 1527              	.LCFI8:
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 1533 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccxf1fbt.s 			page 204


 1534              	.LVL123:
2234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1535              		.loc 1 2234 0
 1536 0004 0368     		ldr	r3, [r0]
 1537 0006 1D68     		ldr	r5, [r3]
 1538              	.LVL124:
2235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 1539              		.loc 1 2235 0
 1540 0008 5E68     		ldr	r6, [r3, #4]
 1541              	.LVL125:
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1542              		.loc 1 2245 0
 1543 000a 9C4A     		ldr	r2, .L167
 1544 000c 9342     		cmp	r3, r2
 1545 000e 04D0     		beq	.L125
2245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1546              		.loc 1 2245 0 is_stmt 0 discriminator 1
 1547 0010 40F6C501 		movw	r1, #2245
 1548 0014 9A48     		ldr	r0, .L167+4
 1549              	.LVL126:
 1550 0016 FFF7FEFF 		bl	assert_failed
 1551              	.LVL127:
 1552              	.L125:
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1553              		.loc 1 2246 0 is_stmt 1
 1554 001a 6369     		ldr	r3, [r4, #20]
 1555 001c 042B     		cmp	r3, #4
 1556 001e 06D0     		beq	.L126
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1557              		.loc 1 2246 0 is_stmt 0 discriminator 1
 1558 0020 082B     		cmp	r3, #8
 1559 0022 04D0     		beq	.L126
2246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1560              		.loc 1 2246 0 discriminator 2
 1561 0024 40F6C601 		movw	r1, #2246
 1562 0028 9548     		ldr	r0, .L167+4
 1563 002a FFF7FEFF 		bl	assert_failed
 1564              	.LVL128:
 1565              	.L126:
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1566              		.loc 1 2249 0 is_stmt 1
 1567 002e 15F0020F 		tst	r5, #2
 1568 0032 10D0     		beq	.L127
2249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1569              		.loc 1 2249 0 is_stmt 0 discriminator 1
 1570 0034 16F0020F 		tst	r6, #2
 1571 0038 0DD0     		beq	.L127
2252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1572              		.loc 1 2252 0 is_stmt 1
 1573 003a 636D     		ldr	r3, [r4, #84]
 1574 003c 13F0100F 		tst	r3, #16
 1575 0040 03D1     		bne	.L128
2255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1576              		.loc 1 2255 0
 1577 0042 636D     		ldr	r3, [r4, #84]
 1578 0044 43F40063 		orr	r3, r3, #2048
 1579 0048 6365     		str	r3, [r4, #84]
ARM GAS  /tmp/ccxf1fbt.s 			page 205


 1580              	.L128:
2262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1581              		.loc 1 2262 0
 1582 004a 2046     		mov	r0, r4
 1583 004c FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1584              	.LVL129:
2266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1585              		.loc 1 2266 0
 1586 0050 2368     		ldr	r3, [r4]
 1587 0052 0222     		movs	r2, #2
 1588 0054 1A60     		str	r2, [r3]
 1589              	.L127:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1590              		.loc 1 2270 0
 1591 0056 15F0040F 		tst	r5, #4
 1592 005a 02D0     		beq	.L129
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1593              		.loc 1 2270 0 is_stmt 0 discriminator 1
 1594 005c 16F0040F 		tst	r6, #4
 1595 0060 05D1     		bne	.L130
 1596              	.L129:
2270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1597              		.loc 1 2270 0 discriminator 3
 1598 0062 15F0080F 		tst	r5, #8
 1599 0066 42D0     		beq	.L131
2271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1600              		.loc 1 2271 0 is_stmt 1
 1601 0068 16F0080F 		tst	r6, #8
 1602 006c 3FD0     		beq	.L131
 1603              	.L130:
2274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1604              		.loc 1 2274 0
 1605 006e 636D     		ldr	r3, [r4, #84]
 1606 0070 13F0100F 		tst	r3, #16
 1607 0074 03D1     		bne	.L132
2277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1608              		.loc 1 2277 0
 1609 0076 636D     		ldr	r3, [r4, #84]
 1610 0078 43F40073 		orr	r3, r3, #512
 1611 007c 6365     		str	r3, [r4, #84]
 1612              	.L132:
2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1613              		.loc 1 2283 0
 1614 007e 2368     		ldr	r3, [r4]
 1615              	.LVL130:
 1616              	.LBB300:
 1617              	.LBB301:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1618              		.loc 2 3176 0
 1619 0080 DA68     		ldr	r2, [r3, #12]
 1620 0082 12F4406F 		tst	r2, #3072
 1621 0086 20D1     		bne	.L154
 1622 0088 0122     		movs	r2, #1
 1623              	.L133:
 1624              	.LVL131:
 1625              	.LBE301:
 1626              	.LBE300:
ARM GAS  /tmp/ccxf1fbt.s 			page 206


2283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1627              		.loc 1 2283 0
 1628 008a 52B3     		cbz	r2, .L134
2305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1629              		.loc 1 2305 0
 1630 008c DA68     		ldr	r2, [r3, #12]
 1631              	.LVL132:
2309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1632              		.loc 1 2309 0
 1633 008e 12F4005F 		tst	r2, #8192
 1634 0092 26D1     		bne	.L134
2312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1635              		.loc 1 2312 0
 1636 0094 1A68     		ldr	r2, [r3]
 1637              	.LVL133:
 1638 0096 12F0080F 		tst	r2, #8
 1639 009a 22D0     		beq	.L134
 1640              	.LVL134:
 1641              	.LBB303:
 1642              	.LBB304:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1643              		.loc 2 6096 0
 1644 009c 9A68     		ldr	r2, [r3, #8]
 1645 009e 12F0040F 		tst	r2, #4
 1646 00a2 14D0     		beq	.L155
 1647 00a4 0122     		movs	r2, #1
 1648              	.L135:
 1649              	.LVL135:
 1650              	.LBE304:
 1651              	.LBE303:
2316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1652              		.loc 1 2316 0
 1653 00a6 A2B9     		cbnz	r2, .L136
2322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1654              		.loc 1 2322 0
 1655 00a8 5A68     		ldr	r2, [r3, #4]
 1656 00aa 22F00C02 		bic	r2, r2, #12
 1657 00ae 5A60     		str	r2, [r3, #4]
2325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1658              		.loc 1 2325 0
 1659 00b0 636D     		ldr	r3, [r4, #84]
 1660 00b2 23F48073 		bic	r3, r3, #256
 1661 00b6 6365     		str	r3, [r4, #84]
2327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1662              		.loc 1 2327 0
 1663 00b8 636D     		ldr	r3, [r4, #84]
 1664 00ba 13F4805F 		tst	r3, #4096
 1665 00be 10D1     		bne	.L134
2329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 1666              		.loc 1 2329 0
 1667 00c0 636D     		ldr	r3, [r4, #84]
 1668 00c2 43F00103 		orr	r3, r3, #1
 1669 00c6 6365     		str	r3, [r4, #84]
 1670 00c8 0BE0     		b	.L134
 1671              	.LVL136:
 1672              	.L154:
 1673              	.LBB306:
ARM GAS  /tmp/ccxf1fbt.s 			page 207


 1674              	.LBB302:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1675              		.loc 2 3176 0
 1676 00ca 0022     		movs	r2, #0
 1677 00cc DDE7     		b	.L133
 1678              	.LVL137:
 1679              	.L155:
 1680              	.LBE302:
 1681              	.LBE306:
 1682              	.LBB307:
 1683              	.LBB305:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1684              		.loc 2 6096 0
 1685 00ce 0022     		movs	r2, #0
 1686 00d0 E9E7     		b	.L135
 1687              	.LVL138:
 1688              	.L136:
 1689              	.LBE305:
 1690              	.LBE307:
2335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1691              		.loc 1 2335 0
 1692 00d2 636D     		ldr	r3, [r4, #84]
 1693 00d4 43F01003 		orr	r3, r3, #16
 1694 00d8 6365     		str	r3, [r4, #84]
2338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1695              		.loc 1 2338 0
 1696 00da A36D     		ldr	r3, [r4, #88]
 1697 00dc 43F00103 		orr	r3, r3, #1
 1698 00e0 A365     		str	r3, [r4, #88]
 1699              	.L134:
2352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1700              		.loc 1 2352 0
 1701 00e2 2046     		mov	r0, r4
 1702 00e4 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1703              	.LVL139:
2360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1704              		.loc 1 2360 0
 1705 00e8 2368     		ldr	r3, [r4]
 1706 00ea 0C22     		movs	r2, #12
 1707 00ec 1A60     		str	r2, [r3]
 1708              	.L131:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1709              		.loc 1 2364 0
 1710 00ee 15F0200F 		tst	r5, #32
 1711 00f2 02D0     		beq	.L137
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1712              		.loc 1 2364 0 is_stmt 0 discriminator 1
 1713 00f4 16F0200F 		tst	r6, #32
 1714 00f8 05D1     		bne	.L138
 1715              	.L137:
2364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1716              		.loc 1 2364 0 discriminator 3
 1717 00fa 15F0400F 		tst	r5, #64
 1718 00fe 50D0     		beq	.L139
2365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1719              		.loc 1 2365 0 is_stmt 1
 1720 0100 16F0400F 		tst	r6, #64
ARM GAS  /tmp/ccxf1fbt.s 			page 208


 1721 0104 4DD0     		beq	.L139
 1722              	.L138:
2368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1723              		.loc 1 2368 0
 1724 0106 636D     		ldr	r3, [r4, #84]
 1725 0108 13F0100F 		tst	r3, #16
 1726 010c 03D1     		bne	.L140
2371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1727              		.loc 1 2371 0
 1728 010e 636D     		ldr	r3, [r4, #84]
 1729 0110 43F40053 		orr	r3, r3, #8192
 1730 0114 6365     		str	r3, [r4, #84]
 1731              	.L140:
2375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1732              		.loc 1 2375 0
 1733 0116 2368     		ldr	r3, [r4]
 1734              	.LVL140:
 1735              	.LBB308:
 1736              	.LBB309:
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1737              		.loc 2 3902 0
 1738 0118 DA6C     		ldr	r2, [r3, #76]
 1739 011a 12F0C00F 		tst	r2, #192
 1740 011e 2CD1     		bne	.L156
 1741 0120 0121     		movs	r1, #1
 1742              	.L141:
 1743              	.LVL141:
 1744              	.LBE309:
 1745              	.LBE308:
 1746              	.LBB311:
 1747              	.LBB312:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1748              		.loc 2 3176 0
 1749 0122 DA68     		ldr	r2, [r3, #12]
 1750 0124 12F4406F 		tst	r2, #3072
 1751 0128 29D1     		bne	.L157
 1752 012a 0120     		movs	r0, #1
 1753              	.L142:
 1754              	.LVL142:
 1755              	.LBE312:
 1756              	.LBE311:
2395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 1757              		.loc 1 2395 0
 1758 012c DA68     		ldr	r2, [r3, #12]
 1759              	.LVL143:
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1760              		.loc 1 2403 0
 1761 012e 31B9     		cbnz	r1, .L143
2403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 1762              		.loc 1 2403 0 is_stmt 0 discriminator 1
 1763 0130 12F0007F 		tst	r2, #33554432
 1764 0134 2FD1     		bne	.L144
2404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****          ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 1765              		.loc 1 2404 0 is_stmt 1
 1766 0136 70B3     		cbz	r0, .L144
2405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 1767              		.loc 1 2405 0
ARM GAS  /tmp/ccxf1fbt.s 			page 209


 1768 0138 12F4005F 		tst	r2, #8192
 1769 013c 2BD1     		bne	.L144
 1770              	.L143:
2409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 1771              		.loc 1 2409 0
 1772 013e 1968     		ldr	r1, [r3]
 1773 0140 11F0400F 		tst	r1, #64
 1774 0144 27D0     		beq	.L144
2417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1775              		.loc 1 2417 0
 1776 0146 12F4001F 		tst	r2, #2097152
 1777 014a 24D1     		bne	.L144
 1778              	.LVL144:
 1779              	.LBB314:
 1780              	.LBB315:
 1781              		.loc 2 6279 0
 1782 014c 9A68     		ldr	r2, [r3, #8]
 1783              	.LVL145:
 1784 014e 12F0080F 		tst	r2, #8
 1785 0152 16D0     		beq	.L158
 1786 0154 0122     		movs	r2, #1
 1787              	.L145:
 1788              	.LVL146:
 1789              	.LBE315:
 1790              	.LBE314:
2421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 1791              		.loc 1 2421 0
 1792 0156 B2B9     		cbnz	r2, .L146
2424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1793              		.loc 1 2424 0
 1794 0158 5A68     		ldr	r2, [r3, #4]
 1795 015a 22F06002 		bic	r2, r2, #96
 1796 015e 5A60     		str	r2, [r3, #4]
2427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1797              		.loc 1 2427 0
 1798 0160 636D     		ldr	r3, [r4, #84]
 1799 0162 23F48053 		bic	r3, r3, #4096
 1800 0166 6365     		str	r3, [r4, #84]
2429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             {
 1801              		.loc 1 2429 0
 1802 0168 636D     		ldr	r3, [r4, #84]
 1803 016a 13F4807F 		tst	r3, #256
 1804 016e 12D1     		bne	.L144
2431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             }
 1805              		.loc 1 2431 0
 1806 0170 636D     		ldr	r3, [r4, #84]
 1807 0172 43F00103 		orr	r3, r3, #1
 1808 0176 6365     		str	r3, [r4, #84]
 1809 0178 0DE0     		b	.L144
 1810              	.LVL147:
 1811              	.L156:
 1812              	.LBB317:
 1813              	.LBB310:
3902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1814              		.loc 2 3902 0
 1815 017a 0021     		movs	r1, #0
 1816 017c D1E7     		b	.L141
ARM GAS  /tmp/ccxf1fbt.s 			page 210


 1817              	.LVL148:
 1818              	.L157:
 1819              	.LBE310:
 1820              	.LBE317:
 1821              	.LBB318:
 1822              	.LBB313:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1823              		.loc 2 3176 0
 1824 017e 0020     		movs	r0, #0
 1825 0180 D4E7     		b	.L142
 1826              	.LVL149:
 1827              	.L158:
 1828              	.LBE313:
 1829              	.LBE318:
 1830              	.LBB319:
 1831              	.LBB316:
 1832              		.loc 2 6279 0
 1833 0182 0022     		movs	r2, #0
 1834 0184 E7E7     		b	.L145
 1835              	.LVL150:
 1836              	.L146:
 1837              	.LBE316:
 1838              	.LBE319:
2437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1839              		.loc 1 2437 0
 1840 0186 636D     		ldr	r3, [r4, #84]
 1841 0188 43F01003 		orr	r3, r3, #16
 1842 018c 6365     		str	r3, [r4, #84]
2440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 1843              		.loc 1 2440 0
 1844 018e A36D     		ldr	r3, [r4, #88]
 1845 0190 43F00103 		orr	r3, r3, #1
 1846 0194 A365     		str	r3, [r4, #88]
 1847              	.L144:
2455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1848              		.loc 1 2455 0
 1849 0196 2046     		mov	r0, r4
 1850 0198 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1851              	.LVL151:
2459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1852              		.loc 1 2459 0
 1853 019c 2368     		ldr	r3, [r4]
 1854 019e 6022     		movs	r2, #96
 1855 01a0 1A60     		str	r2, [r3]
 1856              	.L139:
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1857              		.loc 1 2463 0
 1858 01a2 15F0800F 		tst	r5, #128
 1859 01a6 02D0     		beq	.L147
2463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1860              		.loc 1 2463 0 is_stmt 0 discriminator 1
 1861 01a8 16F0800F 		tst	r6, #128
 1862 01ac 1AD1     		bne	.L162
 1863              	.L147:
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1864              		.loc 1 2480 0 is_stmt 1
 1865 01ae 15F4807F 		tst	r5, #256
ARM GAS  /tmp/ccxf1fbt.s 			page 211


 1866 01b2 02D0     		beq	.L148
2480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1867              		.loc 1 2480 0 is_stmt 0 discriminator 1
 1868 01b4 16F4807F 		tst	r6, #256
 1869 01b8 1FD1     		bne	.L163
 1870              	.L148:
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1871              		.loc 1 2497 0 is_stmt 1
 1872 01ba 15F4007F 		tst	r5, #512
 1873 01be 02D0     		beq	.L149
2497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1874              		.loc 1 2497 0 is_stmt 0 discriminator 1
 1875 01c0 16F4007F 		tst	r6, #512
 1876 01c4 25D1     		bne	.L164
 1877              	.L149:
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1878              		.loc 1 2514 0 is_stmt 1
 1879 01c6 15F0100F 		tst	r5, #16
 1880 01ca 33D0     		beq	.L150
2514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1881              		.loc 1 2514 0 is_stmt 0 discriminator 1
 1882 01cc 16F0100F 		tst	r6, #16
 1883 01d0 30D0     		beq	.L150
2522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1884              		.loc 1 2522 0 is_stmt 1
 1885 01d2 636B     		ldr	r3, [r4, #52]
 1886 01d4 4BB3     		cbz	r3, .L159
2543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 1887              		.loc 1 2543 0
 1888 01d6 2368     		ldr	r3, [r4]
 1889 01d8 DB68     		ldr	r3, [r3, #12]
 1890 01da 13F00103 		ands	r3, r3, #1
 1891 01de 25D0     		beq	.L151
2545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 1892              		.loc 1 2545 0
 1893 01e0 0123     		movs	r3, #1
 1894 01e2 23E0     		b	.L151
 1895              	.L162:
2466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1896              		.loc 1 2466 0
 1897 01e4 636D     		ldr	r3, [r4, #84]
 1898 01e6 43F48033 		orr	r3, r3, #65536
 1899 01ea 6365     		str	r3, [r4, #84]
2472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1900              		.loc 1 2472 0
 1901 01ec 2046     		mov	r0, r4
 1902 01ee FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1903              	.LVL152:
2476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1904              		.loc 1 2476 0
 1905 01f2 2368     		ldr	r3, [r4]
 1906 01f4 8022     		movs	r2, #128
 1907 01f6 1A60     		str	r2, [r3]
 1908 01f8 D9E7     		b	.L147
 1909              	.L163:
2483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1910              		.loc 1 2483 0
ARM GAS  /tmp/ccxf1fbt.s 			page 212


 1911 01fa 636D     		ldr	r3, [r4, #84]
 1912 01fc 43F40033 		orr	r3, r3, #131072
 1913 0200 6365     		str	r3, [r4, #84]
2489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1914              		.loc 1 2489 0
 1915 0202 2046     		mov	r0, r4
 1916 0204 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1917              	.LVL153:
2493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1918              		.loc 1 2493 0
 1919 0208 2368     		ldr	r3, [r4]
 1920 020a 4FF48072 		mov	r2, #256
 1921 020e 1A60     		str	r2, [r3]
 1922 0210 D3E7     		b	.L148
 1923              	.L164:
2500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1924              		.loc 1 2500 0
 1925 0212 636D     		ldr	r3, [r4, #84]
 1926 0214 43F48023 		orr	r3, r3, #262144
 1927 0218 6365     		str	r3, [r4, #84]
2506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1928              		.loc 1 2506 0
 1929 021a 2046     		mov	r0, r4
 1930 021c FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1931              	.LVL154:
2510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1932              		.loc 1 2510 0
 1933 0220 2368     		ldr	r3, [r4]
 1934 0222 4FF40072 		mov	r2, #512
 1935 0226 1A60     		str	r2, [r3]
 1936 0228 CDE7     		b	.L149
 1937              	.L159:
2524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 1938              		.loc 1 2524 0
 1939 022a 0123     		movs	r3, #1
 1940              	.L151:
 1941              	.LVL155:
2550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 1942              		.loc 1 2550 0
 1943 022c 4BB9     		cbnz	r3, .L165
 1944              	.LVL156:
 1945              	.L152:
2571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 1946              		.loc 1 2571 0
 1947 022e 2368     		ldr	r3, [r4]
 1948 0230 1022     		movs	r2, #16
 1949 0232 1A60     		str	r2, [r3]
 1950              	.L150:
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1951              		.loc 1 2575 0
 1952 0234 15F4806F 		tst	r5, #1024
 1953 0238 02D0     		beq	.L124
2575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 1954              		.loc 1 2575 0 is_stmt 0 discriminator 1
 1955 023a 16F4806F 		tst	r6, #1024
 1956 023e 0CD1     		bne	.L166
 1957              	.L124:
ARM GAS  /tmp/ccxf1fbt.s 			page 213


 1958 0240 70BD     		pop	{r4, r5, r6, pc}
 1959              	.LVL157:
 1960              	.L165:
2553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1961              		.loc 1 2553 0 is_stmt 1
 1962 0242 636D     		ldr	r3, [r4, #84]
 1963              	.LVL158:
 1964 0244 43F48063 		orr	r3, r3, #1024
 1965 0248 6365     		str	r3, [r4, #84]
2556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1966              		.loc 1 2556 0
 1967 024a A36D     		ldr	r3, [r4, #88]
 1968 024c 43F00203 		orr	r3, r3, #2
 1969 0250 A365     		str	r3, [r4, #88]
2566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1970              		.loc 1 2566 0
 1971 0252 2046     		mov	r0, r4
 1972 0254 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1973              	.LVL159:
 1974 0258 E9E7     		b	.L152
 1975              	.L166:
2578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1976              		.loc 1 2578 0
 1977 025a 636D     		ldr	r3, [r4, #84]
 1978 025c 43F48043 		orr	r3, r3, #16384
 1979 0260 6365     		str	r3, [r4, #84]
2581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1980              		.loc 1 2581 0
 1981 0262 A36D     		ldr	r3, [r4, #88]
 1982 0264 43F00803 		orr	r3, r3, #8
 1983 0268 A365     		str	r3, [r4, #88]
2584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1984              		.loc 1 2584 0
 1985 026a 2368     		ldr	r3, [r4]
 1986 026c 4FF48062 		mov	r2, #1024
 1987 0270 1A60     		str	r2, [r3]
2590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1988              		.loc 1 2590 0
 1989 0272 2046     		mov	r0, r4
 1990 0274 FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1991              	.LVL160:
2594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 1992              		.loc 1 2594 0
 1993 0278 E2E7     		b	.L124
 1994              	.L168:
 1995 027a 00BF     		.align	2
 1996              	.L167:
 1997 027c 00000450 		.word	1342439424
 1998 0280 00000000 		.word	.LC0
 1999              		.cfi_endproc
 2000              	.LFE297:
 2002              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 2003              		.align	1
 2004              		.global	ADC_DMAConvCplt
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
ARM GAS  /tmp/ccxf1fbt.s 			page 214


 2008              		.fpu fpv4-sp-d16
 2010              	ADC_DMAConvCplt:
 2011              	.LFB309:
3493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 2012              		.loc 1 3493 0
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 0, uses_anonymous_args = 0
 2016              	.LVL161:
 2017 0000 08B5     		push	{r3, lr}
 2018              	.LCFI9:
 2019              		.cfi_def_cfa_offset 8
 2020              		.cfi_offset 3, -8
 2021              		.cfi_offset 14, -4
3495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2022              		.loc 1 3495 0
 2023 0002 836A     		ldr	r3, [r0, #40]
 2024              	.LVL162:
3498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2025              		.loc 1 3498 0
 2026 0004 5A6D     		ldr	r2, [r3, #84]
 2027 0006 12F0500F 		tst	r2, #80
 2028 000a 35D1     		bne	.L170
3501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2029              		.loc 1 3501 0
 2030 000c 5A6D     		ldr	r2, [r3, #84]
 2031 000e 42F40072 		orr	r2, r2, #512
 2032 0012 5A65     		str	r2, [r3, #84]
3507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2033              		.loc 1 3507 0
 2034 0014 1A68     		ldr	r2, [r3]
 2035 0016 1168     		ldr	r1, [r2]
 2036 0018 11F0080F 		tst	r1, #8
 2037 001c 18D0     		beq	.L171
 2038              	.LVL163:
 2039              	.LBB320:
 2040              	.LBB321:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2041              		.loc 2 3176 0
 2042 001e D168     		ldr	r1, [r2, #12]
 2043 0020 11F4406F 		tst	r1, #3072
 2044 0024 12D1     		bne	.L176
 2045 0026 0121     		movs	r1, #1
 2046              	.L172:
 2047              	.LVL164:
 2048              	.LBE321:
 2049              	.LBE320:
3510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2050              		.loc 1 3510 0
 2051 0028 11B3     		cbz	r1, .L173
3513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2052              		.loc 1 3513 0
 2053 002a D268     		ldr	r2, [r2, #12]
 2054 002c 12F4005F 		tst	r2, #8192
 2055 0030 1ED1     		bne	.L173
3516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 2056              		.loc 1 3516 0
ARM GAS  /tmp/ccxf1fbt.s 			page 215


 2057 0032 5A6D     		ldr	r2, [r3, #84]
 2058 0034 22F48072 		bic	r2, r2, #256
 2059 0038 5A65     		str	r2, [r3, #84]
3517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 2060              		.loc 1 3517 0
 2061 003a 5A6D     		ldr	r2, [r3, #84]
 2062 003c 12F4805F 		tst	r2, #4096
 2063 0040 16D1     		bne	.L173
3519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 2064              		.loc 1 3519 0
 2065 0042 5A6D     		ldr	r2, [r3, #84]
 2066 0044 42F00102 		orr	r2, r2, #1
 2067 0048 5A65     		str	r2, [r3, #84]
 2068 004a 11E0     		b	.L173
 2069              	.LVL165:
 2070              	.L176:
 2071              	.LBB323:
 2072              	.LBB322:
3176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2073              		.loc 2 3176 0
 2074 004c 0021     		movs	r1, #0
 2075 004e EBE7     		b	.L172
 2076              	.LVL166:
 2077              	.L171:
 2078              	.LBE322:
 2079              	.LBE323:
3528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2080              		.loc 1 3528 0
 2081 0050 D268     		ldr	r2, [r2, #12]
 2082 0052 12F0020F 		tst	r2, #2
 2083 0056 0BD1     		bne	.L173
3531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 2084              		.loc 1 3531 0
 2085 0058 5A6D     		ldr	r2, [r3, #84]
 2086 005a 22F48072 		bic	r2, r2, #256
 2087 005e 5A65     		str	r2, [r3, #84]
3532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2088              		.loc 1 3532 0
 2089 0060 5A6D     		ldr	r2, [r3, #84]
 2090 0062 12F4805F 		tst	r2, #4096
 2091 0066 03D1     		bne	.L173
3534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 2092              		.loc 1 3534 0
 2093 0068 5A6D     		ldr	r2, [r3, #84]
 2094 006a 42F00102 		orr	r2, r2, #1
 2095 006e 5A65     		str	r2, [r3, #84]
 2096              	.L173:
3543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2097              		.loc 1 3543 0
 2098 0070 1846     		mov	r0, r3
 2099              	.LVL167:
 2100 0072 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 2101              	.LVL168:
 2102 0076 08BD     		pop	{r3, pc}
 2103              	.LVL169:
 2104              	.L170:
3548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
ARM GAS  /tmp/ccxf1fbt.s 			page 216


 2105              		.loc 1 3548 0
 2106 0078 5A6D     		ldr	r2, [r3, #84]
 2107 007a 12F0100F 		tst	r2, #16
 2108 007e 03D1     		bne	.L178
3560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 2109              		.loc 1 3560 0
 2110 0080 DB6C     		ldr	r3, [r3, #76]
 2111              	.LVL170:
 2112 0082 5B6B     		ldr	r3, [r3, #52]
 2113 0084 9847     		blx	r3
 2114              	.LVL171:
 2115 0086 08BD     		pop	{r3, pc}
 2116              	.LVL172:
 2117              	.L178:
3554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 2118              		.loc 1 3554 0
 2119 0088 1846     		mov	r0, r3
 2120              	.LVL173:
 2121 008a FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2122              	.LVL174:
 2123 008e 08BD     		pop	{r3, pc}
 2124              		.cfi_endproc
 2125              	.LFE309:
 2127              		.section	.text.ADC_DMAError,"ax",%progbits
 2128              		.align	1
 2129              		.global	ADC_DMAError
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2133              		.fpu fpv4-sp-d16
 2135              	ADC_DMAError:
 2136              	.LFB311:
3580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
3582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** /**
3584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @brief  DMA error callback.
3585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   * @retval None
3587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   */
3588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** {
 2137              		.loc 1 3589 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141              	.LVL175:
 2142 0000 08B5     		push	{r3, lr}
 2143              	.LCFI10:
 2144              		.cfi_def_cfa_offset 8
 2145              		.cfi_offset 3, -8
 2146              		.cfi_offset 14, -4
3590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2147              		.loc 1 3591 0
 2148 0002 806A     		ldr	r0, [r0, #40]
 2149              	.LVL176:
ARM GAS  /tmp/ccxf1fbt.s 			page 217


3592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC state */
3594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 2150              		.loc 1 3594 0
 2151 0004 436D     		ldr	r3, [r0, #84]
 2152 0006 43F04003 		orr	r3, r3, #64
 2153 000a 4365     		str	r3, [r0, #84]
3595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 2154              		.loc 1 3597 0
 2155 000c 836D     		ldr	r3, [r0, #88]
 2156 000e 43F00403 		orr	r3, r3, #4
 2157 0012 8365     		str	r3, [r0, #88]
3598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
3599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Error callback */
3600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #else
3603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 2158              		.loc 1 3603 0
 2159 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 2160              	.LVL177:
 2161 0018 08BD     		pop	{r3, pc}
 2162              		.cfi_endproc
 2163              	.LFE311:
 2165              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 2166              		.align	1
 2167              		.global	HAL_ADC_ConfigChannel
 2168              		.syntax unified
 2169              		.thumb
 2170              		.thumb_func
 2171              		.fpu fpv4-sp-d16
 2173              	HAL_ADC_ConfigChannel:
 2174              	.LFB302:
2700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2175              		.loc 1 2700 0
 2176              		.cfi_startproc
 2177              		@ args = 0, pretend = 0, frame = 8
 2178              		@ frame_needed = 0, uses_anonymous_args = 0
 2179              	.LVL178:
 2180 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2181              	.LCFI11:
 2182              		.cfi_def_cfa_offset 20
 2183              		.cfi_offset 4, -20
 2184              		.cfi_offset 5, -16
 2185              		.cfi_offset 6, -12
 2186              		.cfi_offset 7, -8
 2187              		.cfi_offset 14, -4
 2188 0002 83B0     		sub	sp, sp, #12
 2189              	.LCFI12:
 2190              		.cfi_def_cfa_offset 32
 2191 0004 0546     		mov	r5, r0
 2192 0006 0C46     		mov	r4, r1
 2193              	.LVL179:
2704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 2194              		.loc 1 2704 0
ARM GAS  /tmp/ccxf1fbt.s 			page 218


 2195 0008 0023     		movs	r3, #0
 2196 000a 0193     		str	r3, [sp, #4]
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2197              		.loc 1 2709 0
 2198 000c 0268     		ldr	r2, [r0]
 2199 000e 934B     		ldr	r3, .L259
 2200 0010 9A42     		cmp	r2, r3
 2201 0012 04D0     		beq	.L182
2709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 2202              		.loc 1 2709 0 is_stmt 0 discriminator 1
 2203 0014 40F69521 		movw	r1, #2709
 2204              	.LVL180:
 2205 0018 9148     		ldr	r0, .L259+4
 2206              	.LVL181:
 2207 001a FFF7FEFF 		bl	assert_failed
 2208              	.LVL182:
 2209              	.L182:
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2210              		.loc 1 2710 0 is_stmt 1
 2211 001e 6368     		ldr	r3, [r4, #4]
 2212 0020 062B     		cmp	r3, #6
 2213 0022 31D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2214              		.loc 1 2710 0 is_stmt 0 discriminator 1
 2215 0024 0C2B     		cmp	r3, #12
 2216 0026 2FD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2217              		.loc 1 2710 0 discriminator 2
 2218 0028 122B     		cmp	r3, #18
 2219 002a 2DD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2220              		.loc 1 2710 0 discriminator 3
 2221 002c 182B     		cmp	r3, #24
 2222 002e 2BD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2223              		.loc 1 2710 0 discriminator 4
 2224 0030 B3F5807F 		cmp	r3, #256
 2225 0034 28D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2226              		.loc 1 2710 0 discriminator 5
 2227 0036 B3F5837F 		cmp	r3, #262
 2228 003a 25D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2229              		.loc 1 2710 0 discriminator 6
 2230 003c B3F5867F 		cmp	r3, #268
 2231 0040 22D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2232              		.loc 1 2710 0 discriminator 7
 2233 0042 B3F5897F 		cmp	r3, #274
 2234 0046 1FD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2235              		.loc 1 2710 0 discriminator 8
 2236 0048 B3F58C7F 		cmp	r3, #280
 2237 004c 1CD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2238              		.loc 1 2710 0 discriminator 9
 2239 004e B3F5007F 		cmp	r3, #512
ARM GAS  /tmp/ccxf1fbt.s 			page 219


 2240 0052 19D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2241              		.loc 1 2710 0 discriminator 10
 2242 0054 40F20622 		movw	r2, #518
 2243 0058 9342     		cmp	r3, r2
 2244 005a 15D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2245              		.loc 1 2710 0 discriminator 11
 2246 005c B3F5037F 		cmp	r3, #524
 2247 0060 12D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2248              		.loc 1 2710 0 discriminator 12
 2249 0062 40F21222 		movw	r2, #530
 2250 0066 9342     		cmp	r3, r2
 2251 0068 0ED0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2252              		.loc 1 2710 0 discriminator 13
 2253 006a B3F5067F 		cmp	r3, #536
 2254 006e 0BD0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2255              		.loc 1 2710 0 discriminator 14
 2256 0070 B3F5407F 		cmp	r3, #768
 2257 0074 08D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2258              		.loc 1 2710 0 discriminator 15
 2259 0076 40F20632 		movw	r2, #774
 2260 007a 9342     		cmp	r3, r2
 2261 007c 04D0     		beq	.L183
2710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 2262              		.loc 1 2710 0 discriminator 16
 2263 007e 40F69621 		movw	r1, #2710
 2264 0082 7748     		ldr	r0, .L259+4
 2265 0084 FFF7FEFF 		bl	assert_failed
 2266              	.LVL183:
 2267              	.L183:
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 2268              		.loc 1 2711 0 is_stmt 1
 2269 0088 A368     		ldr	r3, [r4, #8]
 2270 008a 072B     		cmp	r3, #7
 2271 008c 00F2D380 		bhi	.L245
 2272              	.L184:
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2273              		.loc 1 2712 0
 2274 0090 E368     		ldr	r3, [r4, #12]
 2275 0092 7F2B     		cmp	r3, #127
 2276 0094 07D0     		beq	.L185
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2277              		.loc 1 2712 0 is_stmt 0 discriminator 1
 2278 0096 734A     		ldr	r2, .L259+8
 2279 0098 9342     		cmp	r3, r2
 2280 009a 04D0     		beq	.L185
2712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 2281              		.loc 1 2712 0 discriminator 2
 2282 009c 40F69821 		movw	r1, #2712
 2283 00a0 6F48     		ldr	r0, .L259+4
 2284 00a2 FFF7FEFF 		bl	assert_failed
 2285              	.LVL184:
ARM GAS  /tmp/ccxf1fbt.s 			page 220


 2286              	.L185:
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2287              		.loc 1 2713 0 is_stmt 1
 2288 00a6 2369     		ldr	r3, [r4, #16]
 2289 00a8 042B     		cmp	r3, #4
 2290 00aa 0BD0     		beq	.L186
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2291              		.loc 1 2713 0 is_stmt 0 discriminator 1
 2292 00ac 53B1     		cbz	r3, .L186
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2293              		.loc 1 2713 0 discriminator 2
 2294 00ae 012B     		cmp	r3, #1
 2295 00b0 08D0     		beq	.L186
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2296              		.loc 1 2713 0 discriminator 3
 2297 00b2 022B     		cmp	r3, #2
 2298 00b4 06D0     		beq	.L186
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2299              		.loc 1 2713 0 discriminator 4
 2300 00b6 032B     		cmp	r3, #3
 2301 00b8 04D0     		beq	.L186
2713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
 2302              		.loc 1 2713 0 discriminator 5
 2303 00ba 40F69921 		movw	r1, #2713
 2304 00be 6848     		ldr	r0, .L259+4
 2305 00c0 FFF7FEFF 		bl	assert_failed
 2306              	.LVL185:
 2307              	.L186:
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2308              		.loc 1 2714 0 is_stmt 1
 2309 00c4 6169     		ldr	r1, [r4, #20]
 2310 00c6 2B68     		ldr	r3, [r5]
 2311              	.LVL186:
 2312              	.LBB324:
 2313              	.LBB325:
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2314              		.loc 2 2636 0
 2315 00c8 DB68     		ldr	r3, [r3, #12]
 2316              	.LVL187:
 2317              	.LBE325:
 2318              	.LBE324:
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2319              		.loc 1 2714 0
 2320 00ca 9B08     		lsrs	r3, r3, #2
 2321 00cc 03F00603 		and	r3, r3, #6
 2322 00d0 40F6FF72 		movw	r2, #4095
 2323 00d4 22FA03F3 		lsr	r3, r2, r3
 2324 00d8 9942     		cmp	r1, r3
 2325 00da 00F2B280 		bhi	.L246
 2326              	.L187:
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2327              		.loc 1 2718 0
 2328 00de 2369     		ldr	r3, [r4, #16]
 2329 00e0 042B     		cmp	r3, #4
 2330 00e2 04D0     		beq	.L188
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2331              		.loc 1 2718 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccxf1fbt.s 			page 221


 2332 00e4 95F83830 		ldrb	r3, [r5, #56]	@ zero_extendqisi2
 2333 00e8 012B     		cmp	r3, #1
 2334 00ea 00F0B080 		beq	.L247
 2335              	.L188:
2721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2336              		.loc 1 2721 0 is_stmt 1
 2337 00ee E268     		ldr	r2, [r4, #12]
 2338 00f0 5C4B     		ldr	r3, .L259+8
 2339 00f2 9A42     		cmp	r2, r3
 2340 00f4 00F03181 		beq	.L189
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2341              		.loc 1 2723 0
 2342 00f8 2A68     		ldr	r2, [r5]
 2343 00fa 584B     		ldr	r3, .L259
 2344 00fc 9A42     		cmp	r2, r3
 2345 00fe 00F0C180 		beq	.L248
 2346              	.L190:
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2347              		.loc 1 2723 0 is_stmt 0 discriminator 25
 2348 0102 40F6A321 		movw	r1, #2723
 2349 0106 5648     		ldr	r0, .L259+4
 2350 0108 FFF7FEFF 		bl	assert_failed
 2351              	.LVL188:
 2352              	.L191:
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2353              		.loc 1 2731 0 is_stmt 1
 2354 010c 95F85030 		ldrb	r3, [r5, #80]	@ zero_extendqisi2
 2355 0110 012B     		cmp	r3, #1
 2356 0112 00F0F782 		beq	.L233
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2357              		.loc 1 2731 0 is_stmt 0 discriminator 2
 2358 0116 0123     		movs	r3, #1
 2359 0118 85F85030 		strb	r3, [r5, #80]
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2360              		.loc 1 2738 0 is_stmt 1 discriminator 2
 2361 011c 2E68     		ldr	r6, [r5]
 2362              	.LVL189:
 2363              	.LBB326:
 2364              	.LBB327:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2365              		.loc 2 6096 0 discriminator 2
 2366 011e B268     		ldr	r2, [r6, #8]
 2367 0120 12F0040F 		tst	r2, #4
 2368 0124 00F06981 		beq	.L234
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2369              		.loc 2 6096 0 is_stmt 0
 2370 0128 1A46     		mov	r2, r3
 2371              	.L193:
 2372              	.LVL190:
 2373              	.LBE327:
 2374              	.LBE326:
2738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 2375              		.loc 1 2738 0 is_stmt 1
 2376 012a 002A     		cmp	r2, #0
 2377 012c 40F0DC82 		bne	.L194
2761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2378              		.loc 1 2761 0
ARM GAS  /tmp/ccxf1fbt.s 			page 222


 2379 0130 6068     		ldr	r0, [r4, #4]
 2380 0132 2168     		ldr	r1, [r4]
 2381              	.LVL191:
 2382              	.LBB329:
 2383              	.LBB330:
3482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2384              		.loc 2 3482 0
 2385 0134 3036     		adds	r6, r6, #48
 2386              	.LVL192:
 2387 0136 030A     		lsrs	r3, r0, #8
 2388 0138 9B00     		lsls	r3, r3, #2
 2389 013a 03F00C03 		and	r3, r3, #12
 2390              	.LVL193:
3484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2391              		.loc 2 3484 0
 2392 013e F258     		ldr	r2, [r6, r3]
 2393 0140 00F01F00 		and	r0, r0, #31
 2394              	.LVL194:
 2395 0144 1F27     		movs	r7, #31
 2396 0146 8740     		lsls	r7, r7, r0
 2397 0148 22EA0702 		bic	r2, r2, r7
 2398 014c C1F38461 		ubfx	r1, r1, #26, #5
 2399              	.LVL195:
 2400 0150 8140     		lsls	r1, r1, r0
 2401 0152 0A43     		orrs	r2, r2, r1
 2402 0154 F250     		str	r2, [r6, r3]
 2403              	.LVL196:
 2404              	.LBE330:
 2405              	.LBE329:
2768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2406              		.loc 1 2768 0
 2407 0156 2B68     		ldr	r3, [r5]
 2408              	.LVL197:
 2409              	.LBB331:
 2410              	.LBB332:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2411              		.loc 2 6096 0
 2412 0158 9A68     		ldr	r2, [r3, #8]
 2413 015a 12F0040F 		tst	r2, #4
 2414 015e 00F04E81 		beq	.L235
 2415 0162 0121     		movs	r1, #1
 2416              	.L195:
 2417              	.LVL198:
 2418              	.LBE332:
 2419              	.LBE331:
 2420              	.LBB334:
 2421              	.LBB335:
 2422              		.loc 2 6279 0
 2423 0164 9A68     		ldr	r2, [r3, #8]
 2424 0166 12F0080F 		tst	r2, #8
 2425 016a 00F04A81 		beq	.L236
 2426 016e 0122     		movs	r2, #1
 2427              	.L196:
 2428              	.LVL199:
 2429              	.LBE335:
 2430              	.LBE334:
2770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
ARM GAS  /tmp/ccxf1fbt.s 			page 223


 2431              		.loc 1 2770 0
 2432 0170 59BB     		cbnz	r1, .L197
2771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 2433              		.loc 1 2771 0
 2434 0172 52BB     		cbnz	r2, .L197
2794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 2435              		.loc 1 2794 0
 2436 0174 2668     		ldr	r6, [r4]
 2437 0176 A068     		ldr	r0, [r4, #8]
 2438              	.LVL200:
 2439              	.LBB337:
 2440              	.LBB338:
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2441              		.loc 2 4648 0
 2442 0178 1433     		adds	r3, r3, #20
 2443              	.LVL201:
 2444 017a 720E     		lsrs	r2, r6, #25
 2445 017c 9200     		lsls	r2, r2, #2
 2446 017e 02F00402 		and	r2, r2, #4
 2447              	.LVL202:
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2448              		.loc 2 4650 0
 2449 0182 9958     		ldr	r1, [r3, r2]
 2450 0184 C6F30456 		ubfx	r6, r6, #20, #5
 2451              	.LVL203:
 2452 0188 0727     		movs	r7, #7
 2453 018a B740     		lsls	r7, r7, r6
 2454 018c 21EA0701 		bic	r1, r1, r7
 2455 0190 B040     		lsls	r0, r0, r6
 2456              	.LVL204:
 2457 0192 0143     		orrs	r1, r1, r0
 2458 0194 9950     		str	r1, [r3, r2]
 2459              	.LVL205:
 2460              	.LBE338:
 2461              	.LBE337:
2801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2462              		.loc 1 2801 0
 2463 0196 6269     		ldr	r2, [r4, #20]
 2464 0198 2968     		ldr	r1, [r5]
 2465 019a CB68     		ldr	r3, [r1, #12]
 2466 019c C3F3C103 		ubfx	r3, r3, #3, #2
 2467 01a0 5B00     		lsls	r3, r3, #1
 2468 01a2 02FA03F3 		lsl	r3, r2, r3
 2469              	.LVL206:
2803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2470              		.loc 1 2803 0
 2471 01a6 2069     		ldr	r0, [r4, #16]
 2472 01a8 0428     		cmp	r0, #4
 2473 01aa 00F02C81 		beq	.L198
2806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2474              		.loc 1 2806 0
 2475 01ae 2668     		ldr	r6, [r4]
 2476              	.LVL207:
 2477              	.LBB339:
 2478              	.LBB340:
2857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2479              		.loc 2 2857 0
ARM GAS  /tmp/ccxf1fbt.s 			page 224


 2480 01b0 6031     		adds	r1, r1, #96
 2481              	.LVL208:
2859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2482              		.loc 2 2859 0
 2483 01b2 51F82070 		ldr	r7, [r1, r0, lsl #2]
 2484 01b6 2C4A     		ldr	r2, .L259+12
 2485 01b8 3A40     		ands	r2, r2, r7
 2486 01ba 06F0F846 		and	r6, r6, #2080374784
 2487              	.LVL209:
 2488 01be 3343     		orrs	r3, r3, r6
 2489              	.LVL210:
 2490 01c0 1A43     		orrs	r2, r2, r3
 2491 01c2 42F00042 		orr	r2, r2, #-2147483648
 2492 01c6 41F82020 		str	r2, [r1, r0, lsl #2]
 2493              	.LVL211:
 2494              	.L197:
 2495              	.LBE340:
 2496              	.LBE339:
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2497              		.loc 1 2835 0
 2498 01ca 2A68     		ldr	r2, [r5]
 2499              	.LVL212:
 2500              	.LBB341:
 2501              	.LBB342:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2502              		.loc 2 5974 0
 2503 01cc 9368     		ldr	r3, [r2, #8]
 2504 01ce 13F0010F 		tst	r3, #1
 2505 01d2 00F07481 		beq	.L237
 2506 01d6 0123     		movs	r3, #1
 2507              	.L210:
 2508              	.LVL213:
 2509              	.LBE342:
 2510              	.LBE341:
2835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2511              		.loc 1 2835 0
 2512 01d8 B3B9     		cbnz	r3, .L211
2838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2513              		.loc 1 2838 0
 2514 01da 2368     		ldr	r3, [r4]
 2515 01dc E068     		ldr	r0, [r4, #12]
 2516              	.LVL214:
 2517              	.LBB344:
 2518              	.LBB345:
4801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2519              		.loc 2 4801 0
 2520 01de D2F8B010 		ldr	r1, [r2, #176]
 2521 01e2 C3F31206 		ubfx	r6, r3, #0, #19
 2522 01e6 21EA0601 		bic	r1, r1, r6
 2523 01ea 00F01806 		and	r6, r0, #24
 2524 01ee 1F48     		ldr	r0, .L259+16
 2525              	.LVL215:
 2526 01f0 F040     		lsrs	r0, r0, r6
 2527 01f2 0340     		ands	r3, r3, r0
 2528              	.LVL216:
 2529 01f4 C3F31203 		ubfx	r3, r3, #0, #19
 2530 01f8 0B43     		orrs	r3, r3, r1
ARM GAS  /tmp/ccxf1fbt.s 			page 225


 2531 01fa C2F8B030 		str	r3, [r2, #176]
 2532              	.LVL217:
 2533              	.LBE345:
 2534              	.LBE344:
2841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2535              		.loc 1 2841 0
 2536 01fe E268     		ldr	r2, [r4, #12]
 2537 0200 184B     		ldr	r3, .L259+8
 2538 0202 9A42     		cmp	r2, r3
 2539 0204 00F05D81 		beq	.L249
 2540              	.L211:
2858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 2541              		.loc 1 2858 0
 2542 0208 2368     		ldr	r3, [r4]
 2543 020a 194A     		ldr	r2, .L259+20
 2544 020c 1342     		tst	r3, r2
 2545 020e 00F07582 		beq	.L238
 2546              	.LVL218:
 2547              	.LBB346:
 2548              	.LBB347:
2526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2549              		.loc 2 2526 0
 2550 0212 184A     		ldr	r2, .L259+24
 2551 0214 9268     		ldr	r2, [r2, #8]
 2552 0216 02F0E070 		and	r0, r2, #29360128
 2553              	.LVL219:
 2554              	.LBE347:
 2555              	.LBE346:
2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2556              		.loc 1 2864 0
 2557 021a 1749     		ldr	r1, .L259+28
 2558 021c 8B42     		cmp	r3, r1
 2559 021e 00F01682 		beq	.L250
 2560              	.L229:
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 2561              		.loc 1 2883 0
 2562 0222 1649     		ldr	r1, .L259+32
 2563 0224 8B42     		cmp	r3, r1
 2564 0226 00F03882 		beq	.L251
 2565              	.L232:
2891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2566              		.loc 1 2891 0
 2567 022a 1549     		ldr	r1, .L259+36
 2568 022c 8B42     		cmp	r3, r1
 2569 022e 00F04882 		beq	.L252
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2570              		.loc 1 2701 0
 2571 0232 0020     		movs	r0, #0
 2572 0234 5DE2     		b	.L228
 2573              	.L245:
2711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 2574              		.loc 1 2711 0 discriminator 1
 2575 0236 40F69721 		movw	r1, #2711
 2576 023a 0948     		ldr	r0, .L259+4
 2577 023c FFF7FEFF 		bl	assert_failed
 2578              	.LVL220:
 2579 0240 26E7     		b	.L184
ARM GAS  /tmp/ccxf1fbt.s 			page 226


 2580              	.L246:
2714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2581              		.loc 1 2714 0 discriminator 1
 2582 0242 40F69A21 		movw	r1, #2714
 2583 0246 0648     		ldr	r0, .L259+4
 2584 0248 FFF7FEFF 		bl	assert_failed
 2585              	.LVL221:
 2586 024c 47E7     		b	.L187
 2587              	.L247:
2718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 2588              		.loc 1 2718 0 discriminator 2
 2589 024e 40F69E21 		movw	r1, #2718
 2590 0252 0348     		ldr	r0, .L259+4
 2591 0254 FFF7FEFF 		bl	assert_failed
 2592              	.LVL222:
 2593 0258 49E7     		b	.L188
 2594              	.L260:
 2595 025a 00BF     		.align	2
 2596              	.L259:
 2597 025c 00000450 		.word	1342439424
 2598 0260 00000000 		.word	.LC0
 2599 0264 00007F40 		.word	1082064896
 2600 0268 00F0FF03 		.word	67104768
 2601 026c FFFF0700 		.word	524287
 2602 0270 00000880 		.word	-2146959360
 2603 0274 00030450 		.word	1342440192
 2604 0278 000052C7 		.word	-950927360
 2605 027c 000084CB 		.word	-880541696
 2606 0280 01000080 		.word	-2147483647
 2607              	.L248:
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2608              		.loc 1 2723 0 discriminator 2
 2609 0284 2368     		ldr	r3, [r4]
 2610 0286 C04A     		ldr	r2, .L261
 2611 0288 9342     		cmp	r3, r2
 2612 028a 3FF43FAF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2613              		.loc 1 2723 0 is_stmt 0 discriminator 3
 2614 028e BF4A     		ldr	r2, .L261+4
 2615 0290 9342     		cmp	r3, r2
 2616 0292 3FF43BAF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2617              		.loc 1 2723 0 discriminator 4
 2618 0296 BE4A     		ldr	r2, .L261+8
 2619 0298 9342     		cmp	r3, r2
 2620 029a 3FF437AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2621              		.loc 1 2723 0 discriminator 5
 2622 029e BD4A     		ldr	r2, .L261+12
 2623 02a0 9342     		cmp	r3, r2
 2624 02a2 3FF433AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2625              		.loc 1 2723 0 discriminator 6
 2626 02a6 02F18662 		add	r2, r2, #70254592
 2627 02aa 1032     		adds	r2, r2, #16
 2628 02ac 9342     		cmp	r3, r2
 2629 02ae 3FF42DAF 		beq	.L191
ARM GAS  /tmp/ccxf1fbt.s 			page 227


2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2630              		.loc 1 2723 0 discriminator 7
 2631 02b2 B94A     		ldr	r2, .L261+16
 2632 02b4 9342     		cmp	r3, r2
 2633 02b6 3FF429AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2634              		.loc 1 2723 0 discriminator 8
 2635 02ba 02F18662 		add	r2, r2, #70254592
 2636 02be 4032     		adds	r2, r2, #64
 2637 02c0 9342     		cmp	r3, r2
 2638 02c2 3FF423AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2639              		.loc 1 2723 0 discriminator 9
 2640 02c6 B54A     		ldr	r2, .L261+20
 2641 02c8 9342     		cmp	r3, r2
 2642 02ca 3FF41FAF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2643              		.loc 1 2723 0 discriminator 10
 2644 02ce 02F18662 		add	r2, r2, #70254592
 2645 02d2 02F58072 		add	r2, r2, #256
 2646 02d6 9342     		cmp	r3, r2
 2647 02d8 3FF418AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2648              		.loc 1 2723 0 discriminator 11
 2649 02dc B04A     		ldr	r2, .L261+24
 2650 02de 9342     		cmp	r3, r2
 2651 02e0 3FF414AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2652              		.loc 1 2723 0 discriminator 12
 2653 02e4 02F10422 		add	r2, r2, #67109888
 2654 02e8 02F54012 		add	r2, r2, #3145728
 2655 02ec 9342     		cmp	r3, r2
 2656 02ee 3FF40DAF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2657              		.loc 1 2723 0 discriminator 13
 2658 02f2 02F18662 		add	r2, r2, #70254592
 2659 02f6 02F50062 		add	r2, r2, #2048
 2660 02fa 9342     		cmp	r3, r2
 2661 02fc 3FF406AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2662              		.loc 1 2723 0 discriminator 14
 2663 0300 A84A     		ldr	r2, .L261+28
 2664 0302 9342     		cmp	r3, r2
 2665 0304 3FF402AF 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2666              		.loc 1 2723 0 discriminator 15
 2667 0308 A74A     		ldr	r2, .L261+32
 2668 030a 9342     		cmp	r3, r2
 2669 030c 3FF4FEAE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2670              		.loc 1 2723 0 discriminator 16
 2671 0310 A64A     		ldr	r2, .L261+36
 2672 0312 9342     		cmp	r3, r2
 2673 0314 3FF4FAAE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2674              		.loc 1 2723 0 discriminator 17
 2675 0318 A54A     		ldr	r2, .L261+40
ARM GAS  /tmp/ccxf1fbt.s 			page 228


 2676 031a 9342     		cmp	r3, r2
 2677 031c 3FF4F6AE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2678              		.loc 1 2723 0 discriminator 18
 2679 0320 A44A     		ldr	r2, .L261+44
 2680 0322 9342     		cmp	r3, r2
 2681 0324 3FF4F2AE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2682              		.loc 1 2723 0 discriminator 19
 2683 0328 A34A     		ldr	r2, .L261+48
 2684 032a 9342     		cmp	r3, r2
 2685 032c 3FF4EEAE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2686              		.loc 1 2723 0 discriminator 20
 2687 0330 A24A     		ldr	r2, .L261+52
 2688 0332 9342     		cmp	r3, r2
 2689 0334 3FF4EAAE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2690              		.loc 1 2723 0 discriminator 21
 2691 0338 A14A     		ldr	r2, .L261+56
 2692 033a 9342     		cmp	r3, r2
 2693 033c 3FF4E6AE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2694              		.loc 1 2723 0 discriminator 22
 2695 0340 A04A     		ldr	r2, .L261+60
 2696 0342 9342     		cmp	r3, r2
 2697 0344 3FF4E2AE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2698              		.loc 1 2723 0 discriminator 23
 2699 0348 9F4A     		ldr	r2, .L261+64
 2700 034a 9342     		cmp	r3, r2
 2701 034c 3FF4DEAE 		beq	.L191
2723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2702              		.loc 1 2723 0 discriminator 24
 2703 0350 9E4A     		ldr	r2, .L261+68
 2704 0352 9342     		cmp	r3, r2
 2705 0354 7FF4D5AE 		bne	.L190
 2706 0358 D8E6     		b	.L191
 2707              	.L189:
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2708              		.loc 1 2727 0 is_stmt 1
 2709 035a 2368     		ldr	r3, [r4]
 2710 035c 8A4A     		ldr	r2, .L261
 2711 035e 9342     		cmp	r3, r2
 2712 0360 3FF4D4AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2713              		.loc 1 2727 0 is_stmt 0 discriminator 1
 2714 0364 894A     		ldr	r2, .L261+4
 2715 0366 9342     		cmp	r3, r2
 2716 0368 3FF4D0AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2717              		.loc 1 2727 0 discriminator 2
 2718 036c 884A     		ldr	r2, .L261+8
 2719 036e 9342     		cmp	r3, r2
 2720 0370 3FF4CCAE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2721              		.loc 1 2727 0 discriminator 3
ARM GAS  /tmp/ccxf1fbt.s 			page 229


 2722 0374 874A     		ldr	r2, .L261+12
 2723 0376 9342     		cmp	r3, r2
 2724 0378 3FF4C8AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2725              		.loc 1 2727 0 discriminator 4
 2726 037c 02F18662 		add	r2, r2, #70254592
 2727 0380 1032     		adds	r2, r2, #16
 2728 0382 9342     		cmp	r3, r2
 2729 0384 3FF4C2AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2730              		.loc 1 2727 0 discriminator 5
 2731 0388 834A     		ldr	r2, .L261+16
 2732 038a 9342     		cmp	r3, r2
 2733 038c 3FF4BEAE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2734              		.loc 1 2727 0 discriminator 6
 2735 0390 02F18662 		add	r2, r2, #70254592
 2736 0394 4032     		adds	r2, r2, #64
 2737 0396 9342     		cmp	r3, r2
 2738 0398 3FF4B8AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2739              		.loc 1 2727 0 discriminator 7
 2740 039c 7F4A     		ldr	r2, .L261+20
 2741 039e 9342     		cmp	r3, r2
 2742 03a0 3FF4B4AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2743              		.loc 1 2727 0 discriminator 8
 2744 03a4 02F18662 		add	r2, r2, #70254592
 2745 03a8 02F58072 		add	r2, r2, #256
 2746 03ac 9342     		cmp	r3, r2
 2747 03ae 3FF4ADAE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2748              		.loc 1 2727 0 discriminator 9
 2749 03b2 7B4A     		ldr	r2, .L261+24
 2750 03b4 9342     		cmp	r3, r2
 2751 03b6 3FF4A9AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2752              		.loc 1 2727 0 discriminator 10
 2753 03ba 02F10422 		add	r2, r2, #67109888
 2754 03be 02F54012 		add	r2, r2, #3145728
 2755 03c2 9342     		cmp	r3, r2
 2756 03c4 3FF4A2AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2757              		.loc 1 2727 0 discriminator 11
 2758 03c8 02F18662 		add	r2, r2, #70254592
 2759 03cc 02F50062 		add	r2, r2, #2048
 2760 03d0 9342     		cmp	r3, r2
 2761 03d2 3FF49BAE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2762              		.loc 1 2727 0 discriminator 12
 2763 03d6 734A     		ldr	r2, .L261+28
 2764 03d8 9342     		cmp	r3, r2
 2765 03da 3FF497AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2766              		.loc 1 2727 0 discriminator 13
 2767 03de 724A     		ldr	r2, .L261+32
 2768 03e0 9342     		cmp	r3, r2
ARM GAS  /tmp/ccxf1fbt.s 			page 230


 2769 03e2 3FF493AE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2770              		.loc 1 2727 0 discriminator 14
 2771 03e6 714A     		ldr	r2, .L261+36
 2772 03e8 9342     		cmp	r3, r2
 2773 03ea 3FF48FAE 		beq	.L191
2727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 2774              		.loc 1 2727 0 discriminator 15
 2775 03ee 40F6A721 		movw	r1, #2727
 2776 03f2 7748     		ldr	r0, .L261+72
 2777 03f4 FFF7FEFF 		bl	assert_failed
 2778              	.LVL223:
 2779 03f8 88E6     		b	.L191
 2780              	.LVL224:
 2781              	.L234:
 2782              	.LBB348:
 2783              	.LBB328:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2784              		.loc 2 6096 0 is_stmt 1
 2785 03fa 0022     		movs	r2, #0
 2786 03fc 95E6     		b	.L193
 2787              	.LVL225:
 2788              	.L235:
 2789              	.LBE328:
 2790              	.LBE348:
 2791              	.LBB349:
 2792              	.LBB333:
 2793 03fe 0021     		movs	r1, #0
 2794 0400 B0E6     		b	.L195
 2795              	.LVL226:
 2796              	.L236:
 2797              	.LBE333:
 2798              	.LBE349:
 2799              	.LBB350:
 2800              	.LBB336:
 2801              		.loc 2 6279 0
 2802 0402 0022     		movs	r2, #0
 2803 0404 B4E6     		b	.L196
 2804              	.LVL227:
 2805              	.L198:
 2806              	.LBE336:
 2807              	.LBE350:
 2808              	.LBB351:
 2809              	.LBB352:
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2810              		.loc 2 2938 0
 2811 0406 0B6E     		ldr	r3, [r1, #96]
 2812              	.LVL228:
 2813              	.LBE352:
 2814              	.LBE351:
 2815              	.LBB353:
 2816              	.LBB354:
 2817 0408 0A6E     		ldr	r2, [r1, #96]
 2818              	.LVL229:
 2819              	.LBE354:
 2820              	.LBE353:
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
ARM GAS  /tmp/ccxf1fbt.s 			page 231


 2821              		.loc 1 2813 0
 2822 040a C2F38462 		ubfx	r2, r2, #26, #5
 2823 040e 2368     		ldr	r3, [r4]
 2824 0410 C3F31200 		ubfx	r0, r3, #0, #19
 2825 0414 80BB     		cbnz	r0, .L199
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2826              		.loc 1 2813 0 is_stmt 0 discriminator 5
 2827 0416 C3F38463 		ubfx	r3, r3, #26, #5
 2828              	.L200:
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2829              		.loc 1 2813 0 discriminator 8
 2830 041a 9342     		cmp	r3, r2
 2831 041c 31D0     		beq	.L253
 2832              	.L201:
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2833              		.loc 1 2817 0 is_stmt 1
 2834 041e 2968     		ldr	r1, [r5]
 2835              	.LVL230:
 2836              	.LBB355:
 2837              	.LBB356:
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2838              		.loc 2 2938 0
 2839 0420 4B6E     		ldr	r3, [r1, #100]
 2840              	.LVL231:
 2841              	.LBE356:
 2842              	.LBE355:
 2843              	.LBB357:
 2844              	.LBB358:
 2845 0422 4A6E     		ldr	r2, [r1, #100]
 2846              	.LVL232:
 2847              	.LBE358:
 2848              	.LBE357:
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2849              		.loc 1 2817 0
 2850 0424 C2F38462 		ubfx	r2, r2, #26, #5
 2851 0428 2368     		ldr	r3, [r4]
 2852 042a C3F31200 		ubfx	r0, r3, #0, #19
 2853 042e 68BB     		cbnz	r0, .L202
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2854              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2855 0430 C3F38463 		ubfx	r3, r3, #26, #5
 2856              	.L203:
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2857              		.loc 1 2817 0 discriminator 8
 2858 0434 9342     		cmp	r3, r2
 2859 0436 2ED0     		beq	.L254
 2860              	.L204:
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2861              		.loc 1 2821 0 is_stmt 1
 2862 0438 2968     		ldr	r1, [r5]
 2863              	.LVL233:
 2864              	.LBB359:
 2865              	.LBB360:
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2866              		.loc 2 2938 0
 2867 043a 8B6E     		ldr	r3, [r1, #104]
 2868              	.LVL234:
ARM GAS  /tmp/ccxf1fbt.s 			page 232


 2869              	.LBE360:
 2870              	.LBE359:
 2871              	.LBB361:
 2872              	.LBB362:
 2873 043c 8A6E     		ldr	r2, [r1, #104]
 2874              	.LVL235:
 2875              	.LBE362:
 2876              	.LBE361:
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2877              		.loc 1 2821 0
 2878 043e C2F38462 		ubfx	r2, r2, #26, #5
 2879 0442 2368     		ldr	r3, [r4]
 2880 0444 C3F31200 		ubfx	r0, r3, #0, #19
 2881 0448 50BB     		cbnz	r0, .L205
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2882              		.loc 1 2821 0 is_stmt 0 discriminator 5
 2883 044a C3F38463 		ubfx	r3, r3, #26, #5
 2884              	.L206:
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2885              		.loc 1 2821 0 discriminator 8
 2886 044e 9342     		cmp	r3, r2
 2887 0450 2BD0     		beq	.L255
 2888              	.L207:
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2889              		.loc 1 2825 0 is_stmt 1
 2890 0452 2968     		ldr	r1, [r5]
 2891              	.LVL236:
 2892              	.LBB363:
 2893              	.LBB364:
2938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2894              		.loc 2 2938 0
 2895 0454 CB6E     		ldr	r3, [r1, #108]
 2896              	.LVL237:
 2897              	.LBE364:
 2898              	.LBE363:
 2899              	.LBB365:
 2900              	.LBB366:
 2901 0456 CA6E     		ldr	r2, [r1, #108]
 2902              	.LVL238:
 2903              	.LBE366:
 2904              	.LBE365:
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2905              		.loc 1 2825 0
 2906 0458 C2F38462 		ubfx	r2, r2, #26, #5
 2907 045c 2368     		ldr	r3, [r4]
 2908 045e C3F31200 		ubfx	r0, r3, #0, #19
 2909 0462 38BB     		cbnz	r0, .L208
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2910              		.loc 1 2825 0 is_stmt 0 discriminator 5
 2911 0464 C3F38463 		ubfx	r3, r3, #26, #5
 2912              	.L209:
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2913              		.loc 1 2825 0 discriminator 8
 2914 0468 9342     		cmp	r3, r2
 2915 046a 7FF4AEAE 		bne	.L197
 2916              	.LVL239:
 2917              	.LBB367:
ARM GAS  /tmp/ccxf1fbt.s 			page 233


 2918              	.LBB368:
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2919              		.loc 2 2997 0 is_stmt 1
 2920 046e CB6E     		ldr	r3, [r1, #108]
 2921 0470 23F00043 		bic	r3, r3, #-2147483648
 2922 0474 CB66     		str	r3, [r1, #108]
 2923 0476 A8E6     		b	.L197
 2924              	.LVL240:
 2925              	.L199:
 2926              	.LBE368:
 2927              	.LBE367:
 2928              	.LBB369:
 2929              	.LBB370:
 2930              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
ARM GAS  /tmp/ccxf1fbt.s 			page 234


  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
ARM GAS  /tmp/ccxf1fbt.s 			page 235


 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 236


 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 237


 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 238


 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
ARM GAS  /tmp/ccxf1fbt.s 			page 239


 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 240


 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 241


 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
ARM GAS  /tmp/ccxf1fbt.s 			page 242


 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccxf1fbt.s 			page 243


 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccxf1fbt.s 			page 244


 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 245


 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  /tmp/ccxf1fbt.s 			page 246


 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 247


 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccxf1fbt.s 			page 248


 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  /tmp/ccxf1fbt.s 			page 249


 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccxf1fbt.s 			page 250


 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2931              		.loc 3 988 0 discriminator 6
 2932              		.syntax unified
 2933              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2934 0478 93FAA3F3 		rbit r3, r3
 2935              	@ 0 "" 2
 2936              	.LVL241:
 2937              		.thumb
 2938              		.syntax unified
 2939              	.LBE370:
 2940              	.LBE369:
2813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2941              		.loc 1 2813 0 discriminator 6
 2942 047c B3FA83F3 		clz	r3, r3
 2943 0480 CBE7     		b	.L200
 2944              	.L253:
 2945              	.LVL242:
 2946              	.LBB371:
 2947              	.LBB372:
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2948              		.loc 2 2997 0
 2949 0482 0B6E     		ldr	r3, [r1, #96]
 2950 0484 23F00043 		bic	r3, r3, #-2147483648
 2951 0488 0B66     		str	r3, [r1, #96]
 2952 048a C8E7     		b	.L201
ARM GAS  /tmp/ccxf1fbt.s 			page 251


 2953              	.LVL243:
 2954              	.L202:
 2955              	.LBE372:
 2956              	.LBE371:
 2957              	.LBB373:
 2958              	.LBB374:
 2959              		.loc 3 988 0 discriminator 6
 2960              		.syntax unified
 2961              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2962 048c 93FAA3F3 		rbit r3, r3
 2963              	@ 0 "" 2
 2964              	.LVL244:
 2965              		.thumb
 2966              		.syntax unified
 2967              	.LBE374:
 2968              	.LBE373:
2817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2969              		.loc 1 2817 0 discriminator 6
 2970 0490 B3FA83F3 		clz	r3, r3
 2971 0494 CEE7     		b	.L203
 2972              	.L254:
 2973              	.LVL245:
 2974              	.LBB375:
 2975              	.LBB376:
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2976              		.loc 2 2997 0
 2977 0496 4B6E     		ldr	r3, [r1, #100]
 2978 0498 23F00043 		bic	r3, r3, #-2147483648
 2979 049c 4B66     		str	r3, [r1, #100]
 2980 049e CBE7     		b	.L204
 2981              	.LVL246:
 2982              	.L205:
 2983              	.LBE376:
 2984              	.LBE375:
 2985              	.LBB377:
 2986              	.LBB378:
 2987              		.loc 3 988 0 discriminator 6
 2988              		.syntax unified
 2989              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2990 04a0 93FAA3F3 		rbit r3, r3
 2991              	@ 0 "" 2
 2992              	.LVL247:
 2993              		.thumb
 2994              		.syntax unified
 2995              	.LBE378:
 2996              	.LBE377:
2821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 2997              		.loc 1 2821 0 discriminator 6
 2998 04a4 B3FA83F3 		clz	r3, r3
 2999 04a8 D1E7     		b	.L206
 3000              	.L255:
 3001              	.LVL248:
 3002              	.LBB379:
 3003              	.LBB380:
2997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 3004              		.loc 2 2997 0
 3005 04aa 8B6E     		ldr	r3, [r1, #104]
ARM GAS  /tmp/ccxf1fbt.s 			page 252


 3006 04ac 23F00043 		bic	r3, r3, #-2147483648
 3007 04b0 8B66     		str	r3, [r1, #104]
 3008 04b2 CEE7     		b	.L207
 3009              	.LVL249:
 3010              	.L208:
 3011              	.LBE380:
 3012              	.LBE379:
 3013              	.LBB381:
 3014              	.LBB382:
 3015              		.loc 3 988 0 discriminator 6
 3016              		.syntax unified
 3017              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3018 04b4 93FAA3F3 		rbit r3, r3
 3019              	@ 0 "" 2
 3020              	.LVL250:
 3021              		.thumb
 3022              		.syntax unified
 3023              	.LBE382:
 3024              	.LBE381:
2825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3025              		.loc 1 2825 0 discriminator 6
 3026 04b8 B3FA83F3 		clz	r3, r3
 3027 04bc D4E7     		b	.L209
 3028              	.LVL251:
 3029              	.L237:
 3030              	.LBB383:
 3031              	.LBB343:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3032              		.loc 2 5974 0
 3033 04be 0023     		movs	r3, #0
 3034 04c0 8AE6     		b	.L210
 3035              	.LVL252:
 3036              	.L249:
 3037              	.LBE343:
 3038              	.LBE383:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3039              		.loc 1 2845 0
 3040 04c2 2968     		ldr	r1, [r5]
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3041              		.loc 1 2846 0
 3042 04c4 2268     		ldr	r2, [r4]
 3043 04c6 C2F31206 		ubfx	r6, r2, #0, #19
 3044 04ca 96BB     		cbnz	r6, .L212
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3045              		.loc 1 2846 0 is_stmt 0 discriminator 1
 3046 04cc 930E     		lsrs	r3, r2, #26
 3047 04ce 0133     		adds	r3, r3, #1
 3048 04d0 03F01F03 		and	r3, r3, #31
 3049 04d4 092B     		cmp	r3, #9
 3050 04d6 8CBF     		ite	hi
 3051 04d8 0023     		movhi	r3, #0
 3052 04da 0123     		movls	r3, #1
 3053              	.L213:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3054              		.loc 1 2845 0 is_stmt 1
 3055 04dc 002B     		cmp	r3, #0
 3056 04de 79D0     		beq	.L214
ARM GAS  /tmp/ccxf1fbt.s 			page 253


2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3057              		.loc 1 2846 0
 3058 04e0 9EBB     		cbnz	r6, .L215
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3059              		.loc 1 2846 0 is_stmt 0 discriminator 3
 3060 04e2 930E     		lsrs	r3, r2, #26
 3061 04e4 0133     		adds	r3, r3, #1
 3062 04e6 9B06     		lsls	r3, r3, #26
 3063 04e8 03F0F843 		and	r3, r3, #2080374784
 3064              	.L216:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3065              		.loc 1 2846 0 discriminator 6
 3066 04ec B6BB     		cbnz	r6, .L217
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3067              		.loc 1 2846 0 discriminator 7
 3068 04ee 900E     		lsrs	r0, r2, #26
 3069 04f0 0130     		adds	r0, r0, #1
 3070 04f2 00F01F07 		and	r7, r0, #31
 3071 04f6 0120     		movs	r0, #1
 3072 04f8 B840     		lsls	r0, r0, r7
 3073              	.L218:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3074              		.loc 1 2846 0 discriminator 10
 3075 04fa 1843     		orrs	r0, r0, r3
 3076 04fc C6BB     		cbnz	r6, .L219
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3077              		.loc 1 2846 0 discriminator 11
 3078 04fe 930E     		lsrs	r3, r2, #26
 3079 0500 0133     		adds	r3, r3, #1
 3080 0502 03F01F03 		and	r3, r3, #31
 3081 0506 03EB4303 		add	r3, r3, r3, lsl #1
 3082 050a 1B05     		lsls	r3, r3, #20
 3083              	.L220:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3084              		.loc 1 2845 0 is_stmt 1
 3085 050c 0343     		orrs	r3, r3, r0
 3086              	.L221:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3087              		.loc 1 2845 0 is_stmt 0 discriminator 1
 3088 050e A068     		ldr	r0, [r4, #8]
 3089              	.LVL253:
 3090              	.LBB384:
 3091              	.LBB385:
4648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3092              		.loc 2 4648 0 is_stmt 1 discriminator 1
 3093 0510 1431     		adds	r1, r1, #20
 3094              	.LVL254:
 3095 0512 5A0E     		lsrs	r2, r3, #25
 3096 0514 9200     		lsls	r2, r2, #2
 3097 0516 02F00402 		and	r2, r2, #4
 3098              	.LVL255:
4650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 3099              		.loc 2 4650 0 discriminator 1
 3100 051a 8E58     		ldr	r6, [r1, r2]
 3101 051c C3F30453 		ubfx	r3, r3, #20, #5
 3102              	.LVL256:
 3103 0520 0727     		movs	r7, #7
ARM GAS  /tmp/ccxf1fbt.s 			page 254


 3104 0522 9F40     		lsls	r7, r7, r3
 3105 0524 26EA0706 		bic	r6, r6, r7
 3106 0528 00FA03F3 		lsl	r3, r0, r3
 3107 052c 3343     		orrs	r3, r3, r6
 3108 052e 8B50     		str	r3, [r1, r2]
 3109              	.LVL257:
 3110 0530 6AE6     		b	.L211
 3111              	.LVL258:
 3112              	.L212:
 3113              	.LBE385:
 3114              	.LBE384:
 3115              	.LBB386:
 3116              	.LBB387:
 3117              		.loc 3 988 0 discriminator 2
 3118              		.syntax unified
 3119              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3120 0532 92FAA2F3 		rbit r3, r2
 3121              	@ 0 "" 2
 3122              	.LVL259:
 3123              		.thumb
 3124              		.syntax unified
 3125              	.LBE387:
 3126              	.LBE386:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3127              		.loc 1 2846 0 discriminator 2
 3128 0536 B3FA83F3 		clz	r3, r3
 3129 053a 0133     		adds	r3, r3, #1
 3130 053c 03F01F03 		and	r3, r3, #31
 3131 0540 092B     		cmp	r3, #9
 3132 0542 8CBF     		ite	hi
 3133 0544 0023     		movhi	r3, #0
 3134 0546 0123     		movls	r3, #1
 3135 0548 C8E7     		b	.L213
 3136              	.L215:
 3137              	.LVL260:
 3138              	.LBB388:
 3139              	.LBB389:
 3140              		.loc 3 988 0 discriminator 4
 3141              		.syntax unified
 3142              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3143 054a 92FAA2F3 		rbit r3, r2
 3144              	@ 0 "" 2
 3145              	.LVL261:
 3146              		.thumb
 3147              		.syntax unified
 3148              	.LBE389:
 3149              	.LBE388:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3150              		.loc 1 2846 0 discriminator 4
 3151 054e B3FA83F3 		clz	r3, r3
 3152 0552 0133     		adds	r3, r3, #1
 3153 0554 9B06     		lsls	r3, r3, #26
 3154 0556 03F0F843 		and	r3, r3, #2080374784
 3155 055a C7E7     		b	.L216
 3156              	.L217:
 3157              	.LVL262:
 3158              	.LBB390:
ARM GAS  /tmp/ccxf1fbt.s 			page 255


 3159              	.LBB391:
 3160              		.loc 3 988 0 discriminator 8
 3161              		.syntax unified
 3162              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3163 055c 92FAA2F0 		rbit r0, r2
 3164              	@ 0 "" 2
 3165              	.LVL263:
 3166              		.thumb
 3167              		.syntax unified
 3168              	.LBE391:
 3169              	.LBE390:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3170              		.loc 1 2846 0 discriminator 8
 3171 0560 B0FA80F0 		clz	r0, r0
 3172 0564 0130     		adds	r0, r0, #1
 3173 0566 00F01F07 		and	r7, r0, #31
 3174 056a 0120     		movs	r0, #1
 3175 056c B840     		lsls	r0, r0, r7
 3176 056e C4E7     		b	.L218
 3177              	.L219:
 3178              	.LVL264:
 3179              	.LBB392:
 3180              	.LBB393:
 3181              		.loc 3 988 0 discriminator 12
 3182              		.syntax unified
 3183              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3184 0570 92FAA2F3 		rbit r3, r2
 3185              	@ 0 "" 2
 3186              	.LVL265:
 3187              		.thumb
 3188              		.syntax unified
 3189              	.LBE393:
 3190              	.LBE392:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3191              		.loc 1 2846 0 discriminator 12
 3192 0574 B3FA83F3 		clz	r3, r3
 3193 0578 0133     		adds	r3, r3, #1
 3194 057a 03F01F03 		and	r3, r3, #31
 3195 057e 03EB4303 		add	r3, r3, r3, lsl #1
 3196 0582 1B05     		lsls	r3, r3, #20
 3197 0584 C2E7     		b	.L220
 3198              	.L262:
 3199 0586 00BF     		.align	2
 3200              	.L261:
 3201 0588 02003004 		.word	70254594
 3202 058c 04006008 		.word	140509188
 3203 0590 0800900C 		.word	210763784
 3204 0594 1000C010 		.word	281018384
 3205 0598 40002019 		.word	421527616
 3206 059c 00018021 		.word	562036992
 3207 05a0 0004002A 		.word	704644096
 3208 05a4 00209036 		.word	915415040
 3209 05a8 0040C03A 		.word	985677824
 3210 05ac 0080F03E 		.word	1055948800
 3211 05b0 00002143 		.word	1126236160
 3212 05b4 00005247 		.word	1196556288
 3213 05b8 0000844B 		.word	1266941952
ARM GAS  /tmp/ccxf1fbt.s 			page 256


 3214 05bc 01000080 		.word	-2147483647
 3215 05c0 000052C7 		.word	-950927360
 3216 05c4 000084CB 		.word	-880541696
 3217 05c8 00005AC7 		.word	-950403072
 3218 05cc 00008CCB 		.word	-880017408
 3219 05d0 00000000 		.word	.LC0
 3220              	.L214:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3221              		.loc 1 2846 0 is_stmt 0
 3222 05d4 CEB9     		cbnz	r6, .L222
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3223              		.loc 1 2846 0 discriminator 13
 3224 05d6 930E     		lsrs	r3, r2, #26
 3225 05d8 0133     		adds	r3, r3, #1
 3226 05da 9B06     		lsls	r3, r3, #26
 3227 05dc 03F0F843 		and	r3, r3, #2080374784
 3228              	.L223:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3229              		.loc 1 2846 0 discriminator 16
 3230 05e0 E6B9     		cbnz	r6, .L224
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3231              		.loc 1 2846 0 discriminator 17
 3232 05e2 900E     		lsrs	r0, r2, #26
 3233 05e4 0130     		adds	r0, r0, #1
 3234 05e6 00F01F07 		and	r7, r0, #31
 3235 05ea 0120     		movs	r0, #1
 3236 05ec B840     		lsls	r0, r0, r7
 3237              	.L225:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3238              		.loc 1 2846 0 discriminator 20
 3239 05ee 1843     		orrs	r0, r0, r3
 3240 05f0 F6B9     		cbnz	r6, .L226
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3241              		.loc 1 2846 0 discriminator 21
 3242 05f2 920E     		lsrs	r2, r2, #26
 3243 05f4 0132     		adds	r2, r2, #1
 3244 05f6 02F01F02 		and	r2, r2, #31
 3245 05fa 02EB4203 		add	r3, r2, r2, lsl #1
 3246 05fe 1E3B     		subs	r3, r3, #30
 3247 0600 1B05     		lsls	r3, r3, #20
 3248 0602 43F00073 		orr	r3, r3, #33554432
 3249              	.L227:
2845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 3250              		.loc 1 2845 0 is_stmt 1 discriminator 2
 3251 0606 0343     		orrs	r3, r3, r0
 3252 0608 81E7     		b	.L221
 3253              	.L222:
 3254              	.LVL266:
 3255              	.LBB394:
 3256              	.LBB395:
 3257              		.loc 3 988 0 discriminator 14
 3258              		.syntax unified
 3259              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3260 060a 92FAA2F3 		rbit r3, r2
 3261              	@ 0 "" 2
 3262              	.LVL267:
 3263              		.thumb
ARM GAS  /tmp/ccxf1fbt.s 			page 257


 3264              		.syntax unified
 3265              	.LBE395:
 3266              	.LBE394:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3267              		.loc 1 2846 0 discriminator 14
 3268 060e B3FA83F3 		clz	r3, r3
 3269 0612 0133     		adds	r3, r3, #1
 3270 0614 9B06     		lsls	r3, r3, #26
 3271 0616 03F0F843 		and	r3, r3, #2080374784
 3272 061a E1E7     		b	.L223
 3273              	.L224:
 3274              	.LVL268:
 3275              	.LBB396:
 3276              	.LBB397:
 3277              		.loc 3 988 0 discriminator 18
 3278              		.syntax unified
 3279              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3280 061c 92FAA2F0 		rbit r0, r2
 3281              	@ 0 "" 2
 3282              	.LVL269:
 3283              		.thumb
 3284              		.syntax unified
 3285              	.LBE397:
 3286              	.LBE396:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3287              		.loc 1 2846 0 discriminator 18
 3288 0620 B0FA80F0 		clz	r0, r0
 3289 0624 0130     		adds	r0, r0, #1
 3290 0626 00F01F07 		and	r7, r0, #31
 3291 062a 0120     		movs	r0, #1
 3292 062c B840     		lsls	r0, r0, r7
 3293 062e DEE7     		b	.L225
 3294              	.L226:
 3295              	.LVL270:
 3296              	.LBB398:
 3297              	.LBB399:
 3298              		.loc 3 988 0 discriminator 22
 3299              		.syntax unified
 3300              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3301 0630 92FAA2F2 		rbit r2, r2
 3302              	@ 0 "" 2
 3303              	.LVL271:
 3304              		.thumb
 3305              		.syntax unified
 3306              	.LBE399:
 3307              	.LBE398:
2846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                       sConfig->SamplingTime);
 3308              		.loc 1 2846 0 discriminator 22
 3309 0634 B2FA82F2 		clz	r2, r2
 3310 0638 0132     		adds	r2, r2, #1
 3311 063a 02F01F02 		and	r2, r2, #31
 3312 063e 02EB4202 		add	r2, r2, r2, lsl #1
 3313 0642 A2F11E03 		sub	r3, r2, #30
 3314 0646 1B05     		lsls	r3, r3, #20
 3315 0648 43F00073 		orr	r3, r3, #33554432
 3316 064c DBE7     		b	.L227
 3317              	.L250:
ARM GAS  /tmp/ccxf1fbt.s 			page 258


2864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3318              		.loc 1 2864 0 discriminator 1
 3319 064e 12F4000F 		tst	r2, #8388608
 3320 0652 7FF4E6AD 		bne	.L229
2866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3321              		.loc 1 2866 0
 3322 0656 2A68     		ldr	r2, [r5]
 3323 0658 2B4B     		ldr	r3, .L263
 3324 065a 9A42     		cmp	r2, r3
 3325 065c 01D0     		beq	.L256
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3326              		.loc 1 2701 0
 3327 065e 0020     		movs	r0, #0
 3328 0660 47E0     		b	.L228
 3329              	.L256:
2868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 3330              		.loc 1 2868 0
 3331 0662 40F40003 		orr	r3, r0, #8388608
 3332              	.LVL272:
 3333              	.LBB400:
 3334              	.LBB401:
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3335              		.loc 2 2504 0
 3336 0666 2949     		ldr	r1, .L263+4
 3337 0668 8A68     		ldr	r2, [r1, #8]
 3338 066a 22F0E072 		bic	r2, r2, #29360128
 3339 066e 1343     		orrs	r3, r3, r2
 3340              	.LVL273:
 3341 0670 8B60     		str	r3, [r1, #8]
 3342              	.LVL274:
 3343              	.LBE401:
 3344              	.LBE400:
2876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           while (wait_loop_index != 0UL)
 3345              		.loc 1 2876 0
 3346 0672 274B     		ldr	r3, .L263+8
 3347 0674 1B68     		ldr	r3, [r3]
 3348 0676 9B09     		lsrs	r3, r3, #6
 3349 0678 264A     		ldr	r2, .L263+12
 3350 067a A2FB0323 		umull	r2, r3, r2, r3
 3351 067e 9B09     		lsrs	r3, r3, #6
 3352 0680 03EB4303 		add	r3, r3, r3, lsl #1
 3353 0684 9A00     		lsls	r2, r3, #2
 3354 0686 0192     		str	r2, [sp, #4]
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3355              		.loc 1 2877 0
 3356 0688 02E0     		b	.L230
 3357              	.L231:
2879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 3358              		.loc 1 2879 0
 3359 068a 019B     		ldr	r3, [sp, #4]
 3360 068c 013B     		subs	r3, r3, #1
 3361 068e 0193     		str	r3, [sp, #4]
 3362              	.L230:
2877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 3363              		.loc 1 2877 0
 3364 0690 019B     		ldr	r3, [sp, #4]
 3365 0692 002B     		cmp	r3, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 259


 3366 0694 F9D1     		bne	.L231
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3367              		.loc 1 2701 0
 3368 0696 0020     		movs	r0, #0
 3369 0698 2BE0     		b	.L228
 3370              	.L251:
2883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3371              		.loc 1 2883 0 discriminator 1
 3372 069a 12F0807F 		tst	r2, #16777216
 3373 069e 7FF4C4AD 		bne	.L232
2885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3374              		.loc 1 2885 0
 3375 06a2 2A68     		ldr	r2, [r5]
 3376 06a4 184B     		ldr	r3, .L263
 3377 06a6 9A42     		cmp	r2, r3
 3378 06a8 01D0     		beq	.L257
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3379              		.loc 1 2701 0
 3380 06aa 0020     		movs	r0, #0
 3381 06ac 21E0     		b	.L228
 3382              	.L257:
2887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3383              		.loc 1 2887 0
 3384 06ae 40F08073 		orr	r3, r0, #16777216
 3385              	.LVL275:
 3386              	.LBB402:
 3387              	.LBB403:
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3388              		.loc 2 2504 0
 3389 06b2 1649     		ldr	r1, .L263+4
 3390 06b4 8A68     		ldr	r2, [r1, #8]
 3391 06b6 22F0E072 		bic	r2, r2, #29360128
 3392 06ba 1343     		orrs	r3, r3, r2
 3393              	.LVL276:
 3394 06bc 8B60     		str	r3, [r1, #8]
 3395              	.LBE403:
 3396              	.LBE402:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3397              		.loc 1 2701 0
 3398 06be 0020     		movs	r0, #0
 3399              	.LVL277:
 3400 06c0 17E0     		b	.L228
 3401              	.LVL278:
 3402              	.L252:
2892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3403              		.loc 1 2892 0
 3404 06c2 12F4800F 		tst	r2, #4194304
 3405 06c6 1BD1     		bne	.L242
2894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 3406              		.loc 1 2894 0
 3407 06c8 2A68     		ldr	r2, [r5]
 3408 06ca 0F4B     		ldr	r3, .L263
 3409 06cc 9A42     		cmp	r2, r3
 3410 06ce 01D0     		beq	.L258
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3411              		.loc 1 2701 0
 3412 06d0 0020     		movs	r0, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 260


 3413 06d2 0EE0     		b	.L228
 3414              	.L258:
2896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 3415              		.loc 1 2896 0
 3416 06d4 40F48003 		orr	r3, r0, #4194304
 3417              	.LVL279:
 3418              	.LBB404:
 3419              	.LBB405:
2504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3420              		.loc 2 2504 0
 3421 06d8 0C49     		ldr	r1, .L263+4
 3422 06da 8A68     		ldr	r2, [r1, #8]
 3423 06dc 22F0E072 		bic	r2, r2, #29360128
 3424 06e0 1343     		orrs	r3, r3, r2
 3425              	.LVL280:
 3426 06e2 8B60     		str	r3, [r1, #8]
 3427              	.LBE405:
 3428              	.LBE404:
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3429              		.loc 1 2701 0
 3430 06e4 0020     		movs	r0, #0
 3431              	.LVL281:
 3432 06e6 04E0     		b	.L228
 3433              	.LVL282:
 3434              	.L194:
2913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3435              		.loc 1 2913 0
 3436 06e8 6B6D     		ldr	r3, [r5, #84]
 3437 06ea 43F02003 		orr	r3, r3, #32
 3438 06ee 6B65     		str	r3, [r5, #84]
 3439              	.LVL283:
2915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3440              		.loc 1 2915 0
 3441 06f0 0120     		movs	r0, #1
 3442              	.LVL284:
 3443              	.L228:
2919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3444              		.loc 1 2919 0
 3445 06f2 0023     		movs	r3, #0
 3446 06f4 85F85030 		strb	r3, [r5, #80]
 3447              	.LVL285:
 3448              	.L192:
2923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3449              		.loc 1 2923 0
 3450 06f8 03B0     		add	sp, sp, #12
 3451              	.LCFI13:
 3452              		.cfi_remember_state
 3453              		.cfi_def_cfa_offset 20
 3454              		@ sp needed
 3455 06fa F0BD     		pop	{r4, r5, r6, r7, pc}
 3456              	.LVL286:
 3457              	.L238:
 3458              	.LCFI14:
 3459              		.cfi_restore_state
2701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 3460              		.loc 1 2701 0
 3461 06fc 0020     		movs	r0, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 261


 3462 06fe F8E7     		b	.L228
 3463              	.L242:
 3464 0700 0020     		movs	r0, #0
 3465 0702 F6E7     		b	.L228
 3466              	.L233:
2731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3467              		.loc 1 2731 0
 3468 0704 0220     		movs	r0, #2
 3469 0706 F7E7     		b	.L192
 3470              	.L264:
 3471              		.align	2
 3472              	.L263:
 3473 0708 00000450 		.word	1342439424
 3474 070c 00030450 		.word	1342440192
 3475 0710 00000000 		.word	SystemCoreClock
 3476 0714 632D3E05 		.word	87960931
 3477              		.cfi_endproc
 3478              	.LFE302:
 3480              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3481              		.align	1
 3482              		.global	HAL_ADC_AnalogWDGConfig
 3483              		.syntax unified
 3484              		.thumb
 3485              		.thumb_func
 3486              		.fpu fpv4-sp-d16
 3488              	HAL_ADC_AnalogWDGConfig:
 3489              	.LFB303:
2942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3490              		.loc 1 2942 0
 3491              		.cfi_startproc
 3492              		@ args = 0, pretend = 0, frame = 0
 3493              		@ frame_needed = 0, uses_anonymous_args = 0
 3494              	.LVL287:
 3495 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3496              	.LCFI15:
 3497              		.cfi_def_cfa_offset 24
 3498              		.cfi_offset 3, -24
 3499              		.cfi_offset 4, -20
 3500              		.cfi_offset 5, -16
 3501              		.cfi_offset 6, -12
 3502              		.cfi_offset 7, -8
 3503              		.cfi_offset 14, -4
 3504 0002 0446     		mov	r4, r0
 3505 0004 0D46     		mov	r5, r1
 3506              	.LVL288:
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3507              		.loc 1 2950 0
 3508 0006 0268     		ldr	r2, [r0]
 3509 0008 A94B     		ldr	r3, .L328
 3510 000a 9A42     		cmp	r2, r3
 3511 000c 04D0     		beq	.L266
2950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3512              		.loc 1 2950 0 is_stmt 0 discriminator 1
 3513 000e 40F68631 		movw	r1, #2950
 3514              	.LVL289:
 3515 0012 A848     		ldr	r0, .L328+4
 3516              	.LVL290:
ARM GAS  /tmp/ccxf1fbt.s 			page 262


 3517 0014 FFF7FEFF 		bl	assert_failed
 3518              	.LVL291:
 3519              	.L266:
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3520              		.loc 1 2951 0 is_stmt 1
 3521 0018 2B68     		ldr	r3, [r5]
 3522 001a A74A     		ldr	r2, .L328+8
 3523 001c 9342     		cmp	r3, r2
 3524 001e 0BD0     		beq	.L267
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3525              		.loc 1 2951 0 is_stmt 0 discriminator 1
 3526 0020 A64A     		ldr	r2, .L328+12
 3527 0022 9342     		cmp	r3, r2
 3528 0024 08D0     		beq	.L267
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3529              		.loc 1 2951 0 discriminator 2
 3530 0026 02F58012 		add	r2, r2, #1048576
 3531 002a 9342     		cmp	r3, r2
 3532 002c 04D0     		beq	.L267
2951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3533              		.loc 1 2951 0 discriminator 3
 3534 002e 40F68731 		movw	r1, #2951
 3535 0032 A048     		ldr	r0, .L328+4
 3536 0034 FFF7FEFF 		bl	assert_failed
 3537              	.LVL292:
 3538              	.L267:
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3539              		.loc 1 2952 0 is_stmt 1
 3540 0038 6B68     		ldr	r3, [r5, #4]
 3541 003a B3B1     		cbz	r3, .L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3542              		.loc 1 2952 0 is_stmt 0 discriminator 1
 3543 003c B3F5400F 		cmp	r3, #12582912
 3544 0040 13D0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3545              		.loc 1 2952 0 discriminator 2
 3546 0042 B3F1A07F 		cmp	r3, #20971520
 3547 0046 10D0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3548              		.loc 1 2952 0 discriminator 3
 3549 0048 B3F1E07F 		cmp	r3, #29360128
 3550 004c 0DD0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3551              		.loc 1 2952 0 discriminator 4
 3552 004e B3F5000F 		cmp	r3, #8388608
 3553 0052 0AD0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3554              		.loc 1 2952 0 discriminator 5
 3555 0054 B3F1807F 		cmp	r3, #16777216
 3556 0058 07D0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3557              		.loc 1 2952 0 discriminator 6
 3558 005a B3F1C07F 		cmp	r3, #25165824
 3559 005e 04D0     		beq	.L268
2952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3560              		.loc 1 2952 0 discriminator 7
 3561 0060 40F68831 		movw	r1, #2952
ARM GAS  /tmp/ccxf1fbt.s 			page 263


 3562 0064 9348     		ldr	r0, .L328+4
 3563 0066 FFF7FEFF 		bl	assert_failed
 3564              	.LVL293:
 3565              	.L268:
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3566              		.loc 1 2953 0 is_stmt 1
 3567 006a 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 3568 006c 012B     		cmp	r3, #1
 3569 006e 04D9     		bls	.L269
2953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3570              		.loc 1 2953 0 is_stmt 0 discriminator 1
 3571 0070 40F68931 		movw	r1, #2953
 3572 0074 8F48     		ldr	r0, .L328+4
 3573 0076 FFF7FEFF 		bl	assert_failed
 3574              	.LVL294:
 3575              	.L269:
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3576              		.loc 1 2955 0 is_stmt 1
 3577 007a 6B68     		ldr	r3, [r5, #4]
 3578 007c B3F5400F 		cmp	r3, #12582912
 3579 0080 05D0     		beq	.L270
2955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3580              		.loc 1 2955 0 is_stmt 0 discriminator 1
 3581 0082 B3F1A07F 		cmp	r3, #20971520
 3582 0086 02D0     		beq	.L270
2956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
 3583              		.loc 1 2956 0 is_stmt 1
 3584 0088 B3F1E07F 		cmp	r3, #29360128
 3585 008c 08D1     		bne	.L271
 3586              	.L270:
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3587              		.loc 1 2959 0
 3588 008e 2268     		ldr	r2, [r4]
 3589 0090 874B     		ldr	r3, .L328
 3590 0092 9A42     		cmp	r2, r3
 3591 0094 6AD0     		beq	.L314
 3592              	.L272:
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3593              		.loc 1 2959 0 is_stmt 0 discriminator 25
 3594 0096 40F68F31 		movw	r1, #2959
 3595 009a 8648     		ldr	r0, .L328+4
 3596 009c FFF7FEFF 		bl	assert_failed
 3597              	.LVL295:
 3598              	.L271:
2963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 3599              		.loc 1 2963 0 is_stmt 1
 3600 00a0 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 3601 00a4 012B     		cmp	r3, #1
 3602 00a6 00F0C680 		beq	.L315
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3603              		.loc 1 2974 0
 3604 00aa 2969     		ldr	r1, [r5, #16]
 3605 00ac 2368     		ldr	r3, [r4]
 3606              	.LVL296:
 3607              	.LBB406:
 3608              	.LBB407:
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 264


 3609              		.loc 2 2636 0
 3610 00ae DB68     		ldr	r3, [r3, #12]
 3611              	.LVL297:
 3612              	.LBE407:
 3613              	.LBE406:
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3614              		.loc 1 2974 0
 3615 00b0 9B08     		lsrs	r3, r3, #2
 3616 00b2 03F00603 		and	r3, r3, #6
 3617 00b6 40F6FF72 		movw	r2, #4095
 3618 00ba 22FA03F3 		lsr	r3, r2, r3
 3619 00be 9942     		cmp	r1, r3
 3620 00c0 00F2CE80 		bhi	.L316
 3621              	.L276:
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3622              		.loc 1 2975 0
 3623 00c4 6969     		ldr	r1, [r5, #20]
 3624 00c6 2368     		ldr	r3, [r4]
 3625              	.LVL298:
 3626              	.LBB408:
 3627              	.LBB409:
2636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3628              		.loc 2 2636 0
 3629 00c8 DB68     		ldr	r3, [r3, #12]
 3630              	.LVL299:
 3631              	.LBE409:
 3632              	.LBE408:
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3633              		.loc 1 2975 0
 3634 00ca 9B08     		lsrs	r3, r3, #2
 3635 00cc 03F00603 		and	r3, r3, #6
 3636 00d0 40F6FF72 		movw	r2, #4095
 3637 00d4 22FA03F3 		lsr	r3, r2, r3
 3638 00d8 9942     		cmp	r1, r3
 3639 00da 00F2C780 		bhi	.L317
 3640              	.L275:
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3641              		.loc 1 2979 0
 3642 00de 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3643 00e2 012B     		cmp	r3, #1
 3644 00e4 00F05382 		beq	.L310
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3645              		.loc 1 2979 0 is_stmt 0 discriminator 2
 3646 00e8 0123     		movs	r3, #1
 3647 00ea 84F85030 		strb	r3, [r4, #80]
2986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3648              		.loc 1 2986 0 is_stmt 1 discriminator 2
 3649 00ee 2368     		ldr	r3, [r4]
 3650              	.LVL300:
 3651              	.LBB410:
 3652              	.LBB411:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3653              		.loc 2 6096 0 discriminator 2
 3654 00f0 9A68     		ldr	r2, [r3, #8]
 3655 00f2 12F0040F 		tst	r2, #4
 3656 00f6 00F0BF80 		beq	.L311
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 265


 3657              		.loc 2 6096 0 is_stmt 0
 3658 00fa 0122     		movs	r2, #1
 3659              	.L278:
 3660              	.LVL301:
 3661              	.LBE411:
 3662              	.LBE410:
 3663              	.LBB413:
 3664              	.LBB414:
 3665              		.loc 2 6279 0 is_stmt 1
 3666 00fc 9968     		ldr	r1, [r3, #8]
 3667 00fe 11F0080F 		tst	r1, #8
 3668 0102 00F0BB80 		beq	.L312
 3669 0106 0121     		movs	r1, #1
 3670              	.L279:
 3671              	.LVL302:
 3672              	.LBE414:
 3673              	.LBE413:
2988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3674              		.loc 1 2988 0
 3675 0108 002A     		cmp	r2, #0
 3676 010a 40F03782 		bne	.L280
2989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 3677              		.loc 1 2989 0
 3678 010e 0029     		cmp	r1, #0
 3679 0110 40F03482 		bne	.L280
2993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 3680              		.loc 1 2993 0
 3681 0114 2A68     		ldr	r2, [r5]
 3682 0116 6849     		ldr	r1, .L328+8
 3683 0118 8A42     		cmp	r2, r1
 3684 011a 00F0B180 		beq	.L318
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3685              		.loc 1 3063 0
 3686 011e 6968     		ldr	r1, [r5, #4]
 3687 0120 B1F1807F 		cmp	r1, #16777216
 3688 0124 00F0A781 		beq	.L294
 3689 0128 40F26981 		bls	.L319
 3690 012c B1F1C07F 		cmp	r1, #25165824
 3691 0130 00F0A181 		beq	.L294
 3692 0134 B1F1E07F 		cmp	r1, #29360128
 3693 0138 00F06881 		beq	.L296
 3694 013c B1F1A07F 		cmp	r1, #20971520
 3695 0140 00F06481 		beq	.L296
 3696              	.L293:
 3697              	.LVL303:
 3698              	.LBB416:
 3699              	.LBB417:
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3700              		.loc 2 5009 0
 3701 0144 0C33     		adds	r3, r3, #12
 3702              	.LVL304:
 3703 0146 C2F30151 		ubfx	r1, r2, #20, #2
 3704 014a 02F00106 		and	r6, r2, #1
 3705 014e F000     		lsls	r0, r6, #3
 3706 0150 3044     		add	r0, r0, r6
 3707 0152 8600     		lsls	r6, r0, #2
 3708 0154 3144     		add	r1, r1, r6
ARM GAS  /tmp/ccxf1fbt.s 			page 266


 3709              	.LVL305:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3710              		.loc 2 5012 0
 3711 0156 53F82100 		ldr	r0, [r3, r1, lsl #2]
 3712 015a 22F00242 		bic	r2, r2, #-2113929216
 3713              	.LVL306:
 3714 015e 22F46012 		bic	r2, r2, #3670016
 3715 0162 20EA0202 		bic	r2, r0, r2
 3716 0166 43F82120 		str	r2, [r3, r1, lsl #2]
 3717              	.LVL307:
 3718 016a 9CE1     		b	.L300
 3719              	.LVL308:
 3720              	.L314:
 3721              	.LBE417:
 3722              	.LBE416:
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3723              		.loc 1 2959 0 discriminator 2
 3724 016c AB68     		ldr	r3, [r5, #8]
 3725 016e 544A     		ldr	r2, .L328+16
 3726 0170 9342     		cmp	r3, r2
 3727 0172 95D0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3728              		.loc 1 2959 0 is_stmt 0 discriminator 3
 3729 0174 534A     		ldr	r2, .L328+20
 3730 0176 9342     		cmp	r3, r2
 3731 0178 92D0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3732              		.loc 1 2959 0 discriminator 4
 3733 017a 534A     		ldr	r2, .L328+24
 3734 017c 9342     		cmp	r3, r2
 3735 017e 8FD0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3736              		.loc 1 2959 0 discriminator 5
 3737 0180 524A     		ldr	r2, .L328+28
 3738 0182 9342     		cmp	r3, r2
 3739 0184 8CD0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3740              		.loc 1 2959 0 discriminator 6
 3741 0186 02F18662 		add	r2, r2, #70254592
 3742 018a 1032     		adds	r2, r2, #16
 3743 018c 9342     		cmp	r3, r2
 3744 018e 87D0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3745              		.loc 1 2959 0 discriminator 7
 3746 0190 4F4A     		ldr	r2, .L328+32
 3747 0192 9342     		cmp	r3, r2
 3748 0194 84D0     		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3749              		.loc 1 2959 0 discriminator 8
 3750 0196 02F18662 		add	r2, r2, #70254592
 3751 019a 4032     		adds	r2, r2, #64
 3752 019c 9342     		cmp	r3, r2
 3753 019e 3FF47FAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3754              		.loc 1 2959 0 discriminator 9
 3755 01a2 4C4A     		ldr	r2, .L328+36
 3756 01a4 9342     		cmp	r3, r2
ARM GAS  /tmp/ccxf1fbt.s 			page 267


 3757 01a6 3FF47BAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3758              		.loc 1 2959 0 discriminator 10
 3759 01aa 02F18662 		add	r2, r2, #70254592
 3760 01ae 02F58072 		add	r2, r2, #256
 3761 01b2 9342     		cmp	r3, r2
 3762 01b4 3FF474AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3763              		.loc 1 2959 0 discriminator 11
 3764 01b8 474A     		ldr	r2, .L328+40
 3765 01ba 9342     		cmp	r3, r2
 3766 01bc 3FF470AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3767              		.loc 1 2959 0 discriminator 12
 3768 01c0 02F10422 		add	r2, r2, #67109888
 3769 01c4 02F54012 		add	r2, r2, #3145728
 3770 01c8 9342     		cmp	r3, r2
 3771 01ca 3FF469AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3772              		.loc 1 2959 0 discriminator 13
 3773 01ce 02F18662 		add	r2, r2, #70254592
 3774 01d2 02F50062 		add	r2, r2, #2048
 3775 01d6 9342     		cmp	r3, r2
 3776 01d8 3FF462AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3777              		.loc 1 2959 0 discriminator 14
 3778 01dc 3F4A     		ldr	r2, .L328+44
 3779 01de 9342     		cmp	r3, r2
 3780 01e0 3FF45EAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3781              		.loc 1 2959 0 discriminator 15
 3782 01e4 3E4A     		ldr	r2, .L328+48
 3783 01e6 9342     		cmp	r3, r2
 3784 01e8 3FF45AAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3785              		.loc 1 2959 0 discriminator 16
 3786 01ec 3D4A     		ldr	r2, .L328+52
 3787 01ee 9342     		cmp	r3, r2
 3788 01f0 3FF456AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3789              		.loc 1 2959 0 discriminator 17
 3790 01f4 3C4A     		ldr	r2, .L328+56
 3791 01f6 9342     		cmp	r3, r2
 3792 01f8 3FF452AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3793              		.loc 1 2959 0 discriminator 18
 3794 01fc 3B4A     		ldr	r2, .L328+60
 3795 01fe 9342     		cmp	r3, r2
 3796 0200 3FF44EAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3797              		.loc 1 2959 0 discriminator 19
 3798 0204 3A4A     		ldr	r2, .L328+64
 3799 0206 9342     		cmp	r3, r2
 3800 0208 3FF44AAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3801              		.loc 1 2959 0 discriminator 20
 3802 020c 394A     		ldr	r2, .L328+68
ARM GAS  /tmp/ccxf1fbt.s 			page 268


 3803 020e 9342     		cmp	r3, r2
 3804 0210 3FF446AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3805              		.loc 1 2959 0 discriminator 21
 3806 0214 384A     		ldr	r2, .L328+72
 3807 0216 9342     		cmp	r3, r2
 3808 0218 3FF442AF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3809              		.loc 1 2959 0 discriminator 22
 3810 021c 374A     		ldr	r2, .L328+76
 3811 021e 9342     		cmp	r3, r2
 3812 0220 3FF43EAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3813              		.loc 1 2959 0 discriminator 23
 3814 0224 364A     		ldr	r2, .L328+80
 3815 0226 9342     		cmp	r3, r2
 3816 0228 3FF43AAF 		beq	.L271
2959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3817              		.loc 1 2959 0 discriminator 24
 3818 022c 354A     		ldr	r2, .L328+84
 3819 022e 9342     		cmp	r3, r2
 3820 0230 7FF431AF 		bne	.L272
 3821 0234 34E7     		b	.L271
 3822              	.L315:
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
 3823              		.loc 1 2968 0 is_stmt 1
 3824 0236 2B69     		ldr	r3, [r5, #16]
 3825 0238 B3F5805F 		cmp	r3, #4096
 3826 023c 0AD2     		bcs	.L320
 3827              	.L274:
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3828              		.loc 1 2969 0
 3829 023e 6B69     		ldr	r3, [r5, #20]
 3830 0240 B3F5805F 		cmp	r3, #4096
 3831 0244 FFF44BAF 		bcc	.L275
2969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3832              		.loc 1 2969 0 is_stmt 0 discriminator 1
 3833 0248 40F69931 		movw	r1, #2969
 3834 024c 1948     		ldr	r0, .L328+4
 3835 024e FFF7FEFF 		bl	assert_failed
 3836              	.LVL309:
 3837 0252 44E7     		b	.L275
 3838              	.L320:
2968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
 3839              		.loc 1 2968 0 is_stmt 1 discriminator 1
 3840 0254 40F69831 		movw	r1, #2968
 3841 0258 1648     		ldr	r0, .L328+4
 3842 025a FFF7FEFF 		bl	assert_failed
 3843              	.LVL310:
 3844 025e EEE7     		b	.L274
 3845              	.L316:
2974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3846              		.loc 1 2974 0 discriminator 1
 3847 0260 40F69E31 		movw	r1, #2974
 3848 0264 1348     		ldr	r0, .L328+4
 3849 0266 FFF7FEFF 		bl	assert_failed
 3850              	.LVL311:
ARM GAS  /tmp/ccxf1fbt.s 			page 269


 3851 026a 2BE7     		b	.L276
 3852              	.L317:
2975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 3853              		.loc 1 2975 0 discriminator 1
 3854 026c 40F69F31 		movw	r1, #2975
 3855 0270 1048     		ldr	r0, .L328+4
 3856 0272 FFF7FEFF 		bl	assert_failed
 3857              	.LVL312:
 3858 0276 32E7     		b	.L275
 3859              	.LVL313:
 3860              	.L311:
 3861              	.LBB418:
 3862              	.LBB412:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3863              		.loc 2 6096 0
 3864 0278 0022     		movs	r2, #0
 3865 027a 3FE7     		b	.L278
 3866              	.LVL314:
 3867              	.L312:
 3868              	.LBE412:
 3869              	.LBE418:
 3870              	.LBB419:
 3871              	.LBB415:
 3872              		.loc 2 6279 0
 3873 027c 0021     		movs	r1, #0
 3874 027e 43E7     		b	.L279
 3875              	.LVL315:
 3876              	.L318:
 3877              	.LBE415:
 3878              	.LBE419:
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3879              		.loc 1 2998 0
 3880 0280 6A68     		ldr	r2, [r5, #4]
 3881 0282 B2F1807F 		cmp	r2, #16777216
 3882 0286 00F0A180 		beq	.L283
 3883 028a 3DD9     		bls	.L321
 3884 028c B2F1C07F 		cmp	r2, #25165824
 3885 0290 00F0A580 		beq	.L287
 3886 0294 B2F1E07F 		cmp	r2, #29360128
 3887 0298 00F08280 		beq	.L288
 3888 029c B2F1A07F 		cmp	r2, #20971520
 3889 02a0 71D0     		beq	.L322
 3890              	.L282:
 3891              	.LVL316:
 3892              	.LBB420:
 3893              	.LBB421:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3894              		.loc 2 5012 0
 3895 02a2 DA68     		ldr	r2, [r3, #12]
 3896 02a4 22F0FB42 		bic	r2, r2, #2105540608
 3897 02a8 22F48002 		bic	r2, r2, #4194304
 3898 02ac DA60     		str	r2, [r3, #12]
 3899 02ae 3DE0     		b	.L290
 3900              	.L329:
 3901              		.align	2
 3902              	.L328:
 3903 02b0 00000450 		.word	1342439424
ARM GAS  /tmp/ccxf1fbt.s 			page 270


 3904 02b4 00000000 		.word	.LC0
 3905 02b8 0000C07D 		.word	2109734912
 3906 02bc FFFF1700 		.word	1572863
 3907 02c0 02003004 		.word	70254594
 3908 02c4 04006008 		.word	140509188
 3909 02c8 0800900C 		.word	210763784
 3910 02cc 1000C010 		.word	281018384
 3911 02d0 40002019 		.word	421527616
 3912 02d4 00018021 		.word	562036992
 3913 02d8 0004002A 		.word	704644096
 3914 02dc 00209036 		.word	915415040
 3915 02e0 0040C03A 		.word	985677824
 3916 02e4 0080F03E 		.word	1055948800
 3917 02e8 00002143 		.word	1126236160
 3918 02ec 00005247 		.word	1196556288
 3919 02f0 0000844B 		.word	1266941952
 3920 02f4 01000080 		.word	-2147483647
 3921 02f8 000052C7 		.word	-950927360
 3922 02fc 000084CB 		.word	-880541696
 3923 0300 00005AC7 		.word	-950403072
 3924 0304 00008CCB 		.word	-880017408
 3925              	.LVL317:
 3926              	.L321:
 3927              	.LBE421:
 3928              	.LBE420:
2998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 3929              		.loc 1 2998 0
 3930 0308 B2F5000F 		cmp	r2, #8388608
 3931 030c 55D0     		beq	.L285
 3932 030e B2F5400F 		cmp	r2, #12582912
 3933 0312 C6D1     		bne	.L282
3001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3934              		.loc 1 3001 0
 3935 0314 A968     		ldr	r1, [r5, #8]
 3936              	.LVL318:
 3937              	.LBB422:
 3938              	.LBB423:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3939              		.loc 2 5012 0
 3940 0316 DA68     		ldr	r2, [r3, #12]
 3941 0318 22F0FB42 		bic	r2, r2, #2105540608
 3942 031c 22F48002 		bic	r2, r2, #4194304
 3943 0320 01F0F841 		and	r1, r1, #2080374784
 3944              	.LVL319:
 3945 0324 41F44001 		orr	r1, r1, #12582912
 3946 0328 0A43     		orrs	r2, r2, r1
 3947 032a DA60     		str	r2, [r3, #12]
 3948              	.LVL320:
 3949              	.L290:
 3950              	.LBE423:
 3951              	.LBE422:
3035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3952              		.loc 1 3035 0
 3953 032c 2869     		ldr	r0, [r5, #16]
 3954 032e 2268     		ldr	r2, [r4]
 3955 0330 D368     		ldr	r3, [r2, #12]
 3956 0332 C3F3C103 		ubfx	r3, r3, #3, #2
ARM GAS  /tmp/ccxf1fbt.s 			page 271


 3957 0336 5B00     		lsls	r3, r3, #1
 3958 0338 00FA03F6 		lsl	r6, r0, r3
 3959              	.LVL321:
3036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3960              		.loc 1 3036 0
 3961 033c 6B69     		ldr	r3, [r5, #20]
 3962 033e D068     		ldr	r0, [r2, #12]
 3963 0340 C0F3C100 		ubfx	r0, r0, #3, #2
 3964 0344 4000     		lsls	r0, r0, #1
 3965 0346 03FA00F0 		lsl	r0, r3, r0
 3966              	.LVL322:
3039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 3967              		.loc 1 3039 0
 3968 034a 2B68     		ldr	r3, [r5]
 3969              	.LVL323:
 3970              	.LBB424:
 3971              	.LBB425:
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3972              		.loc 2 5255 0
 3973 034c 2032     		adds	r2, r2, #32
 3974              	.LVL324:
 3975 034e 1B0D     		lsrs	r3, r3, #20
 3976              	.LVL325:
 3977 0350 9B00     		lsls	r3, r3, #2
 3978 0352 03F00C03 		and	r3, r3, #12
 3979              	.LVL326:
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 3980              		.loc 2 5257 0
 3981 0356 D158     		ldr	r1, [r2, r3]
 3982 0358 01F0F021 		and	r1, r1, #-268374016
 3983 035c 40EA0640 		orr	r0, r0, r6, lsl #16
 3984              	.LVL327:
 3985 0360 0143     		orrs	r1, r1, r0
 3986 0362 D150     		str	r1, [r2, r3]
 3987              	.LVL328:
 3988              	.LBE425:
 3989              	.LBE424:
3042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3990              		.loc 1 3042 0
 3991 0364 636D     		ldr	r3, [r4, #84]
 3992 0366 23F48033 		bic	r3, r3, #65536
 3993 036a 6365     		str	r3, [r4, #84]
3048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 3994              		.loc 1 3048 0
 3995 036c 2368     		ldr	r3, [r4]
 3996              	.LVL329:
 3997              	.LBB426:
 3998              	.LBB427:
6280:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6281:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6282:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6283:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
6284:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
6285:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6286:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
6287:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6288:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
ARM GAS  /tmp/ccxf1fbt.s 			page 272


6289:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6290:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
6291:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6292:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6293:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6294:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6295:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6296:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6297:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6298:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
6299:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
6300:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
6301:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
6302:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6303:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6304:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6305:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6306:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6307:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6308:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6309:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6310:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
6311:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6312:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
6313:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6314:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
6315:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6316:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6317:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6318:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6319:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6320:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6321:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6322:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6323:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6324:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6325:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
6326:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
6327:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
6328:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
6329:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6330:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6331:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6332:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6333:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6334:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6335:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6336:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6337:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
6338:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6339:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
6340:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6341:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6342:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6343:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6344:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6345:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 273


6346:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6347:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6348:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6349:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6350:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6351:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6352:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
6353:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
6354:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
6355:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
6356:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6357:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6358:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6359:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6360:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6361:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6362:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6363:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6364:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
6365:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6366:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
6367:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6368:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
6369:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_JDR1_JDATA)
6370:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6371:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6372:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6373:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6374:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6375:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6376:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6377:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6378:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6379:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
6380:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
6381:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
6382:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
6383:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6384:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6385:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6386:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6387:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6388:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6389:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6390:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6391:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
6392:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6393:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
6394:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6395:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6396:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6397:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6398:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6399:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6400:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6401:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
6402:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
ARM GAS  /tmp/ccxf1fbt.s 			page 274


6403:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6404:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6405:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
6406:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData6\n
6407:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData6\n
6408:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData6\n
6409:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData6
6410:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6411:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
6412:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
6413:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
6414:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
6415:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
6416:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6417:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6418:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData6(ADC_TypeDef *ADCx, uint32_t Rank)
6419:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6420:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOF
6421:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6422:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
6423:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                             ADC_JDR1_JDATA)
6424:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                   );
6425:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6426:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6427:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6428:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6429:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6430:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6431:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
6432:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6433:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6434:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6435:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6436:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC ready.
6437:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6438:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6439:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6440:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
6441:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6442:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6443:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6444:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
6445:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6446:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
6447:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6448:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6449:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6450:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
6451:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
6452:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6453:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6454:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6455:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
6456:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6457:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
6458:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6459:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 275


6460:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6461:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
6462:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
6463:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6464:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6465:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6466:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
6467:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6468:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
6469:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6470:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6471:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6472:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
6473:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
6474:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6475:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6476:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6477:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
6478:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6479:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
6480:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6481:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6482:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6483:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
6484:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
6485:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6486:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6487:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6488:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
6489:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6490:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
6491:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6492:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6493:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6494:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
6495:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
6496:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6497:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6498:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6499:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
6500:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6501:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
6502:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6503:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6504:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6505:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
6506:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
6507:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6508:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6509:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6510:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
6511:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6512:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
6513:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6514:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6515:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6516:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
ARM GAS  /tmp/ccxf1fbt.s 			page 276


6517:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
6518:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6519:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6520:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6521:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
6522:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6523:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
6524:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6525:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6526:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6527:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
6528:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
6529:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6530:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6531:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6532:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
6533:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6534:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
6535:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6536:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6537:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6538:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
6539:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
6540:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6541:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6542:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6543:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
6544:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6545:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
6546:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6547:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6548:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6549:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
6550:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
6551:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6552:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6553:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6554:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
6555:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6556:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
6557:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6558:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6559:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6560:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
6561:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6562:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6563:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6564:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
6565:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6566:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6567:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6568:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
6569:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6570:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
6571:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6572:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6573:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 277


6574:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
6575:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
6576:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6577:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6578:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6579:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
6580:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6581:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
6582:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6583:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6584:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6585:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
6586:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
6587:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6588:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6589:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6590:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
6591:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6592:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
6593:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6594:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6595:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6596:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
6597:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
6598:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6599:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6600:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6601:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
6602:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6603:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
6604:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6605:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6606:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6607:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
6608:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
6609:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6610:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6611:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6612:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
6613:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6614:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
6615:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6616:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6617:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6618:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
6619:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
6620:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6621:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6622:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6623:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
6624:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6625:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
6626:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6627:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6628:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6629:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
6630:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
ARM GAS  /tmp/ccxf1fbt.s 			page 278


6631:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6632:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6633:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6634:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
6635:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6636:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
6637:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6638:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6639:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6640:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
6641:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
6642:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6643:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6644:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6645:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
6646:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6647:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
6648:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6649:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6650:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6651:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
6652:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
6653:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6654:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6655:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6656:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
6657:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6658:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3999              		.loc 2 6658 0
 4000 036e 8022     		movs	r2, #128
 4001 0370 1A60     		str	r2, [r3]
 4002              	.LVL330:
 4003              	.LBE427:
 4004              	.LBE426:
3051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4005              		.loc 1 3051 0
 4006 0372 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 4007 0374 012B     		cmp	r3, #1
 4008 0376 3BD0     		beq	.L323
3057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4009              		.loc 1 3057 0
 4010 0378 2268     		ldr	r2, [r4]
 4011              	.LVL331:
 4012              	.LBB428:
 4013              	.LBB429:
6659:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6660:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6661:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6662:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
6663:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
6664:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6665:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6666:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6667:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
6668:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
6670:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 279


6671:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6672:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6673:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
6674:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
6675:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6676:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6677:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6678:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
6679:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
6681:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6682:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6683:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6684:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6685:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
6686:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
6687:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6688:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6689:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6690:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6691:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6692:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6693:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
6694:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6695:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6696:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6697:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
6698:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
6699:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6700:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6701:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6702:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6703:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
6704:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6705:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
6706:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6707:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6708:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6709:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
6710:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
6711:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6712:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6713:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6714:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6715:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
6716:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6717:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6718:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6719:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6720:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6721:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
6722:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
6723:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6724:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6725:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6726:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6727:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
ARM GAS  /tmp/ccxf1fbt.s 			page 280


6728:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6729:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
6730:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6731:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6732:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6733:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
6734:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
6735:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6736:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6737:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6738:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6739:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6740:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6741:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
6742:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6743:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6744:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6745:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
6746:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
6747:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6748:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6749:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6750:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6751:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
6752:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6753:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
6754:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6755:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6756:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6757:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
6758:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
6759:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6760:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6761:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6762:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6763:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6764:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6765:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
6766:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6767:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6768:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6769:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
6770:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
6771:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6772:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6773:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6774:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6775:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
6776:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6777:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
6778:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6779:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6780:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6781:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
6782:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
6783:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6784:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  /tmp/ccxf1fbt.s 			page 281


6785:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6786:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6787:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6788:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6789:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
6790:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6791:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6792:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6793:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
6794:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
6795:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6796:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6797:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6798:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6799:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
6800:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6801:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
6802:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6803:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6804:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6805:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
6806:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
6807:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6808:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6809:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6810:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6811:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6812:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6813:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
6814:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6815:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6816:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6817:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
6818:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
6819:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6820:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6821:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6822:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6823:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
6824:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6825:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
6826:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6827:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6828:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6829:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
6830:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
6831:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6832:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6833:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6834:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6835:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6836:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6837:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
6838:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6839:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6840:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6841:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
ARM GAS  /tmp/ccxf1fbt.s 			page 282


6842:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
6843:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6844:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6845:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6846:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6847:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
6848:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6849:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
6850:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6851:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6852:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6853:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
6854:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
6855:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6856:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6857:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6858:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6859:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6860:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6861:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
6862:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6863:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6864:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6865:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
6866:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
6867:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6868:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6869:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6870:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6871:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
6872:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6873:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
6874:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6875:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6876:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6877:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
6878:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
6879:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6880:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6881:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6882:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6883:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6884:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6885:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
6886:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6887:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6888:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6889:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
6890:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
6891:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6892:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6893:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6894:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6895:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
6896:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6897:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
6898:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  /tmp/ccxf1fbt.s 			page 283


6899:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6900:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6901:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
6902:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
6903:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6904:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6905:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6906:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6907:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6908:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6909:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
6910:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6911:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6912:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6913:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
6914:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
6915:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6916:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6917:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6918:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6919:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
6920:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6921:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
6922:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6923:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6924:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6925:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
6926:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
6927:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6928:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6929:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6930:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6931:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
6932:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6933:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
6934:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6935:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6936:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6937:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
6938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
6939:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6940:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6941:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval State of bit (1 or 0).
6942:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6943:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
6944:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6945:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
6946:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6947:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6948:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6949:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6950:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6951:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6952:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6953:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
6954:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6955:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  /tmp/ccxf1fbt.s 			page 284


6956:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6957:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC ready.
6959:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
6960:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6961:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6962:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6963:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
6964:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6965:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
6966:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6967:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6968:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6969:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
6970:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
6971:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6972:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6973:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
6975:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6976:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
6977:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6978:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6979:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6980:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
6981:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
6982:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6983:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6984:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
6986:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6987:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
6988:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6989:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6990:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6991:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
6992:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
6993:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6994:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6995:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6996:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
6997:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6998:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
6999:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7000:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7001:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7002:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7003:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7004:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7005:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7006:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7007:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7008:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7010:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7011:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  /tmp/ccxf1fbt.s 			page 285


7013:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7014:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7015:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7017:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7018:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7019:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7020:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7021:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7022:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7023:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7024:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7025:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7026:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7027:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7028:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7029:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7030:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7031:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7032:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7033:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7034:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7035:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7036:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7037:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7038:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7039:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7040:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7041:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7042:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7043:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7044:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7045:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7046:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7047:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7048:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7049:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7050:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7051:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7052:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7054:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7055:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7056:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7057:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7058:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7059:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7060:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7061:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7062:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7065:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7066:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7067:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7068:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7069:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
ARM GAS  /tmp/ccxf1fbt.s 			page 286


7070:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7071:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7072:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7073:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7074:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7076:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7077:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7078:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7079:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7080:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7081:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7082:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7084:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7085:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7086:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7087:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7088:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7089:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7090:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7091:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7092:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7093:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7094:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7095:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7097:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7098:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7099:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7100:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7101:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7102:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7103:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7104:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7105:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7106:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7107:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7108:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
7109:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7110:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7111:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7112:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
7113:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
7114:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7115:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7116:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7117:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
7118:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7119:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
7120:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7121:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7122:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7123:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
7124:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
7125:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7126:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccxf1fbt.s 			page 287


7127:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7128:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
7129:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7130:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7131:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7132:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7133:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7134:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7135:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
7136:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7137:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7138:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7139:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
7140:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7141:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7142:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7143:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7144:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7145:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
7146:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
7147:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7148:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7149:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7150:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
7151:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7152:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7153:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7154:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7155:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7156:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
7157:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
7158:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7159:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7160:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7161:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
7162:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7163:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7164:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7165:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7166:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7167:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
7168:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
7169:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7170:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7171:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7172:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
7173:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7174:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4014              		.loc 2 7174 0
 4015 037a 5368     		ldr	r3, [r2, #4]
 4016 037c 23F08003 		bic	r3, r3, #128
 4017 0380 5360     		str	r3, [r2, #4]
 4018              	.LBE429:
 4019              	.LBE428:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4020              		.loc 1 2943 0
 4021 0382 0020     		movs	r0, #0
ARM GAS  /tmp/ccxf1fbt.s 			page 288


 4022 0384 FFE0     		b	.L292
 4023              	.LVL332:
 4024              	.L322:
3006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 4025              		.loc 1 3006 0
 4026 0386 A968     		ldr	r1, [r5, #8]
 4027              	.LVL333:
 4028              	.LBB430:
 4029              	.LBB431:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4030              		.loc 2 5012 0
 4031 0388 DA68     		ldr	r2, [r3, #12]
 4032 038a 22F0FB42 		bic	r2, r2, #2105540608
 4033 038e 22F48002 		bic	r2, r2, #4194304
 4034 0392 01F0F841 		and	r1, r1, #2080374784
 4035              	.LVL334:
 4036 0396 41F0A071 		orr	r1, r1, #20971520
 4037 039a 0A43     		orrs	r2, r2, r1
 4038 039c DA60     		str	r2, [r3, #12]
 4039              	.LVL335:
 4040 039e C5E7     		b	.L290
 4041              	.LVL336:
 4042              	.L288:
 4043              	.LBE431:
 4044              	.LBE430:
3011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 4045              		.loc 1 3011 0
 4046 03a0 A968     		ldr	r1, [r5, #8]
 4047              	.LVL337:
 4048              	.LBB432:
 4049              	.LBB433:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4050              		.loc 2 5012 0
 4051 03a2 DA68     		ldr	r2, [r3, #12]
 4052 03a4 22F0FB42 		bic	r2, r2, #2105540608
 4053 03a8 22F48002 		bic	r2, r2, #4194304
 4054 03ac 01F0F841 		and	r1, r1, #2080374784
 4055              	.LVL338:
 4056 03b0 41F0E071 		orr	r1, r1, #29360128
 4057 03b4 0A43     		orrs	r2, r2, r1
 4058 03b6 DA60     		str	r2, [r3, #12]
 4059              	.LVL339:
 4060 03b8 B8E7     		b	.L290
 4061              	.LVL340:
 4062              	.L285:
 4063              	.LBE433:
 4064              	.LBE432:
 4065              	.LBB434:
 4066              	.LBB435:
 4067 03ba DA68     		ldr	r2, [r3, #12]
 4068 03bc 22F0FB42 		bic	r2, r2, #2105540608
 4069 03c0 22F48002 		bic	r2, r2, #4194304
 4070 03c4 42F40002 		orr	r2, r2, #8388608
 4071 03c8 DA60     		str	r2, [r3, #12]
 4072 03ca AFE7     		b	.L290
 4073              	.LVL341:
 4074              	.L283:
ARM GAS  /tmp/ccxf1fbt.s 			page 289


 4075              	.LBE435:
 4076              	.LBE434:
 4077              	.LBB436:
 4078              	.LBB437:
 4079 03cc DA68     		ldr	r2, [r3, #12]
 4080 03ce 22F0FB42 		bic	r2, r2, #2105540608
 4081 03d2 22F48002 		bic	r2, r2, #4194304
 4082 03d6 42F08072 		orr	r2, r2, #16777216
 4083 03da DA60     		str	r2, [r3, #12]
 4084 03dc A6E7     		b	.L290
 4085              	.LVL342:
 4086              	.L287:
 4087              	.LBE437:
 4088              	.LBE436:
 4089              	.LBB438:
 4090              	.LBB439:
 4091 03de DA68     		ldr	r2, [r3, #12]
 4092 03e0 22F0FB42 		bic	r2, r2, #2105540608
 4093 03e4 22F48002 		bic	r2, r2, #4194304
 4094 03e8 42F0C072 		orr	r2, r2, #25165824
 4095 03ec DA60     		str	r2, [r3, #12]
 4096 03ee 9DE7     		b	.L290
 4097              	.LVL343:
 4098              	.L323:
 4099              	.LBE439:
 4100              	.LBE438:
3053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4101              		.loc 1 3053 0
 4102 03f0 2268     		ldr	r2, [r4]
 4103              	.LVL344:
 4104              	.LBB440:
 4105              	.LBB441:
7053:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4106              		.loc 2 7053 0
 4107 03f2 5368     		ldr	r3, [r2, #4]
 4108 03f4 43F08003 		orr	r3, r3, #128
 4109 03f8 5360     		str	r3, [r2, #4]
 4110              	.LBE441:
 4111              	.LBE440:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4112              		.loc 1 2943 0
 4113 03fa 0020     		movs	r0, #0
 4114 03fc C3E0     		b	.L292
 4115              	.LVL345:
 4116              	.L319:
3063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4117              		.loc 1 3063 0
 4118 03fe B1F5000F 		cmp	r1, #8388608
 4119 0402 38D0     		beq	.L294
 4120 0404 B1F5400F 		cmp	r1, #12582912
 4121 0408 7FF49CAE 		bne	.L293
 4122              	.L296:
3070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           {
 4123              		.loc 1 3070 0
 4124 040c 6149     		ldr	r1, .L330
 4125 040e 8A42     		cmp	r2, r1
 4126 0410 0ED0     		beq	.L324
ARM GAS  /tmp/ccxf1fbt.s 			page 290


3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4127              		.loc 1 3076 0
 4128 0412 AA68     		ldr	r2, [r5, #8]
 4129 0414 C2F31201 		ubfx	r1, r2, #0, #19
 4130 0418 19BB     		cbnz	r1, .L301
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4131              		.loc 1 3076 0 is_stmt 0 discriminator 1
 4132 041a C2F38462 		ubfx	r2, r2, #26, #5
 4133 041e 0121     		movs	r1, #1
 4134 0420 01FA02F2 		lsl	r2, r1, r2
 4135              	.L302:
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4136              		.loc 1 3076 0 discriminator 4
 4137 0424 D3F8A410 		ldr	r1, [r3, #164]
 4138 0428 0A43     		orrs	r2, r2, r1
 4139 042a C3F8A420 		str	r2, [r3, #164]
 4140 042e 3AE0     		b	.L300
 4141              	.L324:
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4142              		.loc 1 3072 0 is_stmt 1
 4143 0430 AA68     		ldr	r2, [r5, #8]
 4144 0432 C2F31201 		ubfx	r1, r2, #0, #19
 4145 0436 51B9     		cbnz	r1, .L298
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4146              		.loc 1 3072 0 is_stmt 0 discriminator 1
 4147 0438 C2F38462 		ubfx	r2, r2, #26, #5
 4148 043c 0121     		movs	r1, #1
 4149 043e 01FA02F2 		lsl	r2, r1, r2
 4150              	.L299:
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4151              		.loc 1 3072 0 discriminator 4
 4152 0442 D3F8A010 		ldr	r1, [r3, #160]
 4153 0446 0A43     		orrs	r2, r2, r1
 4154 0448 C3F8A020 		str	r2, [r3, #160]
 4155 044c 2BE0     		b	.L300
 4156              	.L298:
 4157              	.LVL346:
 4158              	.LBB442:
 4159              	.LBB443:
 4160              		.loc 3 988 0 is_stmt 1 discriminator 2
 4161              		.syntax unified
 4162              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4163 044e 92FAA2F2 		rbit r2, r2
 4164              	@ 0 "" 2
 4165              	.LVL347:
 4166              		.thumb
 4167              		.syntax unified
 4168              	.LBE443:
 4169              	.LBE442:
3072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4170              		.loc 1 3072 0 discriminator 2
 4171 0452 B2FA82F2 		clz	r2, r2
 4172 0456 02F01F02 		and	r2, r2, #31
 4173 045a 0121     		movs	r1, #1
 4174 045c 01FA02F2 		lsl	r2, r1, r2
 4175 0460 EFE7     		b	.L299
 4176              	.L301:
ARM GAS  /tmp/ccxf1fbt.s 			page 291


 4177              	.LVL348:
 4178              	.LBB444:
 4179              	.LBB445:
 4180              		.loc 3 988 0 discriminator 2
 4181              		.syntax unified
 4182              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4183 0462 92FAA2F2 		rbit r2, r2
 4184              	@ 0 "" 2
 4185              	.LVL349:
 4186              		.thumb
 4187              		.syntax unified
 4188              	.LBE445:
 4189              	.LBE444:
3076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           }
 4190              		.loc 1 3076 0 discriminator 2
 4191 0466 B2FA82F2 		clz	r2, r2
 4192 046a 02F01F02 		and	r2, r2, #31
 4193 046e 0121     		movs	r1, #1
 4194 0470 01FA02F2 		lsl	r2, r1, r2
 4195 0474 D6E7     		b	.L302
 4196              	.L294:
 4197              	.LVL350:
 4198              	.LBB446:
 4199              	.LBB447:
5009:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 4200              		.loc 2 5009 0
 4201 0476 0C33     		adds	r3, r3, #12
 4202              	.LVL351:
 4203 0478 C2F30150 		ubfx	r0, r2, #20, #2
 4204 047c 02F00106 		and	r6, r2, #1
 4205 0480 F100     		lsls	r1, r6, #3
 4206 0482 3144     		add	r1, r1, r6
 4207 0484 8E00     		lsls	r6, r1, #2
 4208 0486 3044     		add	r0, r0, r6
 4209              	.LVL352:
5012:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4210              		.loc 2 5012 0
 4211 0488 53F82010 		ldr	r1, [r3, r0, lsl #2]
 4212 048c 22F00246 		bic	r6, r2, #-2113929216
 4213 0490 26F46016 		bic	r6, r6, #3670016
 4214 0494 21EA0601 		bic	r1, r1, r6
 4215 0498 22F07E42 		bic	r2, r2, #-33554432
 4216              	.LVL353:
 4217 049c 22F4F002 		bic	r2, r2, #7864320
 4218 04a0 0A43     		orrs	r2, r2, r1
 4219 04a2 43F82020 		str	r2, [r3, r0, lsl #2]
 4220              	.LVL354:
 4221              	.L300:
 4222              	.LBE447:
 4223              	.LBE446:
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 4224              		.loc 1 3093 0
 4225 04a6 2268     		ldr	r2, [r4]
 4226 04a8 D368     		ldr	r3, [r2, #12]
 4227 04aa 03F01803 		and	r3, r3, #24
 4228 04ae 182B     		cmp	r3, #24
 4229 04b0 3ED0     		beq	.L303
ARM GAS  /tmp/ccxf1fbt.s 			page 292


3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 4230              		.loc 1 3093 0 is_stmt 0 discriminator 1
 4231 04b2 2869     		ldr	r0, [r5, #16]
 4232 04b4 D368     		ldr	r3, [r2, #12]
 4233 04b6 C3F3C103 		ubfx	r3, r3, #3, #2
 4234 04ba C3EBC373 		rsb	r3, r3, r3, lsl #31
 4235 04be 5F00     		lsls	r7, r3, #1
 4236 04c0 3E1D     		adds	r6, r7, #4
 4237 04c2 06F01F06 		and	r6, r6, #31
 4238 04c6 20FA06F6 		lsr	r6, r0, r6
 4239              	.L304:
 4240              	.LVL355:
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 4241              		.loc 1 3094 0 is_stmt 1 discriminator 4
 4242 04ca D368     		ldr	r3, [r2, #12]
 4243 04cc 03F01803 		and	r3, r3, #24
 4244 04d0 182B     		cmp	r3, #24
 4245 04d2 30D0     		beq	.L305
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 4246              		.loc 1 3094 0 is_stmt 0 discriminator 1
 4247 04d4 6869     		ldr	r0, [r5, #20]
 4248 04d6 D368     		ldr	r3, [r2, #12]
 4249 04d8 C3F3C103 		ubfx	r3, r3, #3, #2
 4250 04dc C3EBC373 		rsb	r3, r3, r3, lsl #31
 4251 04e0 5900     		lsls	r1, r3, #1
 4252 04e2 0431     		adds	r1, r1, #4
 4253 04e4 01F01F01 		and	r1, r1, #31
 4254 04e8 C840     		lsrs	r0, r0, r1
 4255              	.L306:
 4256              	.LVL356:
3097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 4257              		.loc 1 3097 0 is_stmt 1 discriminator 4
 4258 04ea 2B68     		ldr	r3, [r5]
 4259              	.LVL357:
 4260              	.LBB448:
 4261              	.LBB449:
5255:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 4262              		.loc 2 5255 0 discriminator 4
 4263 04ec 2032     		adds	r2, r2, #32
 4264              	.LVL358:
 4265 04ee 1B0D     		lsrs	r3, r3, #20
 4266              	.LVL359:
 4267 04f0 9B00     		lsls	r3, r3, #2
 4268 04f2 03F00C03 		and	r3, r3, #12
 4269              	.LVL360:
5257:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 4270              		.loc 2 5257 0 discriminator 4
 4271 04f6 D158     		ldr	r1, [r2, r3]
 4272 04f8 01F0F021 		and	r1, r1, #-268374016
 4273 04fc 40EA0640 		orr	r0, r0, r6, lsl #16
 4274              	.LVL361:
 4275 0500 0143     		orrs	r1, r1, r0
 4276 0502 D150     		str	r1, [r2, r3]
 4277              	.LVL362:
 4278              	.LBE449:
 4279              	.LBE448:
3099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
ARM GAS  /tmp/ccxf1fbt.s 			page 293


 4280              		.loc 1 3099 0 discriminator 4
 4281 0504 2A68     		ldr	r2, [r5]
 4282 0506 234B     		ldr	r3, .L330
 4283 0508 9A42     		cmp	r2, r3
 4284 050a 17D0     		beq	.L325
3124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4285              		.loc 1 3124 0
 4286 050c 636D     		ldr	r3, [r4, #84]
 4287 050e 23F48023 		bic	r3, r3, #262144
 4288 0512 6365     		str	r3, [r4, #84]
3130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4289              		.loc 1 3130 0
 4290 0514 2368     		ldr	r3, [r4]
 4291              	.LVL363:
 4292              	.LBB450:
 4293              	.LBB451:
6680:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4294              		.loc 2 6680 0
 4295 0516 4FF40072 		mov	r2, #512
 4296 051a 1A60     		str	r2, [r3]
 4297              	.LVL364:
 4298              	.LBE451:
 4299              	.LBE450:
3133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4300              		.loc 1 3133 0
 4301 051c 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 4302 051e 012B     		cmp	r3, #1
 4303 0520 25D0     		beq	.L326
3139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4304              		.loc 1 3139 0
 4305 0522 2268     		ldr	r2, [r4]
 4306              	.LVL365:
 4307              	.LBB452:
 4308              	.LBB453:
7175:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7176:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7177:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7178:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
7179:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
7180:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7181:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7182:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7183:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
7184:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7186:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
7187:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
7188:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
7189:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
7190:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
7191:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
7192:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
7193:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
7194:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
7195:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
7196:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4309              		.loc 2 7196 0
ARM GAS  /tmp/ccxf1fbt.s 			page 294


 4310 0524 5368     		ldr	r3, [r2, #4]
 4311 0526 23F40073 		bic	r3, r3, #512
 4312 052a 5360     		str	r3, [r2, #4]
 4313              	.LBE453:
 4314              	.LBE452:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4315              		.loc 1 2943 0
 4316 052c 0020     		movs	r0, #0
 4317 052e 2AE0     		b	.L292
 4318              	.LVL366:
 4319              	.L303:
3093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 4320              		.loc 1 3093 0 discriminator 2
 4321 0530 2869     		ldr	r0, [r5, #16]
 4322 0532 8600     		lsls	r6, r0, #2
 4323 0534 C9E7     		b	.L304
 4324              	.LVL367:
 4325              	.L305:
3094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       
 4326              		.loc 1 3094 0 discriminator 2
 4327 0536 6869     		ldr	r0, [r5, #20]
 4328 0538 8000     		lsls	r0, r0, #2
 4329 053a D6E7     		b	.L306
 4330              	.L325:
3102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4331              		.loc 1 3102 0
 4332 053c 636D     		ldr	r3, [r4, #84]
 4333 053e 23F40033 		bic	r3, r3, #131072
 4334 0542 6365     		str	r3, [r4, #84]
3108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4335              		.loc 1 3108 0
 4336 0544 2368     		ldr	r3, [r4]
 4337              	.LVL368:
 4338              	.LBB454:
 4339              	.LBB455:
6669:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4340              		.loc 2 6669 0
 4341 0546 4FF48072 		mov	r2, #256
 4342 054a 1A60     		str	r2, [r3]
 4343              	.LVL369:
 4344              	.LBE455:
 4345              	.LBE454:
3111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4346              		.loc 1 3111 0
 4347 054c 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 4348 054e 012B     		cmp	r3, #1
 4349 0550 06D0     		beq	.L327
3117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4350              		.loc 1 3117 0
 4351 0552 2268     		ldr	r2, [r4]
 4352              	.LVL370:
 4353              	.LBB456:
 4354              	.LBB457:
7185:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4355              		.loc 2 7185 0
 4356 0554 5368     		ldr	r3, [r2, #4]
 4357 0556 23F48073 		bic	r3, r3, #256
ARM GAS  /tmp/ccxf1fbt.s 			page 295


 4358 055a 5360     		str	r3, [r2, #4]
 4359              	.LBE457:
 4360              	.LBE456:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4361              		.loc 1 2943 0
 4362 055c 0020     		movs	r0, #0
 4363 055e 12E0     		b	.L292
 4364              	.LVL371:
 4365              	.L327:
3113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4366              		.loc 1 3113 0
 4367 0560 2268     		ldr	r2, [r4]
 4368              	.LVL372:
 4369              	.LBB458:
 4370              	.LBB459:
7064:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4371              		.loc 2 7064 0
 4372 0562 5368     		ldr	r3, [r2, #4]
 4373 0564 43F48073 		orr	r3, r3, #256
 4374 0568 5360     		str	r3, [r2, #4]
 4375              	.LBE459:
 4376              	.LBE458:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4377              		.loc 1 2943 0
 4378 056a 0020     		movs	r0, #0
 4379 056c 0BE0     		b	.L292
 4380              	.LVL373:
 4381              	.L326:
3135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4382              		.loc 1 3135 0
 4383 056e 2268     		ldr	r2, [r4]
 4384              	.LVL374:
 4385              	.LBB460:
 4386              	.LBB461:
7075:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4387              		.loc 2 7075 0
 4388 0570 5368     		ldr	r3, [r2, #4]
 4389 0572 43F40073 		orr	r3, r3, #512
 4390 0576 5360     		str	r3, [r2, #4]
 4391              	.LBE461:
 4392              	.LBE460:
2943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4393              		.loc 1 2943 0
 4394 0578 0020     		movs	r0, #0
 4395 057a 04E0     		b	.L292
 4396              	.LVL375:
 4397              	.L280:
3150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     
 4398              		.loc 1 3150 0
 4399 057c 636D     		ldr	r3, [r4, #84]
 4400 057e 43F02003 		orr	r3, r3, #32
 4401 0582 6365     		str	r3, [r4, #84]
 4402              	.LVL376:
3152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 4403              		.loc 1 3152 0
 4404 0584 0120     		movs	r0, #1
 4405              	.LVL377:
ARM GAS  /tmp/ccxf1fbt.s 			page 296


 4406              	.L292:
3155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4407              		.loc 1 3155 0
 4408 0586 0023     		movs	r3, #0
 4409 0588 84F85030 		strb	r3, [r4, #80]
3158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4410              		.loc 1 3158 0
 4411 058c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4412              	.LVL378:
 4413              	.L310:
2979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4414              		.loc 1 2979 0
 4415 058e 0220     		movs	r0, #2
3159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4416              		.loc 1 3159 0
 4417 0590 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4418              	.LVL379:
 4419              	.L331:
 4420 0592 00BF     		.align	2
 4421              	.L330:
 4422 0594 FFFF1700 		.word	1572863
 4423              		.cfi_endproc
 4424              	.LFE303:
 4426              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 4427              		.align	1
 4428              		.global	HAL_ADC_GetState
 4429              		.syntax unified
 4430              		.thumb
 4431              		.thumb_func
 4432              		.fpu fpv4-sp-d16
 4434              	HAL_ADC_GetState:
 4435              	.LFB304:
3194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 4436              		.loc 1 3194 0
 4437              		.cfi_startproc
 4438              		@ args = 0, pretend = 0, frame = 0
 4439              		@ frame_needed = 0, uses_anonymous_args = 0
 4440              	.LVL380:
 4441 0000 10B5     		push	{r4, lr}
 4442              	.LCFI16:
 4443              		.cfi_def_cfa_offset 8
 4444              		.cfi_offset 4, -8
 4445              		.cfi_offset 14, -4
 4446 0002 0446     		mov	r4, r0
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4447              		.loc 1 3196 0
 4448 0004 0268     		ldr	r2, [r0]
 4449 0006 054B     		ldr	r3, .L335
 4450 0008 9A42     		cmp	r2, r3
 4451 000a 04D0     		beq	.L333
3196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4452              		.loc 1 3196 0 is_stmt 0 discriminator 1
 4453 000c 40F67C41 		movw	r1, #3196
 4454 0010 0348     		ldr	r0, .L335+4
 4455              	.LVL381:
 4456 0012 FFF7FEFF 		bl	assert_failed
 4457              	.LVL382:
ARM GAS  /tmp/ccxf1fbt.s 			page 297


 4458              	.L333:
3199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4459              		.loc 1 3199 0 is_stmt 1
 4460 0016 606D     		ldr	r0, [r4, #84]
3200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4461              		.loc 1 3200 0
 4462 0018 10BD     		pop	{r4, pc}
 4463              	.LVL383:
 4464              	.L336:
 4465 001a 00BF     		.align	2
 4466              	.L335:
 4467 001c 00000450 		.word	1342439424
 4468 0020 00000000 		.word	.LC0
 4469              		.cfi_endproc
 4470              	.LFE304:
 4472              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4473              		.align	1
 4474              		.global	HAL_ADC_GetError
 4475              		.syntax unified
 4476              		.thumb
 4477              		.thumb_func
 4478              		.fpu fpv4-sp-d16
 4480              	HAL_ADC_GetError:
 4481              	.LFB305:
3208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Check the parameters */
 4482              		.loc 1 3208 0
 4483              		.cfi_startproc
 4484              		@ args = 0, pretend = 0, frame = 0
 4485              		@ frame_needed = 0, uses_anonymous_args = 0
 4486              	.LVL384:
 4487 0000 10B5     		push	{r4, lr}
 4488              	.LCFI17:
 4489              		.cfi_def_cfa_offset 8
 4490              		.cfi_offset 4, -8
 4491              		.cfi_offset 14, -4
 4492 0002 0446     		mov	r4, r0
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4493              		.loc 1 3210 0
 4494 0004 0268     		ldr	r2, [r0]
 4495 0006 054B     		ldr	r3, .L340
 4496 0008 9A42     		cmp	r2, r3
 4497 000a 04D0     		beq	.L338
3210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4498              		.loc 1 3210 0 is_stmt 0 discriminator 1
 4499 000c 40F68A41 		movw	r1, #3210
 4500 0010 0348     		ldr	r0, .L340+4
 4501              	.LVL385:
 4502 0012 FFF7FEFF 		bl	assert_failed
 4503              	.LVL386:
 4504              	.L338:
3212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4505              		.loc 1 3212 0 is_stmt 1
 4506 0016 A06D     		ldr	r0, [r4, #88]
3213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4507              		.loc 1 3213 0
 4508 0018 10BD     		pop	{r4, pc}
 4509              	.LVL387:
ARM GAS  /tmp/ccxf1fbt.s 			page 298


 4510              	.L341:
 4511 001a 00BF     		.align	2
 4512              	.L340:
 4513 001c 00000450 		.word	1342439424
 4514 0020 00000000 		.word	.LC0
 4515              		.cfi_endproc
 4516              	.LFE305:
 4518              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4519              		.align	1
 4520              		.global	ADC_ConversionStop
 4521              		.syntax unified
 4522              		.thumb
 4523              		.thumb_func
 4524              		.fpu fpv4-sp-d16
 4526              	ADC_ConversionStop:
 4527              	.LFB306:
3238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4528              		.loc 1 3238 0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
 4532              	.LVL388:
 4533 0000 70B5     		push	{r4, r5, r6, lr}
 4534              	.LCFI18:
 4535              		.cfi_def_cfa_offset 16
 4536              		.cfi_offset 4, -16
 4537              		.cfi_offset 5, -12
 4538              		.cfi_offset 6, -8
 4539              		.cfi_offset 14, -4
 4540 0002 0446     		mov	r4, r0
 4541 0004 0D46     		mov	r5, r1
 4542              	.LVL389:
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4543              		.loc 1 3247 0
 4544 0006 0268     		ldr	r2, [r0]
 4545 0008 4E4B     		ldr	r3, .L380
 4546 000a 9A42     		cmp	r2, r3
 4547 000c 04D0     		beq	.L343
3247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4548              		.loc 1 3247 0 is_stmt 0 discriminator 1
 4549 000e 40F6AF41 		movw	r1, #3247
 4550              	.LVL390:
 4551 0012 4D48     		ldr	r0, .L380+4
 4552              	.LVL391:
 4553 0014 FFF7FEFF 		bl	assert_failed
 4554              	.LVL392:
 4555              	.L343:
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4556              		.loc 1 3248 0 is_stmt 1
 4557 0018 6B1E     		subs	r3, r5, #1
 4558 001a 022B     		cmp	r3, #2
 4559 001c 60D8     		bhi	.L375
 4560              	.L344:
3252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4561              		.loc 1 3252 0
 4562 001e 2268     		ldr	r2, [r4]
 4563              	.LVL393:
ARM GAS  /tmp/ccxf1fbt.s 			page 299


 4564              	.LBB462:
 4565              	.LBB463:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4566              		.loc 2 6096 0
 4567 0020 9368     		ldr	r3, [r2, #8]
 4568 0022 13F0040F 		tst	r3, #4
 4569 0026 61D0     		beq	.L364
 4570 0028 0123     		movs	r3, #1
 4571              	.L345:
 4572              	.LVL394:
 4573              	.LBE463:
 4574              	.LBE462:
 4575              	.LBB465:
 4576              	.LBB466:
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4577              		.loc 2 6279 0
 4578 002a 9168     		ldr	r1, [r2, #8]
 4579 002c 11F0080F 		tst	r1, #8
 4580 0030 5ED0     		beq	.L365
 4581 0032 0121     		movs	r1, #1
 4582              	.L346:
 4583              	.LVL395:
 4584              	.LBE466:
 4585              	.LBE465:
3254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4586              		.loc 1 3254 0
 4587 0034 13B9     		cbnz	r3, .L347
3255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 4588              		.loc 1 3255 0
 4589 0036 0029     		cmp	r1, #0
 4590 0038 00F08280 		beq	.L366
 4591              	.L347:
3264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4592              		.loc 1 3264 0
 4593 003c D368     		ldr	r3, [r2, #12]
 4594 003e 13F0007F 		tst	r3, #33554432
 4595 0042 04D0     		beq	.L349
3266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****        )
 4596              		.loc 1 3266 0
 4597 0044 218B     		ldrh	r1, [r4, #24]
 4598 0046 40F20113 		movw	r3, #257
 4599 004a 9942     		cmp	r1, r3
 4600 004c 5CD0     		beq	.L376
 4601              	.LVL396:
 4602              	.L349:
3293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4603              		.loc 1 3293 0
 4604 004e 022D     		cmp	r5, #2
 4605 0050 14D0     		beq	.L353
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4606              		.loc 1 3296 0
 4607 0052 2368     		ldr	r3, [r4]
 4608              	.LVL397:
 4609              	.LBB468:
 4610              	.LBB469:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4611              		.loc 2 6096 0
ARM GAS  /tmp/ccxf1fbt.s 			page 300


 4612 0054 9A68     		ldr	r2, [r3, #8]
 4613 0056 12F0040F 		tst	r2, #4
 4614 005a 63D0     		beq	.L368
 4615 005c 0122     		movs	r2, #1
 4616              	.L354:
 4617              	.LVL398:
 4618              	.LBE469:
 4619              	.LBE468:
3296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4620              		.loc 1 3296 0
 4621 005e 6AB1     		cbz	r2, .L353
 4622              	.LVL399:
 4623              	.LBB471:
 4624              	.LBB472:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4625              		.loc 2 5985 0
 4626 0060 9A68     		ldr	r2, [r3, #8]
 4627 0062 12F0020F 		tst	r2, #2
 4628 0066 5FD0     		beq	.L369
 4629 0068 0122     		movs	r2, #1
 4630              	.L355:
 4631              	.LVL400:
 4632              	.LBE472:
 4633              	.LBE471:
3298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4634              		.loc 1 3298 0
 4635 006a 3AB9     		cbnz	r2, .L353
 4636              	.LVL401:
 4637              	.LBB474:
 4638              	.LBB475:
6083:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4639              		.loc 2 6083 0
 4640 006c 9A68     		ldr	r2, [r3, #8]
 4641 006e 22F00042 		bic	r2, r2, #-2147483648
 4642 0072 22F03F02 		bic	r2, r2, #63
 4643 0076 42F01002 		orr	r2, r2, #16
 4644 007a 9A60     		str	r2, [r3, #8]
 4645              	.LVL402:
 4646              	.L353:
 4647              	.LBE475:
 4648              	.LBE474:
3307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4649              		.loc 1 3307 0
 4650 007c 012D     		cmp	r5, #1
 4651 007e 14D0     		beq	.L356
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4652              		.loc 1 3310 0
 4653 0080 2368     		ldr	r3, [r4]
 4654              	.LVL403:
 4655              	.LBB476:
 4656              	.LBB477:
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4657              		.loc 2 6279 0
 4658 0082 9A68     		ldr	r2, [r3, #8]
 4659 0084 12F0080F 		tst	r2, #8
 4660 0088 50D0     		beq	.L370
 4661 008a 0122     		movs	r2, #1
ARM GAS  /tmp/ccxf1fbt.s 			page 301


 4662              	.L357:
 4663              	.LVL404:
 4664              	.LBE477:
 4665              	.LBE476:
3310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4666              		.loc 1 3310 0
 4667 008c 6AB1     		cbz	r2, .L356
 4668              	.LVL405:
 4669              	.LBB479:
 4670              	.LBB480:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4671              		.loc 2 5985 0
 4672 008e 9A68     		ldr	r2, [r3, #8]
 4673 0090 12F0020F 		tst	r2, #2
 4674 0094 4CD0     		beq	.L371
 4675 0096 0122     		movs	r2, #1
 4676              	.L358:
 4677              	.LVL406:
 4678              	.LBE480:
 4679              	.LBE479:
3312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4680              		.loc 1 3312 0
 4681 0098 3AB9     		cbnz	r2, .L356
 4682              	.LVL407:
 4683              	.LBB482:
 4684              	.LBB483:
6266:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4685              		.loc 2 6266 0
 4686 009a 9A68     		ldr	r2, [r3, #8]
 4687 009c 22F00042 		bic	r2, r2, #-2147483648
 4688 00a0 22F03F02 		bic	r2, r2, #63
 4689 00a4 42F02002 		orr	r2, r2, #32
 4690 00a8 9A60     		str	r2, [r3, #8]
 4691              	.LVL408:
 4692              	.L356:
 4693              	.LBE483:
 4694              	.LBE482:
3321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4695              		.loc 1 3321 0
 4696 00aa 022D     		cmp	r5, #2
 4697 00ac 44D0     		beq	.L372
 4698 00ae 032D     		cmp	r5, #3
 4699 00b0 40D1     		bne	.L373
3324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 4700              		.loc 1 3324 0
 4701 00b2 0C25     		movs	r5, #12
 4702              	.LVL409:
 4703              	.L360:
3336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4704              		.loc 1 3336 0
 4705 00b4 FFF7FEFF 		bl	HAL_GetTick
 4706              	.LVL410:
 4707 00b8 0646     		mov	r6, r0
 4708              	.LVL411:
 4709              	.L362:
3338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4710              		.loc 1 3338 0
ARM GAS  /tmp/ccxf1fbt.s 			page 302


 4711 00ba 2368     		ldr	r3, [r4]
 4712 00bc 9B68     		ldr	r3, [r3, #8]
 4713 00be 1D42     		tst	r5, r3
 4714 00c0 3CD0     		beq	.L377
3340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4715              		.loc 1 3340 0
 4716 00c2 FFF7FEFF 		bl	HAL_GetTick
 4717              	.LVL412:
 4718 00c6 801B     		subs	r0, r0, r6
 4719 00c8 0528     		cmp	r0, #5
 4720 00ca F6D9     		bls	.L362
3343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4721              		.loc 1 3343 0
 4722 00cc 636D     		ldr	r3, [r4, #84]
 4723 00ce 43F01003 		orr	r3, r3, #16
 4724 00d2 6365     		str	r3, [r4, #84]
3346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4725              		.loc 1 3346 0
 4726 00d4 A36D     		ldr	r3, [r4, #88]
 4727 00d6 43F00103 		orr	r3, r3, #1
 4728 00da A365     		str	r3, [r4, #88]
3348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4729              		.loc 1 3348 0
 4730 00dc 0120     		movs	r0, #1
 4731 00de 70BD     		pop	{r4, r5, r6, pc}
 4732              	.LVL413:
 4733              	.L375:
3248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4734              		.loc 1 3248 0 discriminator 1
 4735 00e0 4FF44B61 		mov	r1, #3248
 4736 00e4 1848     		ldr	r0, .L380+4
 4737 00e6 FFF7FEFF 		bl	assert_failed
 4738              	.LVL414:
 4739 00ea 98E7     		b	.L344
 4740              	.LVL415:
 4741              	.L364:
 4742              	.LBB484:
 4743              	.LBB464:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4744              		.loc 2 6096 0
 4745 00ec 0023     		movs	r3, #0
 4746 00ee 9CE7     		b	.L345
 4747              	.LVL416:
 4748              	.L365:
 4749              	.LBE464:
 4750              	.LBE484:
 4751              	.LBB485:
 4752              	.LBB467:
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4753              		.loc 2 6279 0
 4754 00f0 0021     		movs	r1, #0
 4755 00f2 9FE7     		b	.L346
 4756              	.LVL417:
 4757              	.L379:
 4758              	.LBE467:
 4759              	.LBE485:
3278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 303


 4760              		.loc 1 3278 0
 4761 00f4 636D     		ldr	r3, [r4, #84]
 4762              	.LVL418:
 4763 00f6 43F01003 		orr	r3, r3, #16
 4764 00fa 6365     		str	r3, [r4, #84]
3281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4765              		.loc 1 3281 0
 4766 00fc A36D     		ldr	r3, [r4, #88]
 4767 00fe 43F00103 		orr	r3, r3, #1
 4768 0102 A365     		str	r3, [r4, #88]
3283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 4769              		.loc 1 3283 0
 4770 0104 0120     		movs	r0, #1
 4771 0106 70BD     		pop	{r4, r5, r6, pc}
 4772              	.LVL419:
 4773              	.L376:
 4774 0108 0023     		movs	r3, #0
 4775              	.LVL420:
 4776              	.L350:
3273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4777              		.loc 1 3273 0
 4778 010a 1168     		ldr	r1, [r2]
 4779 010c 11F0400F 		tst	r1, #64
 4780 0110 04D1     		bne	.L378
3275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 4781              		.loc 1 3275 0
 4782 0112 0E49     		ldr	r1, .L380+8
 4783 0114 8B42     		cmp	r3, r1
 4784 0116 EDD8     		bhi	.L379
3285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 4785              		.loc 1 3285 0
 4786 0118 0133     		adds	r3, r3, #1
 4787              	.LVL421:
 4788 011a F6E7     		b	.L350
 4789              	.L378:
3289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4790              		.loc 1 3289 0
 4791 011c 4023     		movs	r3, #64
 4792              	.LVL422:
 4793 011e 1360     		str	r3, [r2]
3270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4794              		.loc 1 3270 0
 4795 0120 0125     		movs	r5, #1
 4796              	.LVL423:
 4797 0122 94E7     		b	.L349
 4798              	.LVL424:
 4799              	.L368:
 4800              	.LBB486:
 4801              	.LBB470:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4802              		.loc 2 6096 0
 4803 0124 0022     		movs	r2, #0
 4804 0126 9AE7     		b	.L354
 4805              	.LVL425:
 4806              	.L369:
 4807              	.LBE470:
 4808              	.LBE486:
ARM GAS  /tmp/ccxf1fbt.s 			page 304


 4809              	.LBB487:
 4810              	.LBB473:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4811              		.loc 2 5985 0
 4812 0128 0022     		movs	r2, #0
 4813 012a 9EE7     		b	.L355
 4814              	.LVL426:
 4815              	.L370:
 4816              	.LBE473:
 4817              	.LBE487:
 4818              	.LBB488:
 4819              	.LBB478:
6279:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4820              		.loc 2 6279 0
 4821 012c 0022     		movs	r2, #0
 4822 012e ADE7     		b	.L357
 4823              	.LVL427:
 4824              	.L371:
 4825              	.LBE478:
 4826              	.LBE488:
 4827              	.LBB489:
 4828              	.LBB481:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4829              		.loc 2 5985 0
 4830 0130 0022     		movs	r2, #0
 4831 0132 B1E7     		b	.L358
 4832              	.LVL428:
 4833              	.L373:
 4834              	.LBE481:
 4835              	.LBE489:
3331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 4836              		.loc 1 3331 0
 4837 0134 0425     		movs	r5, #4
 4838              	.LVL429:
3332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4839              		.loc 1 3332 0
 4840 0136 BDE7     		b	.L360
 4841              	.LVL430:
 4842              	.L372:
3327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         break;
 4843              		.loc 1 3327 0
 4844 0138 0825     		movs	r5, #8
 4845              	.LVL431:
 4846 013a BBE7     		b	.L360
 4847              	.LVL432:
 4848              	.L377:
3355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 4849              		.loc 1 3355 0
 4850 013c 0020     		movs	r0, #0
 4851 013e 70BD     		pop	{r4, r5, r6, pc}
 4852              	.LVL433:
 4853              	.L366:
 4854 0140 0020     		movs	r0, #0
3356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4855              		.loc 1 3356 0
 4856 0142 70BD     		pop	{r4, r5, r6, pc}
 4857              	.LVL434:
ARM GAS  /tmp/ccxf1fbt.s 			page 305


 4858              	.L381:
 4859              		.align	2
 4860              	.L380:
 4861 0144 00000450 		.word	1342439424
 4862 0148 00000000 		.word	.LC0
 4863 014c FFFF3FA3 		.word	-1556086785
 4864              		.cfi_endproc
 4865              	.LFE306:
 4867              		.section	.text.ADC_Enable,"ax",%progbits
 4868              		.align	1
 4869              		.global	ADC_Enable
 4870              		.syntax unified
 4871              		.thumb
 4872              		.thumb_func
 4873              		.fpu fpv4-sp-d16
 4875              	ADC_Enable:
 4876              	.LFB307:
3368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 4877              		.loc 1 3368 0
 4878              		.cfi_startproc
 4879              		@ args = 0, pretend = 0, frame = 0
 4880              		@ frame_needed = 0, uses_anonymous_args = 0
 4881              	.LVL435:
 4882 0000 38B5     		push	{r3, r4, r5, lr}
 4883              	.LCFI19:
 4884              		.cfi_def_cfa_offset 16
 4885              		.cfi_offset 3, -16
 4886              		.cfi_offset 4, -12
 4887              		.cfi_offset 5, -8
 4888              		.cfi_offset 14, -4
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4889              		.loc 1 3375 0
 4890 0002 0368     		ldr	r3, [r0]
 4891              	.LVL436:
 4892              	.LBB490:
 4893              	.LBB491:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4894              		.loc 2 5974 0
 4895 0004 9A68     		ldr	r2, [r3, #8]
 4896 0006 12F0010F 		tst	r2, #1
 4897 000a 10D0     		beq	.L390
 4898 000c 0122     		movs	r2, #1
 4899              	.L383:
 4900              	.LVL437:
 4901              	.LBE491:
 4902              	.LBE490:
3375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 4903              		.loc 1 3375 0
 4904 000e 002A     		cmp	r2, #0
 4905 0010 44D1     		bne	.L391
3378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4906              		.loc 1 3378 0
 4907 0012 9968     		ldr	r1, [r3, #8]
 4908 0014 224A     		ldr	r2, .L396
 4909 0016 1142     		tst	r1, r2
 4910 0018 0BD0     		beq	.L385
3381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 306


 4911              		.loc 1 3381 0
 4912 001a 436D     		ldr	r3, [r0, #84]
 4913 001c 43F01003 		orr	r3, r3, #16
 4914 0020 4365     		str	r3, [r0, #84]
3384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4915              		.loc 1 3384 0
 4916 0022 836D     		ldr	r3, [r0, #88]
 4917 0024 43F00103 		orr	r3, r3, #1
 4918 0028 8365     		str	r3, [r0, #88]
3386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 4919              		.loc 1 3386 0
 4920 002a 0120     		movs	r0, #1
 4921              	.LVL438:
 4922 002c 38BD     		pop	{r3, r4, r5, pc}
 4923              	.LVL439:
 4924              	.L390:
 4925              	.LBB493:
 4926              	.LBB492:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4927              		.loc 2 5974 0
 4928 002e 0022     		movs	r2, #0
 4929 0030 EDE7     		b	.L383
 4930              	.LVL440:
 4931              	.L385:
 4932 0032 0446     		mov	r4, r0
 4933              	.LVL441:
 4934              	.LBE492:
 4935              	.LBE493:
 4936              	.LBB494:
 4937              	.LBB495:
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4938              		.loc 2 5938 0
 4939 0034 9A68     		ldr	r2, [r3, #8]
 4940 0036 22F00042 		bic	r2, r2, #-2147483648
 4941 003a 22F03F02 		bic	r2, r2, #63
 4942 003e 42F00102 		orr	r2, r2, #1
 4943 0042 9A60     		str	r2, [r3, #8]
 4944              	.LVL442:
 4945              	.LBE495:
 4946              	.LBE494:
3393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 4947              		.loc 1 3393 0
 4948 0044 FFF7FEFF 		bl	HAL_GetTick
 4949              	.LVL443:
 4950 0048 0546     		mov	r5, r0
 4951              	.LVL444:
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4952              		.loc 1 3395 0
 4953 004a 06E0     		b	.L386
 4954              	.LVL445:
 4955              	.L392:
 4956              	.LBB496:
 4957              	.LBB497:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4958              		.loc 2 5974 0
 4959 004c 0022     		movs	r2, #0
 4960 004e 0EE0     		b	.L387
ARM GAS  /tmp/ccxf1fbt.s 			page 307


 4961              	.LVL446:
 4962              	.L388:
 4963              	.LBE497:
 4964              	.LBE496:
3410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4965              		.loc 1 3410 0
 4966 0050 FFF7FEFF 		bl	HAL_GetTick
 4967              	.LVL447:
 4968 0054 401B     		subs	r0, r0, r5
 4969 0056 0228     		cmp	r0, #2
 4970 0058 14D8     		bhi	.L394
 4971              	.L386:
3395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 4972              		.loc 1 3395 0
 4973 005a 2368     		ldr	r3, [r4]
 4974 005c 1A68     		ldr	r2, [r3]
 4975 005e 12F0010F 		tst	r2, #1
 4976 0062 19D1     		bne	.L395
 4977              	.LVL448:
 4978              	.LBB499:
 4979              	.LBB498:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 4980              		.loc 2 5974 0
 4981 0064 9A68     		ldr	r2, [r3, #8]
 4982 0066 12F0010F 		tst	r2, #1
 4983 006a EFD0     		beq	.L392
 4984 006c 0122     		movs	r2, #1
 4985              	.L387:
 4986              	.LVL449:
 4987              	.LBE498:
 4988              	.LBE499:
3405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 4989              		.loc 1 3405 0
 4990 006e 002A     		cmp	r2, #0
 4991 0070 EED1     		bne	.L388
 4992              	.LVL450:
 4993              	.LBB500:
 4994              	.LBB501:
5938:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4995              		.loc 2 5938 0
 4996 0072 9A68     		ldr	r2, [r3, #8]
 4997 0074 22F00042 		bic	r2, r2, #-2147483648
 4998 0078 22F03F02 		bic	r2, r2, #63
 4999 007c 42F00102 		orr	r2, r2, #1
 5000 0080 9A60     		str	r2, [r3, #8]
 5001 0082 E5E7     		b	.L388
 5002              	.LVL451:
 5003              	.L394:
 5004              	.LBE501:
 5005              	.LBE500:
3413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5006              		.loc 1 3413 0
 5007 0084 636D     		ldr	r3, [r4, #84]
 5008 0086 43F01003 		orr	r3, r3, #16
 5009 008a 6365     		str	r3, [r4, #84]
3416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5010              		.loc 1 3416 0
ARM GAS  /tmp/ccxf1fbt.s 			page 308


 5011 008c A36D     		ldr	r3, [r4, #88]
 5012 008e 43F00103 		orr	r3, r3, #1
 5013 0092 A365     		str	r3, [r4, #88]
3418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5014              		.loc 1 3418 0
 5015 0094 0120     		movs	r0, #1
 5016 0096 38BD     		pop	{r3, r4, r5, pc}
 5017              	.LVL452:
 5018              	.L395:
3424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5019              		.loc 1 3424 0
 5020 0098 0020     		movs	r0, #0
 5021 009a 38BD     		pop	{r3, r4, r5, pc}
 5022              	.LVL453:
 5023              	.L391:
 5024 009c 0020     		movs	r0, #0
 5025              	.LVL454:
3425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5026              		.loc 1 3425 0
 5027 009e 38BD     		pop	{r3, r4, r5, pc}
 5028              	.L397:
 5029              		.align	2
 5030              	.L396:
 5031 00a0 3F000080 		.word	-2147483585
 5032              		.cfi_endproc
 5033              	.LFE307:
 5035              		.section	.text.HAL_ADC_Start,"ax",%progbits
 5036              		.align	1
 5037              		.global	HAL_ADC_Start
 5038              		.syntax unified
 5039              		.thumb
 5040              		.thumb_func
 5041              		.fpu fpv4-sp-d16
 5043              	HAL_ADC_Start:
 5044              	.LFB288:
1216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5045              		.loc 1 1216 0
 5046              		.cfi_startproc
 5047              		@ args = 0, pretend = 0, frame = 0
 5048              		@ frame_needed = 0, uses_anonymous_args = 0
 5049              	.LVL455:
 5050 0000 10B5     		push	{r4, lr}
 5051              	.LCFI20:
 5052              		.cfi_def_cfa_offset 8
 5053              		.cfi_offset 4, -8
 5054              		.cfi_offset 14, -4
 5055 0002 0446     		mov	r4, r0
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5056              		.loc 1 1224 0
 5057 0004 0268     		ldr	r2, [r0]
 5058 0006 294B     		ldr	r3, .L412
 5059 0008 9A42     		cmp	r2, r3
 5060 000a 04D0     		beq	.L399
1224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5061              		.loc 1 1224 0 is_stmt 0 discriminator 1
 5062 000c 4FF49961 		mov	r1, #1224
 5063 0010 2748     		ldr	r0, .L412+4
ARM GAS  /tmp/ccxf1fbt.s 			page 309


 5064              	.LVL456:
 5065 0012 FFF7FEFF 		bl	assert_failed
 5066              	.LVL457:
 5067              	.L399:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5068              		.loc 1 1227 0 is_stmt 1
 5069 0016 2368     		ldr	r3, [r4]
 5070              	.LVL458:
 5071              	.LBB502:
 5072              	.LBB503:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5073              		.loc 2 6096 0
 5074 0018 9B68     		ldr	r3, [r3, #8]
 5075              	.LVL459:
 5076 001a 13F0040F 		tst	r3, #4
 5077 001e 04D0     		beq	.L406
 5078 0020 0123     		movs	r3, #1
 5079              	.L400:
 5080              	.LVL460:
 5081              	.LBE503:
 5082              	.LBE502:
1227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5083              		.loc 1 1227 0
 5084 0022 23B1     		cbz	r3, .L410
1334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5085              		.loc 1 1334 0
 5086 0024 0223     		movs	r3, #2
 5087              	.L401:
1339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5088              		.loc 1 1339 0
 5089 0026 1846     		mov	r0, r3
 5090 0028 10BD     		pop	{r4, pc}
 5091              	.LVL461:
 5092              	.L406:
 5093              	.LBB505:
 5094              	.LBB504:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5095              		.loc 2 6096 0
 5096 002a 0023     		movs	r3, #0
 5097 002c F9E7     		b	.L400
 5098              	.LVL462:
 5099              	.L410:
 5100              	.LBE504:
 5101              	.LBE505:
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5102              		.loc 1 1230 0
 5103 002e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5104 0032 012B     		cmp	r3, #1
 5105 0034 01D1     		bne	.L411
 5106 0036 0223     		movs	r3, #2
 5107 0038 F5E7     		b	.L401
 5108              	.L411:
1230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5109              		.loc 1 1230 0 is_stmt 0 discriminator 2
 5110 003a 0123     		movs	r3, #1
 5111 003c 84F85030 		strb	r3, [r4, #80]
1233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 310


 5112              		.loc 1 1233 0 is_stmt 1 discriminator 2
 5113 0040 2046     		mov	r0, r4
 5114 0042 FFF7FEFF 		bl	ADC_Enable
 5115              	.LVL463:
1236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5116              		.loc 1 1236 0 discriminator 2
 5117 0046 0346     		mov	r3, r0
 5118 0048 60BB     		cbnz	r0, .L402
1241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5119              		.loc 1 1241 0
 5120 004a 626D     		ldr	r2, [r4, #84]
 5121 004c 22F47062 		bic	r2, r2, #3840
 5122 0050 22F00102 		bic	r2, r2, #1
 5123 0054 42F48072 		orr	r2, r2, #256
 5124 0058 6265     		str	r2, [r4, #84]
1259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5125              		.loc 1 1259 0
 5126 005a 626D     		ldr	r2, [r4, #84]
 5127 005c 12F4805F 		tst	r2, #4096
 5128 0060 1DD0     		beq	.L403
1262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5129              		.loc 1 1262 0
 5130 0062 A26D     		ldr	r2, [r4, #88]
 5131 0064 22F00602 		bic	r2, r2, #6
 5132 0068 A265     		str	r2, [r4, #88]
 5133              	.L404:
1272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5134              		.loc 1 1272 0
 5135 006a 2268     		ldr	r2, [r4]
 5136 006c 1C21     		movs	r1, #28
 5137 006e 1160     		str	r1, [r2]
1277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5138              		.loc 1 1277 0
 5139 0070 0022     		movs	r2, #0
 5140 0072 84F85020 		strb	r2, [r4, #80]
1317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5141              		.loc 1 1317 0
 5142 0076 2168     		ldr	r1, [r4]
 5143 0078 CA68     		ldr	r2, [r1, #12]
 5144 007a 12F0007F 		tst	r2, #33554432
 5145 007e 05D0     		beq	.L405
1319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5146              		.loc 1 1319 0
 5147 0080 626D     		ldr	r2, [r4, #84]
 5148 0082 22F44052 		bic	r2, r2, #12288
 5149 0086 42F48052 		orr	r2, r2, #4096
 5150 008a 6265     		str	r2, [r4, #84]
 5151              	.L405:
 5152              	.LVL464:
 5153              	.LBB506:
 5154              	.LBB507:
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5155              		.loc 2 6063 0
 5156 008c 8A68     		ldr	r2, [r1, #8]
 5157 008e 22F00042 		bic	r2, r2, #-2147483648
 5158 0092 22F03F02 		bic	r2, r2, #63
 5159 0096 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccxf1fbt.s 			page 311


 5160 009a 8A60     		str	r2, [r1, #8]
 5161 009c C3E7     		b	.L401
 5162              	.LVL465:
 5163              	.L403:
 5164              	.LBE507:
 5165              	.LBE506:
1267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5166              		.loc 1 1267 0
 5167 009e 0022     		movs	r2, #0
 5168 00a0 A265     		str	r2, [r4, #88]
 5169 00a2 E2E7     		b	.L404
 5170              	.L402:
1329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5171              		.loc 1 1329 0
 5172 00a4 0022     		movs	r2, #0
 5173 00a6 84F85020 		strb	r2, [r4, #80]
 5174 00aa BCE7     		b	.L401
 5175              	.L413:
 5176              		.align	2
 5177              	.L412:
 5178 00ac 00000450 		.word	1342439424
 5179 00b0 00000000 		.word	.LC0
 5180              		.cfi_endproc
 5181              	.LFE288:
 5183              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 5184              		.align	1
 5185              		.global	HAL_ADC_Start_IT
 5186              		.syntax unified
 5187              		.thumb
 5188              		.thumb_func
 5189              		.fpu fpv4-sp-d16
 5191              	HAL_ADC_Start_IT:
 5192              	.LFB292:
1729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5193              		.loc 1 1729 0
 5194              		.cfi_startproc
 5195              		@ args = 0, pretend = 0, frame = 0
 5196              		@ frame_needed = 0, uses_anonymous_args = 0
 5197              	.LVL466:
 5198 0000 10B5     		push	{r4, lr}
 5199              	.LCFI21:
 5200              		.cfi_def_cfa_offset 8
 5201              		.cfi_offset 4, -8
 5202              		.cfi_offset 14, -4
 5203 0002 0446     		mov	r4, r0
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5204              		.loc 1 1737 0
 5205 0004 0268     		ldr	r2, [r0]
 5206 0006 424B     		ldr	r3, .L436
 5207 0008 9A42     		cmp	r2, r3
 5208 000a 04D0     		beq	.L415
1737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5209              		.loc 1 1737 0 is_stmt 0 discriminator 1
 5210 000c 40F2C961 		movw	r1, #1737
 5211 0010 4048     		ldr	r0, .L436+4
 5212              	.LVL467:
 5213 0012 FFF7FEFF 		bl	assert_failed
ARM GAS  /tmp/ccxf1fbt.s 			page 312


 5214              	.LVL468:
 5215              	.L415:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5216              		.loc 1 1740 0 is_stmt 1
 5217 0016 2368     		ldr	r3, [r4]
 5218              	.LVL469:
 5219              	.LBB508:
 5220              	.LBB509:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5221              		.loc 2 6096 0
 5222 0018 9B68     		ldr	r3, [r3, #8]
 5223              	.LVL470:
 5224 001a 13F0040F 		tst	r3, #4
 5225 001e 04D0     		beq	.L428
 5226 0020 0123     		movs	r3, #1
 5227              	.L416:
 5228              	.LVL471:
 5229              	.LBE509:
 5230              	.LBE508:
1740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5231              		.loc 1 1740 0
 5232 0022 23B1     		cbz	r3, .L434
1921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5233              		.loc 1 1921 0
 5234 0024 0223     		movs	r3, #2
 5235              	.L417:
1926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5236              		.loc 1 1926 0
 5237 0026 1846     		mov	r0, r3
 5238 0028 10BD     		pop	{r4, pc}
 5239              	.LVL472:
 5240              	.L428:
 5241              	.LBB511:
 5242              	.LBB510:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5243              		.loc 2 6096 0
 5244 002a 0023     		movs	r3, #0
 5245 002c F9E7     		b	.L416
 5246              	.LVL473:
 5247              	.L434:
 5248              	.LBE510:
 5249              	.LBE511:
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5250              		.loc 1 1743 0
 5251 002e 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5252 0032 012B     		cmp	r3, #1
 5253 0034 01D1     		bne	.L435
 5254 0036 0223     		movs	r3, #2
 5255 0038 F5E7     		b	.L417
 5256              	.L435:
1743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5257              		.loc 1 1743 0 is_stmt 0 discriminator 2
 5258 003a 0123     		movs	r3, #1
 5259 003c 84F85030 		strb	r3, [r4, #80]
1746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5260              		.loc 1 1746 0 is_stmt 1 discriminator 2
 5261 0040 2046     		mov	r0, r4
ARM GAS  /tmp/ccxf1fbt.s 			page 313


 5262 0042 FFF7FEFF 		bl	ADC_Enable
 5263              	.LVL474:
1749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5264              		.loc 1 1749 0 discriminator 2
 5265 0046 0346     		mov	r3, r0
 5266 0048 0028     		cmp	r0, #0
 5267 004a 5DD1     		bne	.L418
1754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5268              		.loc 1 1754 0
 5269 004c 626D     		ldr	r2, [r4, #84]
 5270 004e 22F47062 		bic	r2, r2, #3840
 5271 0052 22F00102 		bic	r2, r2, #1
 5272 0056 42F48072 		orr	r2, r2, #256
 5273 005a 6265     		str	r2, [r4, #84]
1772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5274              		.loc 1 1772 0
 5275 005c 626D     		ldr	r2, [r4, #84]
 5276 005e 12F4805F 		tst	r2, #4096
 5277 0062 3ED0     		beq	.L419
1775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5278              		.loc 1 1775 0
 5279 0064 A26D     		ldr	r2, [r4, #88]
 5280 0066 22F00602 		bic	r2, r2, #6
 5281 006a A265     		str	r2, [r4, #88]
 5282              	.L420:
1785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5283              		.loc 1 1785 0
 5284 006c 2268     		ldr	r2, [r4]
 5285 006e 1C21     		movs	r1, #28
 5286 0070 1160     		str	r1, [r2]
1790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5287              		.loc 1 1790 0
 5288 0072 0022     		movs	r2, #0
 5289 0074 84F85020 		strb	r2, [r4, #80]
1793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5290              		.loc 1 1793 0
 5291 0078 2168     		ldr	r1, [r4]
 5292 007a 4A68     		ldr	r2, [r1, #4]
 5293 007c 22F01C02 		bic	r2, r2, #28
 5294 0080 4A60     		str	r2, [r1, #4]
1796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5295              		.loc 1 1796 0
 5296 0082 6269     		ldr	r2, [r4, #20]
 5297 0084 082A     		cmp	r2, #8
 5298 0086 2FD1     		bne	.L431
1799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5299              		.loc 1 1799 0
 5300 0088 2168     		ldr	r1, [r4]
 5301 008a 4A68     		ldr	r2, [r1, #4]
 5302 008c 42F00802 		orr	r2, r2, #8
 5303 0090 4A60     		str	r2, [r1, #4]
 5304              	.L423:
1811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5305              		.loc 1 1811 0
 5306 0092 626B     		ldr	r2, [r4, #52]
 5307 0094 22B9     		cbnz	r2, .L424
1813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
ARM GAS  /tmp/ccxf1fbt.s 			page 314


 5308              		.loc 1 1813 0
 5309 0096 2168     		ldr	r1, [r4]
 5310 0098 4A68     		ldr	r2, [r1, #4]
 5311 009a 42F01002 		orr	r2, r2, #16
 5312 009e 4A60     		str	r2, [r1, #4]
 5313              	.L424:
1886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5314              		.loc 1 1886 0
 5315 00a0 2168     		ldr	r1, [r4]
 5316 00a2 CA68     		ldr	r2, [r1, #12]
 5317 00a4 12F0007F 		tst	r2, #33554432
 5318 00a8 11D0     		beq	.L425
1888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5319              		.loc 1 1888 0
 5320 00aa 626D     		ldr	r2, [r4, #84]
 5321 00ac 22F44052 		bic	r2, r2, #12288
 5322 00b0 42F48052 		orr	r2, r2, #4096
 5323 00b4 6265     		str	r2, [r4, #84]
1894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5324              		.loc 1 1894 0
 5325 00b6 6269     		ldr	r2, [r4, #20]
 5326 00b8 082A     		cmp	r2, #8
 5327 00ba 1BD1     		bne	.L432
1897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5328              		.loc 1 1897 0
 5329 00bc 4A68     		ldr	r2, [r1, #4]
 5330 00be 22F02002 		bic	r2, r2, #32
 5331 00c2 4A60     		str	r2, [r1, #4]
1898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 5332              		.loc 1 1898 0
 5333 00c4 2168     		ldr	r1, [r4]
 5334 00c6 4A68     		ldr	r2, [r1, #4]
 5335 00c8 42F04002 		orr	r2, r2, #64
 5336 00cc 4A60     		str	r2, [r1, #4]
 5337              	.L425:
1909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif
 5338              		.loc 1 1909 0
 5339 00ce 2168     		ldr	r1, [r4]
 5340              	.LVL475:
 5341              	.LBB512:
 5342              	.LBB513:
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5343              		.loc 2 6063 0
 5344 00d0 8A68     		ldr	r2, [r1, #8]
 5345 00d2 22F00042 		bic	r2, r2, #-2147483648
 5346 00d6 22F03F02 		bic	r2, r2, #63
 5347 00da 42F00402 		orr	r2, r2, #4
 5348 00de 8A60     		str	r2, [r1, #8]
 5349 00e0 A1E7     		b	.L417
 5350              	.LVL476:
 5351              	.L419:
 5352              	.LBE513:
 5353              	.LBE512:
1780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5354              		.loc 1 1780 0
 5355 00e2 0022     		movs	r2, #0
 5356 00e4 A265     		str	r2, [r4, #88]
ARM GAS  /tmp/ccxf1fbt.s 			page 315


 5357 00e6 C1E7     		b	.L420
 5358              	.L431:
1803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****           break;
 5359              		.loc 1 1803 0
 5360 00e8 2168     		ldr	r1, [r4]
 5361 00ea 4A68     		ldr	r2, [r1, #4]
 5362 00ec 42F00402 		orr	r2, r2, #4
 5363 00f0 4A60     		str	r2, [r1, #4]
1804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5364              		.loc 1 1804 0
 5365 00f2 CEE7     		b	.L423
 5366              	.L432:
1902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5367              		.loc 1 1902 0
 5368 00f4 4A68     		ldr	r2, [r1, #4]
 5369 00f6 22F04002 		bic	r2, r2, #64
 5370 00fa 4A60     		str	r2, [r1, #4]
1903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             break;
 5371              		.loc 1 1903 0
 5372 00fc 2168     		ldr	r1, [r4]
 5373 00fe 4A68     		ldr	r2, [r1, #4]
 5374 0100 42F02002 		orr	r2, r2, #32
 5375 0104 4A60     		str	r2, [r1, #4]
1904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5376              		.loc 1 1904 0
 5377 0106 E2E7     		b	.L425
 5378              	.L418:
1915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5379              		.loc 1 1915 0
 5380 0108 0022     		movs	r2, #0
 5381 010a 84F85020 		strb	r2, [r4, #80]
 5382 010e 8AE7     		b	.L417
 5383              	.L437:
 5384              		.align	2
 5385              	.L436:
 5386 0110 00000450 		.word	1342439424
 5387 0114 00000000 		.word	.LC0
 5388              		.cfi_endproc
 5389              	.LFE292:
 5391              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 5392              		.align	1
 5393              		.global	HAL_ADC_Start_DMA
 5394              		.syntax unified
 5395              		.thumb
 5396              		.thumb_func
 5397              		.fpu fpv4-sp-d16
 5399              	HAL_ADC_Start_DMA:
 5400              	.LFB294:
1989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5401              		.loc 1 1989 0
 5402              		.cfi_startproc
 5403              		@ args = 0, pretend = 0, frame = 0
 5404              		@ frame_needed = 0, uses_anonymous_args = 0
 5405              	.LVL477:
 5406 0000 70B5     		push	{r4, r5, r6, lr}
 5407              	.LCFI22:
 5408              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccxf1fbt.s 			page 316


 5409              		.cfi_offset 4, -16
 5410              		.cfi_offset 5, -12
 5411              		.cfi_offset 6, -8
 5412              		.cfi_offset 14, -4
 5413 0002 0446     		mov	r4, r0
 5414 0004 0D46     		mov	r5, r1
 5415 0006 1646     		mov	r6, r2
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5416              		.loc 1 1996 0
 5417 0008 0268     		ldr	r2, [r0]
 5418              	.LVL478:
 5419 000a 324B     		ldr	r3, .L451
 5420 000c 9A42     		cmp	r2, r3
 5421 000e 04D0     		beq	.L439
1996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5422              		.loc 1 1996 0 is_stmt 0 discriminator 1
 5423 0010 40F2CC71 		movw	r1, #1996
 5424              	.LVL479:
 5425 0014 3048     		ldr	r0, .L451+4
 5426              	.LVL480:
 5427 0016 FFF7FEFF 		bl	assert_failed
 5428              	.LVL481:
 5429              	.L439:
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5430              		.loc 1 1999 0 is_stmt 1
 5431 001a 2368     		ldr	r3, [r4]
 5432              	.LVL482:
 5433              	.LBB514:
 5434              	.LBB515:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5435              		.loc 2 6096 0
 5436 001c 9B68     		ldr	r3, [r3, #8]
 5437              	.LVL483:
 5438 001e 13F0040F 		tst	r3, #4
 5439 0022 04D0     		beq	.L445
 5440 0024 0123     		movs	r3, #1
 5441              	.L440:
 5442              	.LVL484:
 5443              	.LBE515:
 5444              	.LBE514:
1999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5445              		.loc 1 1999 0
 5446 0026 23B1     		cbz	r3, .L449
2109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5447              		.loc 1 2109 0
 5448 0028 0223     		movs	r3, #2
 5449              	.L441:
2114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5450              		.loc 1 2114 0
 5451 002a 1846     		mov	r0, r3
 5452 002c 70BD     		pop	{r4, r5, r6, pc}
 5453              	.LVL485:
 5454              	.L445:
 5455              	.LBB517:
 5456              	.LBB516:
6096:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5457              		.loc 2 6096 0
ARM GAS  /tmp/ccxf1fbt.s 			page 317


 5458 002e 0023     		movs	r3, #0
 5459 0030 F9E7     		b	.L440
 5460              	.LVL486:
 5461              	.L449:
 5462              	.LBE516:
 5463              	.LBE517:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5464              		.loc 1 2002 0
 5465 0032 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5466 0036 012B     		cmp	r3, #1
 5467 0038 01D1     		bne	.L450
 5468 003a 0223     		movs	r3, #2
 5469 003c F5E7     		b	.L441
 5470              	.L450:
2002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5471              		.loc 1 2002 0 is_stmt 0 discriminator 2
 5472 003e 0123     		movs	r3, #1
 5473 0040 84F85030 		strb	r3, [r4, #80]
2014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5474              		.loc 1 2014 0 is_stmt 1 discriminator 2
 5475 0044 2046     		mov	r0, r4
 5476 0046 FFF7FEFF 		bl	ADC_Enable
 5477              	.LVL487:
2017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5478              		.loc 1 2017 0 discriminator 2
 5479 004a 0346     		mov	r3, r0
 5480 004c 0028     		cmp	r0, #0
 5481 004e 3DD1     		bne	.L442
2022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5482              		.loc 1 2022 0
 5483 0050 636D     		ldr	r3, [r4, #84]
 5484 0052 23F47063 		bic	r3, r3, #3840
 5485 0056 23F00103 		bic	r3, r3, #1
 5486 005a 43F48073 		orr	r3, r3, #256
 5487 005e 6365     		str	r3, [r4, #84]
2039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         {
 5488              		.loc 1 2039 0
 5489 0060 636D     		ldr	r3, [r4, #84]
 5490 0062 13F4805F 		tst	r3, #4096
 5491 0066 2ED0     		beq	.L443
2042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5492              		.loc 1 2042 0
 5493 0068 A36D     		ldr	r3, [r4, #88]
 5494 006a 23F00603 		bic	r3, r3, #6
 5495 006e A365     		str	r3, [r4, #88]
 5496              	.L444:
2051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5497              		.loc 1 2051 0
 5498 0070 E36C     		ldr	r3, [r4, #76]
 5499 0072 1A4A     		ldr	r2, .L451+8
 5500 0074 DA62     		str	r2, [r3, #44]
2054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5501              		.loc 1 2054 0
 5502 0076 E36C     		ldr	r3, [r4, #76]
 5503 0078 194A     		ldr	r2, .L451+12
 5504 007a 1A63     		str	r2, [r3, #48]
2057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 318


 5505              		.loc 1 2057 0
 5506 007c E36C     		ldr	r3, [r4, #76]
 5507 007e 194A     		ldr	r2, .L451+16
 5508 0080 5A63     		str	r2, [r3, #52]
2066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5509              		.loc 1 2066 0
 5510 0082 2368     		ldr	r3, [r4]
 5511 0084 1C22     		movs	r2, #28
 5512 0086 1A60     		str	r2, [r3]
2071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5513              		.loc 1 2071 0
 5514 0088 0023     		movs	r3, #0
 5515 008a 84F85030 		strb	r3, [r4, #80]
2076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5516              		.loc 1 2076 0
 5517 008e 2268     		ldr	r2, [r4]
 5518 0090 5368     		ldr	r3, [r2, #4]
 5519 0092 43F01003 		orr	r3, r3, #16
 5520 0096 5360     		str	r3, [r2, #4]
2079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5521              		.loc 1 2079 0
 5522 0098 2268     		ldr	r2, [r4]
 5523 009a D368     		ldr	r3, [r2, #12]
 5524 009c 43F00103 		orr	r3, r3, #1
 5525 00a0 D360     		str	r3, [r2, #12]
2082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5526              		.loc 1 2082 0
 5527 00a2 2168     		ldr	r1, [r4]
 5528 00a4 3346     		mov	r3, r6
 5529 00a6 2A46     		mov	r2, r5
 5530 00a8 4031     		adds	r1, r1, #64
 5531 00aa E06C     		ldr	r0, [r4, #76]
 5532              	.LVL488:
 5533 00ac FFF7FEFF 		bl	HAL_DMA_Start_IT
 5534              	.LVL489:
 5535 00b0 0346     		mov	r3, r0
 5536              	.LVL490:
2089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5537              		.loc 1 2089 0
 5538 00b2 2168     		ldr	r1, [r4]
 5539              	.LVL491:
 5540              	.LBB518:
 5541              	.LBB519:
6063:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5542              		.loc 2 6063 0
 5543 00b4 8A68     		ldr	r2, [r1, #8]
 5544 00b6 22F00042 		bic	r2, r2, #-2147483648
 5545 00ba 22F03F02 		bic	r2, r2, #63
 5546 00be 42F00402 		orr	r2, r2, #4
 5547 00c2 8A60     		str	r2, [r1, #8]
 5548 00c4 B1E7     		b	.L441
 5549              	.LVL492:
 5550              	.L443:
 5551              	.LBE519:
 5552              	.LBE518:
2047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****         }
 5553              		.loc 1 2047 0
ARM GAS  /tmp/ccxf1fbt.s 			page 319


 5554 00c6 0023     		movs	r3, #0
 5555 00c8 A365     		str	r3, [r4, #88]
 5556 00ca D1E7     		b	.L444
 5557              	.L442:
2094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5558              		.loc 1 2094 0
 5559 00cc 0022     		movs	r2, #0
 5560 00ce 84F85020 		strb	r2, [r4, #80]
 5561 00d2 AAE7     		b	.L441
 5562              	.L452:
 5563              		.align	2
 5564              	.L451:
 5565 00d4 00000450 		.word	1342439424
 5566 00d8 00000000 		.word	.LC0
 5567 00dc 00000000 		.word	ADC_DMAConvCplt
 5568 00e0 00000000 		.word	ADC_DMAHalfConvCplt
 5569 00e4 00000000 		.word	ADC_DMAError
 5570              		.cfi_endproc
 5571              	.LFE294:
 5573              		.section	.text.ADC_Disable,"ax",%progbits
 5574              		.align	1
 5575              		.global	ADC_Disable
 5576              		.syntax unified
 5577              		.thumb
 5578              		.thumb_func
 5579              		.fpu fpv4-sp-d16
 5581              	ADC_Disable:
 5582              	.LFB308:
3435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   uint32_t tickstart;
 5583              		.loc 1 3435 0
 5584              		.cfi_startproc
 5585              		@ args = 0, pretend = 0, frame = 0
 5586              		@ frame_needed = 0, uses_anonymous_args = 0
 5587              	.LVL493:
 5588 0000 38B5     		push	{r3, r4, r5, lr}
 5589              	.LCFI23:
 5590              		.cfi_def_cfa_offset 16
 5591              		.cfi_offset 3, -16
 5592              		.cfi_offset 4, -12
 5593              		.cfi_offset 5, -8
 5594              		.cfi_offset 14, -4
3437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5595              		.loc 1 3437 0
 5596 0002 0368     		ldr	r3, [r0]
 5597              	.LVL494:
 5598              	.LBB520:
 5599              	.LBB521:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5600              		.loc 2 5985 0
 5601 0004 9A68     		ldr	r2, [r3, #8]
 5602 0006 12F0020F 		tst	r2, #2
 5603 000a 18D0     		beq	.L460
 5604 000c 0121     		movs	r1, #1
 5605              	.L454:
 5606              	.LVL495:
 5607              	.LBE521:
 5608              	.LBE520:
ARM GAS  /tmp/ccxf1fbt.s 			page 320


 5609              	.LBB523:
 5610              	.LBB524:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5611              		.loc 2 5974 0
 5612 000e 9A68     		ldr	r2, [r3, #8]
 5613 0010 12F0010F 		tst	r2, #1
 5614 0014 15D0     		beq	.L461
 5615 0016 0122     		movs	r2, #1
 5616              	.L455:
 5617              	.LVL496:
 5618              	.LBE524:
 5619              	.LBE523:
3442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5620              		.loc 1 3442 0
 5621 0018 002A     		cmp	r2, #0
 5622 001a 39D0     		beq	.L462
3443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****      )
 5623              		.loc 1 3443 0
 5624 001c 0029     		cmp	r1, #0
 5625 001e 39D1     		bne	.L463
3447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5626              		.loc 1 3447 0
 5627 0020 9A68     		ldr	r2, [r3, #8]
 5628 0022 02F00D02 		and	r2, r2, #13
 5629 0026 012A     		cmp	r2, #1
 5630 0028 0DD0     		beq	.L465
3456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5631              		.loc 1 3456 0
 5632 002a 436D     		ldr	r3, [r0, #84]
 5633 002c 43F01003 		orr	r3, r3, #16
 5634 0030 4365     		str	r3, [r0, #84]
3459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5635              		.loc 1 3459 0
 5636 0032 836D     		ldr	r3, [r0, #88]
 5637 0034 43F00103 		orr	r3, r3, #1
 5638 0038 8365     		str	r3, [r0, #88]
3461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5639              		.loc 1 3461 0
 5640 003a 0120     		movs	r0, #1
 5641              	.LVL497:
 5642 003c 38BD     		pop	{r3, r4, r5, pc}
 5643              	.LVL498:
 5644              	.L460:
 5645              	.LBB526:
 5646              	.LBB522:
5985:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5647              		.loc 2 5985 0
 5648 003e 0021     		movs	r1, #0
 5649 0040 E5E7     		b	.L454
 5650              	.LVL499:
 5651              	.L461:
 5652              	.LBE522:
 5653              	.LBE526:
 5654              	.LBB527:
 5655              	.LBB525:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5656              		.loc 2 5974 0
ARM GAS  /tmp/ccxf1fbt.s 			page 321


 5657 0042 0022     		movs	r2, #0
 5658 0044 E8E7     		b	.L455
 5659              	.LVL500:
 5660              	.L465:
 5661 0046 0446     		mov	r4, r0
 5662              	.LVL501:
 5663              	.LBE525:
 5664              	.LBE527:
 5665              	.LBB528:
 5666              	.LBB529:
5958:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5667              		.loc 2 5958 0
 5668 0048 9A68     		ldr	r2, [r3, #8]
 5669 004a 22F00042 		bic	r2, r2, #-2147483648
 5670 004e 22F03F02 		bic	r2, r2, #63
 5671 0052 42F00202 		orr	r2, r2, #2
 5672 0056 9A60     		str	r2, [r3, #8]
 5673              	.LVL502:
 5674              	.LBE529:
 5675              	.LBE528:
3451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5676              		.loc 1 3451 0
 5677 0058 0368     		ldr	r3, [r0]
 5678 005a 0322     		movs	r2, #3
 5679 005c 1A60     		str	r2, [r3]
3466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5680              		.loc 1 3466 0
 5681 005e FFF7FEFF 		bl	HAL_GetTick
 5682              	.LVL503:
 5683 0062 0546     		mov	r5, r0
 5684              	.LVL504:
 5685              	.L458:
3468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5686              		.loc 1 3468 0
 5687 0064 2368     		ldr	r3, [r4]
 5688 0066 9B68     		ldr	r3, [r3, #8]
 5689 0068 13F0010F 		tst	r3, #1
 5690 006c 0ED0     		beq	.L466
3470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 5691              		.loc 1 3470 0
 5692 006e FFF7FEFF 		bl	HAL_GetTick
 5693              	.LVL505:
 5694 0072 401B     		subs	r0, r0, r5
 5695 0074 0228     		cmp	r0, #2
 5696 0076 F5D9     		bls	.L458
3473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5697              		.loc 1 3473 0
 5698 0078 636D     		ldr	r3, [r4, #84]
 5699 007a 43F01003 		orr	r3, r3, #16
 5700 007e 6365     		str	r3, [r4, #84]
3476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5701              		.loc 1 3476 0
 5702 0080 A36D     		ldr	r3, [r4, #88]
 5703 0082 43F00103 		orr	r3, r3, #1
 5704 0086 A365     		str	r3, [r4, #88]
3478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 5705              		.loc 1 3478 0
ARM GAS  /tmp/ccxf1fbt.s 			page 322


 5706 0088 0120     		movs	r0, #1
 5707 008a 38BD     		pop	{r3, r4, r5, pc}
 5708              	.LVL506:
 5709              	.L466:
3484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 5710              		.loc 1 3484 0
 5711 008c 0020     		movs	r0, #0
 5712 008e 38BD     		pop	{r3, r4, r5, pc}
 5713              	.LVL507:
 5714              	.L462:
 5715 0090 0020     		movs	r0, #0
 5716              	.LVL508:
 5717 0092 38BD     		pop	{r3, r4, r5, pc}
 5718              	.LVL509:
 5719              	.L463:
 5720 0094 0020     		movs	r0, #0
 5721              	.LVL510:
3485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5722              		.loc 1 3485 0
 5723 0096 38BD     		pop	{r3, r4, r5, pc}
 5724              		.cfi_endproc
 5725              	.LFE308:
 5727              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5728              		.align	1
 5729              		.global	HAL_ADC_DeInit
 5730              		.syntax unified
 5731              		.thumb
 5732              		.thumb_func
 5733              		.fpu fpv4-sp-d16
 5735              	HAL_ADC_DeInit:
 5736              	.LFB285:
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5737              		.loc 1 708 0
 5738              		.cfi_startproc
 5739              		@ args = 0, pretend = 0, frame = 0
 5740              		@ frame_needed = 0, uses_anonymous_args = 0
 5741              	.LVL511:
 5742 0000 38B5     		push	{r3, r4, r5, lr}
 5743              	.LCFI24:
 5744              		.cfi_def_cfa_offset 16
 5745              		.cfi_offset 3, -16
 5746              		.cfi_offset 4, -12
 5747              		.cfi_offset 5, -8
 5748              		.cfi_offset 14, -4
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5749              		.loc 1 712 0
 5750 0002 0028     		cmp	r0, #0
 5751 0004 00F0C280 		beq	.L473
 5752 0008 0446     		mov	r4, r0
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5753              		.loc 1 718 0
 5754 000a 0268     		ldr	r2, [r0]
 5755 000c 604B     		ldr	r3, .L477
 5756 000e 9A42     		cmp	r2, r3
 5757 0010 04D0     		beq	.L469
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5758              		.loc 1 718 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccxf1fbt.s 			page 323


 5759 0012 40F2CE21 		movw	r1, #718
 5760 0016 5F48     		ldr	r0, .L477+4
 5761              	.LVL512:
 5762 0018 FFF7FEFF 		bl	assert_failed
 5763              	.LVL513:
 5764              	.L469:
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5765              		.loc 1 721 0 is_stmt 1
 5766 001c 636D     		ldr	r3, [r4, #84]
 5767 001e 43F00203 		orr	r3, r3, #2
 5768 0022 6365     		str	r3, [r4, #84]
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5769              		.loc 1 724 0
 5770 0024 0321     		movs	r1, #3
 5771 0026 2046     		mov	r0, r4
 5772 0028 FFF7FEFF 		bl	ADC_ConversionStop
 5773              	.LVL514:
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5774              		.loc 1 732 0
 5775 002c 2268     		ldr	r2, [r4]
 5776 002e D368     		ldr	r3, [r2, #12]
 5777 0030 43F40013 		orr	r3, r3, #2097152
 5778 0034 D360     		str	r3, [r2, #12]
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5779              		.loc 1 735 0
 5780 0036 0546     		mov	r5, r0
 5781 0038 0028     		cmp	r0, #0
 5782 003a 00F09B80 		beq	.L476
 5783              	.L470:
 5784              	.LVL515:
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5785              		.loc 1 756 0
 5786 003e 2268     		ldr	r2, [r4]
 5787 0040 5368     		ldr	r3, [r2, #4]
 5788 0042 23F4FF63 		bic	r3, r3, #2040
 5789 0046 23F00703 		bic	r3, r3, #7
 5790 004a 5360     		str	r3, [r2, #4]
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5791              		.loc 1 763 0
 5792 004c 2368     		ldr	r3, [r4]
 5793 004e 40F2FF72 		movw	r2, #2047
 5794 0052 1A60     		str	r2, [r3]
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5795              		.loc 1 774 0
 5796 0054 2268     		ldr	r2, [r4]
 5797 0056 9368     		ldr	r3, [r2, #8]
 5798 0058 23F0A043 		bic	r3, r3, #1342177280
 5799 005c 9360     		str	r3, [r2, #8]
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5800              		.loc 1 775 0
 5801 005e 2268     		ldr	r2, [r4]
 5802 0060 9368     		ldr	r3, [r2, #8]
 5803 0062 43F00053 		orr	r3, r3, #536870912
 5804 0066 9360     		str	r3, [r2, #8]
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 5805              		.loc 1 778 0
 5806 0068 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccxf1fbt.s 			page 324


 5807 006a D168     		ldr	r1, [r2, #12]
 5808 006c 4A4B     		ldr	r3, .L477+8
 5809 006e 0B40     		ands	r3, r3, r1
 5810 0070 D360     		str	r3, [r2, #12]
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5811              		.loc 1 779 0
 5812 0072 2268     		ldr	r2, [r4]
 5813 0074 D368     		ldr	r3, [r2, #12]
 5814 0076 43F00043 		orr	r3, r3, #-2147483648
 5815 007a D360     		str	r3, [r2, #12]
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5816              		.loc 1 782 0
 5817 007c 2268     		ldr	r2, [r4]
 5818 007e 1369     		ldr	r3, [r2, #16]
 5819 0080 23F4FF63 		bic	r3, r3, #2040
 5820 0084 23F00703 		bic	r3, r3, #7
 5821 0088 1361     		str	r3, [r2, #16]
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5822              		.loc 1 786 0
 5823 008a 2268     		ldr	r2, [r4]
 5824 008c 5369     		ldr	r3, [r2, #20]
 5825 008e 03F04043 		and	r3, r3, #-1073741824
 5826 0092 5361     		str	r3, [r2, #20]
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5827              		.loc 1 789 0
 5828 0094 2268     		ldr	r2, [r4]
 5829 0096 9369     		ldr	r3, [r2, #24]
 5830 0098 03F07843 		and	r3, r3, #-134217728
 5831 009c 9361     		str	r3, [r2, #24]
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5832              		.loc 1 794 0
 5833 009e 2268     		ldr	r2, [r4]
 5834 00a0 136A     		ldr	r3, [r2, #32]
 5835 00a2 03F0F023 		and	r3, r3, #-268374016
 5836 00a6 1362     		str	r3, [r2, #32]
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5837              		.loc 1 797 0
 5838 00a8 2268     		ldr	r2, [r4]
 5839 00aa 536A     		ldr	r3, [r2, #36]
 5840 00ac 03F0FF23 		and	r3, r3, #-16711936
 5841 00b0 5362     		str	r3, [r2, #36]
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5842              		.loc 1 800 0
 5843 00b2 2268     		ldr	r2, [r4]
 5844 00b4 936A     		ldr	r3, [r2, #40]
 5845 00b6 03F0FF23 		and	r3, r3, #-16711936
 5846 00ba 9362     		str	r3, [r2, #40]
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5847              		.loc 1 803 0
 5848 00bc 2268     		ldr	r2, [r4]
 5849 00be 116B     		ldr	r1, [r2, #48]
 5850 00c0 364B     		ldr	r3, .L477+12
 5851 00c2 0B40     		ands	r3, r3, r1
 5852 00c4 1363     		str	r3, [r2, #48]
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5853              		.loc 1 807 0
 5854 00c6 2368     		ldr	r3, [r4]
ARM GAS  /tmp/ccxf1fbt.s 			page 325


 5855 00c8 5A6B     		ldr	r2, [r3, #52]
 5856 00ca 3549     		ldr	r1, .L477+16
 5857 00cc 0A40     		ands	r2, r2, r1
 5858 00ce 5A63     		str	r2, [r3, #52]
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5859              		.loc 1 811 0
 5860 00d0 2268     		ldr	r2, [r4]
 5861 00d2 936B     		ldr	r3, [r2, #56]
 5862 00d4 0B40     		ands	r3, r3, r1
 5863 00d6 9363     		str	r3, [r2, #56]
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5864              		.loc 1 815 0
 5865 00d8 2268     		ldr	r2, [r4]
 5866 00da D36B     		ldr	r3, [r2, #60]
 5867 00dc 23F4FB63 		bic	r3, r3, #2008
 5868 00e0 23F00703 		bic	r3, r3, #7
 5869 00e4 D363     		str	r3, [r2, #60]
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR2 */
 5870              		.loc 1 823 0
 5871 00e6 2168     		ldr	r1, [r4]
 5872 00e8 0A6E     		ldr	r2, [r1, #96]
 5873 00ea 2E4B     		ldr	r3, .L477+20
 5874 00ec 1A40     		ands	r2, r2, r3
 5875 00ee 0A66     		str	r2, [r1, #96]
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR3 */
 5876              		.loc 1 825 0
 5877 00f0 2168     		ldr	r1, [r4]
 5878 00f2 4A6E     		ldr	r2, [r1, #100]
 5879 00f4 1A40     		ands	r2, r2, r3
 5880 00f6 4A66     		str	r2, [r1, #100]
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   /* Reset register OFR4 */
 5881              		.loc 1 827 0
 5882 00f8 2168     		ldr	r1, [r4]
 5883 00fa 8A6E     		ldr	r2, [r1, #104]
 5884 00fc 1A40     		ands	r2, r2, r3
 5885 00fe 8A66     		str	r2, [r1, #104]
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5886              		.loc 1 829 0
 5887 0100 2168     		ldr	r1, [r4]
 5888 0102 CA6E     		ldr	r2, [r1, #108]
 5889 0104 1340     		ands	r3, r3, r2
 5890 0106 CB66     		str	r3, [r1, #108]
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5891              		.loc 1 835 0
 5892 0108 2268     		ldr	r2, [r4]
 5893 010a D2F8A030 		ldr	r3, [r2, #160]
 5894 010e DB0C     		lsrs	r3, r3, #19
 5895 0110 DB04     		lsls	r3, r3, #19
 5896 0112 C2F8A030 		str	r3, [r2, #160]
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5897              		.loc 1 838 0
 5898 0116 2268     		ldr	r2, [r4]
 5899 0118 D2F8A430 		ldr	r3, [r2, #164]
 5900 011c DB0C     		lsrs	r3, r3, #19
 5901 011e DB04     		lsls	r3, r3, #19
 5902 0120 C2F8A430 		str	r3, [r2, #164]
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
ARM GAS  /tmp/ccxf1fbt.s 			page 326


 5903              		.loc 1 841 0
 5904 0124 2268     		ldr	r2, [r4]
 5905 0126 D2F8B030 		ldr	r3, [r2, #176]
 5906 012a DB0C     		lsrs	r3, r3, #19
 5907 012c DB04     		lsls	r3, r3, #19
 5908 012e C2F8B030 		str	r3, [r2, #176]
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5909              		.loc 1 844 0
 5910 0132 2268     		ldr	r2, [r4]
 5911 0134 D2F8B430 		ldr	r3, [r2, #180]
 5912 0138 23F07F13 		bic	r3, r3, #8323199
 5913 013c C2F8B430 		str	r3, [r2, #180]
 5914              	.LVL516:
 5915              	.LBB530:
 5916              	.LBB531:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5917              		.loc 2 5974 0
 5918 0140 134B     		ldr	r3, .L477
 5919 0142 9B68     		ldr	r3, [r3, #8]
 5920 0144 13F0010F 		tst	r3, #1
 5921 0148 1ED0     		beq	.L474
 5922 014a 0123     		movs	r3, #1
 5923              	.L471:
 5924              	.LVL517:
 5925              	.LBE531:
 5926              	.LBE530:
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 5927              		.loc 1 851 0
 5928 014c 33B9     		cbnz	r3, .L472
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5929              		.loc 1 860 0
 5930 014e 164A     		ldr	r2, .L477+24
 5931 0150 9368     		ldr	r3, [r2, #8]
 5932 0152 23F0FF73 		bic	r3, r3, #33423360
 5933 0156 23F48033 		bic	r3, r3, #65536
 5934 015a 9360     		str	r3, [r2, #8]
 5935              	.L472:
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 5936              		.loc 1 884 0
 5937 015c 2046     		mov	r0, r4
 5938 015e FFF7FEFF 		bl	HAL_ADC_MspDeInit
 5939              	.LVL518:
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5940              		.loc 1 888 0
 5941 0162 0023     		movs	r3, #0
 5942 0164 A365     		str	r3, [r4, #88]
 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 5943              		.loc 1 891 0
 5944 0166 E365     		str	r3, [r4, #92]
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5945              		.loc 1 892 0
 5946 0168 2366     		str	r3, [r4, #96]
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5947              		.loc 1 895 0
 5948 016a 6365     		str	r3, [r4, #84]
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5949              		.loc 1 898 0
ARM GAS  /tmp/ccxf1fbt.s 			page 327


 5950 016c 84F85030 		strb	r3, [r4, #80]
 5951              	.LVL519:
 5952              	.L468:
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5953              		.loc 1 902 0
 5954 0170 2846     		mov	r0, r5
 5955 0172 38BD     		pop	{r3, r4, r5, pc}
 5956              	.LVL520:
 5957              	.L476:
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 5958              		.loc 1 738 0
 5959 0174 2046     		mov	r0, r4
 5960              	.LVL521:
 5961 0176 FFF7FEFF 		bl	ADC_Disable
 5962              	.LVL522:
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 5963              		.loc 1 741 0
 5964 017a 0546     		mov	r5, r0
 5965 017c 0028     		cmp	r0, #0
 5966 017e 7FF45EAF 		bne	.L470
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 5967              		.loc 1 744 0
 5968 0182 0123     		movs	r3, #1
 5969 0184 6365     		str	r3, [r4, #84]
 5970 0186 5AE7     		b	.L470
 5971              	.LVL523:
 5972              	.L474:
 5973              	.LBB533:
 5974              	.LBB532:
5974:Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 5975              		.loc 2 5974 0
 5976 0188 0023     		movs	r3, #0
 5977 018a DFE7     		b	.L471
 5978              	.LVL524:
 5979              	.L473:
 5980              	.LBE532:
 5981              	.LBE533:
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   }
 5982              		.loc 1 714 0
 5983 018c 0125     		movs	r5, #1
 5984 018e EFE7     		b	.L468
 5985              	.L478:
 5986              		.align	2
 5987              	.L477:
 5988 0190 00000450 		.word	1342439424
 5989 0194 00000000 		.word	.LC0
 5990 0198 04800080 		.word	-2147450876
 5991 019c 300882E0 		.word	-528349136
 5992 01a0 200882E0 		.word	-528349152
 5993 01a4 00F0FF03 		.word	67104768
 5994 01a8 00030450 		.word	1342440192
 5995              		.cfi_endproc
 5996              	.LFE285:
 5998              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 5999              		.align	1
 6000              		.global	HAL_ADC_Stop
 6001              		.syntax unified
ARM GAS  /tmp/ccxf1fbt.s 			page 328


 6002              		.thumb
 6003              		.thumb_func
 6004              		.fpu fpv4-sp-d16
 6006              	HAL_ADC_Stop:
 6007              	.LFB289:
1351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6008              		.loc 1 1351 0
 6009              		.cfi_startproc
 6010              		@ args = 0, pretend = 0, frame = 0
 6011              		@ frame_needed = 0, uses_anonymous_args = 0
 6012              	.LVL525:
 6013 0000 10B5     		push	{r4, lr}
 6014              	.LCFI25:
 6015              		.cfi_def_cfa_offset 8
 6016              		.cfi_offset 4, -8
 6017              		.cfi_offset 14, -4
 6018 0002 0446     		mov	r4, r0
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6019              		.loc 1 1355 0
 6020 0004 0268     		ldr	r2, [r0]
 6021 0006 154B     		ldr	r3, .L487
 6022 0008 9A42     		cmp	r2, r3
 6023 000a 04D0     		beq	.L480
1355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6024              		.loc 1 1355 0 is_stmt 0 discriminator 1
 6025 000c 40F24B51 		movw	r1, #1355
 6026 0010 1348     		ldr	r0, .L487+4
 6027              	.LVL526:
 6028 0012 FFF7FEFF 		bl	assert_failed
 6029              	.LVL527:
 6030              	.L480:
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6031              		.loc 1 1358 0 is_stmt 1
 6032 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6033 001a 012B     		cmp	r3, #1
 6034 001c 02D1     		bne	.L485
 6035 001e 0223     		movs	r3, #2
 6036              	.L481:
1384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6037              		.loc 1 1384 0
 6038 0020 1846     		mov	r0, r3
 6039 0022 10BD     		pop	{r4, pc}
 6040              	.LVL528:
 6041              	.L485:
1358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6042              		.loc 1 1358 0 discriminator 2
 6043 0024 0123     		movs	r3, #1
 6044 0026 84F85030 		strb	r3, [r4, #80]
1361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6045              		.loc 1 1361 0 discriminator 2
 6046 002a 0321     		movs	r1, #3
 6047 002c 2046     		mov	r0, r4
 6048 002e FFF7FEFF 		bl	ADC_ConversionStop
 6049              	.LVL529:
1364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 6050              		.loc 1 1364 0 discriminator 2
 6051 0032 0346     		mov	r3, r0
ARM GAS  /tmp/ccxf1fbt.s 			page 329


 6052 0034 18B1     		cbz	r0, .L486
 6053              	.L482:
 6054              	.LVL530:
1380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6055              		.loc 1 1380 0
 6056 0036 0022     		movs	r2, #0
 6057 0038 84F85020 		strb	r2, [r4, #80]
1383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6058              		.loc 1 1383 0
 6059 003c F0E7     		b	.L481
 6060              	.LVL531:
 6061              	.L486:
1367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6062              		.loc 1 1367 0
 6063 003e 2046     		mov	r0, r4
 6064              	.LVL532:
 6065 0040 FFF7FEFF 		bl	ADC_Disable
 6066              	.LVL533:
1370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6067              		.loc 1 1370 0
 6068 0044 0346     		mov	r3, r0
 6069 0046 0028     		cmp	r0, #0
 6070 0048 F5D1     		bne	.L482
1373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6071              		.loc 1 1373 0
 6072 004a 626D     		ldr	r2, [r4, #84]
 6073 004c 22F48852 		bic	r2, r2, #4352
 6074 0050 22F00102 		bic	r2, r2, #1
 6075 0054 42F00102 		orr	r2, r2, #1
 6076 0058 6265     		str	r2, [r4, #84]
 6077 005a ECE7     		b	.L482
 6078              	.L488:
 6079              		.align	2
 6080              	.L487:
 6081 005c 00000450 		.word	1342439424
 6082 0060 00000000 		.word	.LC0
 6083              		.cfi_endproc
 6084              	.LFE289:
 6086              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 6087              		.align	1
 6088              		.global	HAL_ADC_Stop_IT
 6089              		.syntax unified
 6090              		.thumb
 6091              		.thumb_func
 6092              		.fpu fpv4-sp-d16
 6094              	HAL_ADC_Stop_IT:
 6095              	.LFB293:
1936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6096              		.loc 1 1936 0
 6097              		.cfi_startproc
 6098              		@ args = 0, pretend = 0, frame = 0
 6099              		@ frame_needed = 0, uses_anonymous_args = 0
 6100              	.LVL534:
 6101 0000 10B5     		push	{r4, lr}
 6102              	.LCFI26:
 6103              		.cfi_def_cfa_offset 8
 6104              		.cfi_offset 4, -8
ARM GAS  /tmp/ccxf1fbt.s 			page 330


 6105              		.cfi_offset 14, -4
 6106 0002 0446     		mov	r4, r0
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6107              		.loc 1 1940 0
 6108 0004 0268     		ldr	r2, [r0]
 6109 0006 184B     		ldr	r3, .L497
 6110 0008 9A42     		cmp	r2, r3
 6111 000a 04D0     		beq	.L490
1940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6112              		.loc 1 1940 0 is_stmt 0 discriminator 1
 6113 000c 40F29471 		movw	r1, #1940
 6114 0010 1648     		ldr	r0, .L497+4
 6115              	.LVL535:
 6116 0012 FFF7FEFF 		bl	assert_failed
 6117              	.LVL536:
 6118              	.L490:
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6119              		.loc 1 1943 0 is_stmt 1
 6120 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6121 001a 012B     		cmp	r3, #1
 6122 001c 02D1     		bne	.L495
 6123 001e 0223     		movs	r3, #2
 6124              	.L491:
1973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6125              		.loc 1 1973 0
 6126 0020 1846     		mov	r0, r3
 6127 0022 10BD     		pop	{r4, pc}
 6128              	.LVL537:
 6129              	.L495:
1943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6130              		.loc 1 1943 0 discriminator 2
 6131 0024 0123     		movs	r3, #1
 6132 0026 84F85030 		strb	r3, [r4, #80]
1946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6133              		.loc 1 1946 0 discriminator 2
 6134 002a 0321     		movs	r1, #3
 6135 002c 2046     		mov	r0, r4
 6136 002e FFF7FEFF 		bl	ADC_ConversionStop
 6137              	.LVL538:
1949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 6138              		.loc 1 1949 0 discriminator 2
 6139 0032 0346     		mov	r3, r0
 6140 0034 18B1     		cbz	r0, .L496
 6141              	.L492:
 6142              	.LVL539:
1969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6143              		.loc 1 1969 0
 6144 0036 0022     		movs	r2, #0
 6145 0038 84F85020 		strb	r2, [r4, #80]
1972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6146              		.loc 1 1972 0
 6147 003c F0E7     		b	.L491
 6148              	.LVL540:
 6149              	.L496:
1953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6150              		.loc 1 1953 0
 6151 003e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/ccxf1fbt.s 			page 331


 6152 0040 5368     		ldr	r3, [r2, #4]
 6153 0042 23F01C03 		bic	r3, r3, #28
 6154 0046 5360     		str	r3, [r2, #4]
1956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6155              		.loc 1 1956 0
 6156 0048 2046     		mov	r0, r4
 6157              	.LVL541:
 6158 004a FFF7FEFF 		bl	ADC_Disable
 6159              	.LVL542:
1959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6160              		.loc 1 1959 0
 6161 004e 0346     		mov	r3, r0
 6162 0050 0028     		cmp	r0, #0
 6163 0052 F0D1     		bne	.L492
1962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6164              		.loc 1 1962 0
 6165 0054 626D     		ldr	r2, [r4, #84]
 6166 0056 22F48852 		bic	r2, r2, #4352
 6167 005a 22F00102 		bic	r2, r2, #1
 6168 005e 42F00102 		orr	r2, r2, #1
 6169 0062 6265     		str	r2, [r4, #84]
 6170 0064 E7E7     		b	.L492
 6171              	.L498:
 6172 0066 00BF     		.align	2
 6173              	.L497:
 6174 0068 00000450 		.word	1342439424
 6175 006c 00000000 		.word	.LC0
 6176              		.cfi_endproc
 6177              	.LFE293:
 6179              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 6180              		.align	1
 6181              		.global	HAL_ADC_Stop_DMA
 6182              		.syntax unified
 6183              		.thumb
 6184              		.thumb_func
 6185              		.fpu fpv4-sp-d16
 6187              	HAL_ADC_Stop_DMA:
 6188              	.LFB295:
2130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6189              		.loc 1 2130 0
 6190              		.cfi_startproc
 6191              		@ args = 0, pretend = 0, frame = 0
 6192              		@ frame_needed = 0, uses_anonymous_args = 0
 6193              	.LVL543:
 6194 0000 38B5     		push	{r3, r4, r5, lr}
 6195              	.LCFI27:
 6196              		.cfi_def_cfa_offset 16
 6197              		.cfi_offset 3, -16
 6198              		.cfi_offset 4, -12
 6199              		.cfi_offset 5, -8
 6200              		.cfi_offset 14, -4
 6201 0002 0446     		mov	r4, r0
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6202              		.loc 1 2134 0
 6203 0004 0268     		ldr	r2, [r0]
 6204 0006 244B     		ldr	r3, .L510
 6205 0008 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccxf1fbt.s 			page 332


 6206 000a 04D0     		beq	.L500
2134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6207              		.loc 1 2134 0 is_stmt 0 discriminator 1
 6208 000c 40F65601 		movw	r1, #2134
 6209 0010 2248     		ldr	r0, .L510+4
 6210              	.LVL544:
 6211 0012 FFF7FEFF 		bl	assert_failed
 6212              	.LVL545:
 6213              	.L500:
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6214              		.loc 1 2137 0 is_stmt 1
 6215 0016 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6216 001a 012B     		cmp	r3, #1
 6217 001c 02D1     		bne	.L508
 6218 001e 0225     		movs	r5, #2
 6219              	.L501:
2193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6220              		.loc 1 2193 0
 6221 0020 2846     		mov	r0, r5
 6222 0022 38BD     		pop	{r3, r4, r5, pc}
 6223              	.LVL546:
 6224              	.L508:
2137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6225              		.loc 1 2137 0 discriminator 2
 6226 0024 0123     		movs	r3, #1
 6227 0026 84F85030 		strb	r3, [r4, #80]
2140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6228              		.loc 1 2140 0 discriminator 2
 6229 002a 0321     		movs	r1, #3
 6230 002c 2046     		mov	r0, r4
 6231 002e FFF7FEFF 		bl	ADC_ConversionStop
 6232              	.LVL547:
2143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****   {
 6233              		.loc 1 2143 0 discriminator 2
 6234 0032 0546     		mov	r5, r0
 6235 0034 E8B9     		cbnz	r0, .L502
2146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6236              		.loc 1 2146 0
 6237 0036 2268     		ldr	r2, [r4]
 6238 0038 D368     		ldr	r3, [r2, #12]
 6239 003a 23F00103 		bic	r3, r3, #1
 6240 003e D360     		str	r3, [r2, #12]
2150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6241              		.loc 1 2150 0
 6242 0040 E06C     		ldr	r0, [r4, #76]
 6243              	.LVL548:
 6244 0042 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 6245 0046 DBB2     		uxtb	r3, r3
 6246 0048 022B     		cmp	r3, #2
 6247 004a 16D0     		beq	.L509
 6248              	.L503:
 6249              	.LVL549:
2163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6250              		.loc 1 2163 0
 6251 004c 2268     		ldr	r2, [r4]
 6252 004e 5368     		ldr	r3, [r2, #4]
 6253 0050 23F01003 		bic	r3, r3, #16
ARM GAS  /tmp/ccxf1fbt.s 			page 333


 6254 0054 5360     		str	r3, [r2, #4]
2168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6255              		.loc 1 2168 0
 6256 0056 D5B9     		cbnz	r5, .L504
2170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6257              		.loc 1 2170 0
 6258 0058 2046     		mov	r0, r4
 6259 005a FFF7FEFF 		bl	ADC_Disable
 6260              	.LVL550:
 6261 005e 0546     		mov	r5, r0
 6262              	.LVL551:
 6263              	.L505:
2178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     {
 6264              		.loc 1 2178 0
 6265 0060 3DB9     		cbnz	r5, .L502
2181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6266              		.loc 1 2181 0
 6267 0062 636D     		ldr	r3, [r4, #84]
 6268 0064 23F48853 		bic	r3, r3, #4352
 6269 0068 23F00103 		bic	r3, r3, #1
 6270 006c 43F00103 		orr	r3, r3, #1
 6271 0070 6365     		str	r3, [r4, #84]
 6272              	.LVL552:
 6273              	.L502:
2189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6274              		.loc 1 2189 0
 6275 0072 0023     		movs	r3, #0
 6276 0074 84F85030 		strb	r3, [r4, #80]
2192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** }
 6277              		.loc 1 2192 0
 6278 0078 D2E7     		b	.L501
 6279              	.LVL553:
 6280              	.L509:
2152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c **** 
 6281              		.loc 1 2152 0
 6282 007a FFF7FEFF 		bl	HAL_DMA_Abort
 6283              	.LVL554:
2155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       {
 6284              		.loc 1 2155 0
 6285 007e 0546     		mov	r5, r0
 6286 0080 0028     		cmp	r0, #0
 6287 0082 E3D0     		beq	.L503
2158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****       }
 6288              		.loc 1 2158 0
 6289 0084 636D     		ldr	r3, [r4, #84]
 6290 0086 43F04003 		orr	r3, r3, #64
 6291 008a 6365     		str	r3, [r4, #84]
 6292 008c DEE7     		b	.L503
 6293              	.LVL555:
 6294              	.L504:
2174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc.c ****     }
 6295              		.loc 1 2174 0
 6296 008e 2046     		mov	r0, r4
 6297 0090 FFF7FEFF 		bl	ADC_Disable
 6298              	.LVL556:
 6299 0094 E4E7     		b	.L505
 6300              	.L511:
ARM GAS  /tmp/ccxf1fbt.s 			page 334


 6301 0096 00BF     		.align	2
 6302              	.L510:
 6303 0098 00000450 		.word	1342439424
 6304 009c 00000000 		.word	.LC0
 6305              		.cfi_endproc
 6306              	.LFE295:
 6308              		.section	.rodata.HAL_ADC_Init.str1.4,"aMS",%progbits,1
 6309              		.align	2
 6310              	.LC0:
 6311 0000 44726976 		.ascii	"Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc."
 6311      6572732F 
 6311      53544D33 
 6311      324C3478 
 6311      785F4841 
 6312 0033 6300     		.ascii	"c\000"
 6313              		.text
 6314              	.Letext0:
 6315              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 6316              		.file 5 "/usr/include/newlib/sys/_stdint.h"
 6317              		.file 6 "Drivers/CMSIS/Include/core_cm4.h"
 6318              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 6319              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l433xx.h"
 6320              		.file 9 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 6321              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 6322              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 6323              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 6324              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 6325              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 6326              		.file 15 "Inc/stm32l4xx_hal_conf.h"
 6327              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
ARM GAS  /tmp/ccxf1fbt.s 			page 335


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_adc.c
     /tmp/ccxf1fbt.s:18     .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccxf1fbt.s:25     .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccxf1fbt.s:39     .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccxf1fbt.s:46     .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccxf1fbt.s:479    .text.HAL_ADC_Init:0000000000000288 $d
     /tmp/ccxf1fbt.s:488    .text.HAL_ADC_Init:0000000000000298 $t
     /tmp/ccxf1fbt.s:921    .text.HAL_ADC_Init:00000000000004a4 $d
     /tmp/ccxf1fbt.s:929    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccxf1fbt.s:936    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccxf1fbt.s:949    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccxf1fbt.s:956    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccxf1fbt.s:1132   .text.HAL_ADC_PollForConversion:00000000000000cc $d
     /tmp/ccxf1fbt.s:1138   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccxf1fbt.s:1145   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccxf1fbt.s:1347   .text.HAL_ADC_PollForEvent:0000000000000114 $d
     /tmp/ccxf1fbt.s:1353   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccxf1fbt.s:1360   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccxf1fbt.s:1394   .text.HAL_ADC_GetValue:000000000000001c $d
     /tmp/ccxf1fbt.s:1400   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccxf1fbt.s:1407   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccxf1fbt.s:1420   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccxf1fbt.s:1427   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccxf1fbt.s:1440   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccxf1fbt.s:1447   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccxf1fbt.s:1471   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccxf1fbt.s:1478   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccxf1fbt.s:1491   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccxf1fbt.s:1498   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccxf1fbt.s:1511   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccxf1fbt.s:1518   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccxf1fbt.s:1997   .text.HAL_ADC_IRQHandler:000000000000027c $d
     /tmp/ccxf1fbt.s:2003   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccxf1fbt.s:2010   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccxf1fbt.s:2128   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccxf1fbt.s:2135   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccxf1fbt.s:2166   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccxf1fbt.s:2173   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccxf1fbt.s:2597   .text.HAL_ADC_ConfigChannel:000000000000025c $d
     /tmp/ccxf1fbt.s:2609   .text.HAL_ADC_ConfigChannel:0000000000000284 $t
     /tmp/ccxf1fbt.s:3201   .text.HAL_ADC_ConfigChannel:0000000000000588 $d
     /tmp/ccxf1fbt.s:3222   .text.HAL_ADC_ConfigChannel:00000000000005d4 $t
     /tmp/ccxf1fbt.s:3473   .text.HAL_ADC_ConfigChannel:0000000000000708 $d
     /tmp/ccxf1fbt.s:3481   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccxf1fbt.s:3488   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccxf1fbt.s:3903   .text.HAL_ADC_AnalogWDGConfig:00000000000002b0 $d
     /tmp/ccxf1fbt.s:3930   .text.HAL_ADC_AnalogWDGConfig:0000000000000308 $t
     /tmp/ccxf1fbt.s:4422   .text.HAL_ADC_AnalogWDGConfig:0000000000000594 $d
     /tmp/ccxf1fbt.s:4427   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccxf1fbt.s:4434   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccxf1fbt.s:4467   .text.HAL_ADC_GetState:000000000000001c $d
     /tmp/ccxf1fbt.s:4473   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccxf1fbt.s:4480   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccxf1fbt.s:4513   .text.HAL_ADC_GetError:000000000000001c $d
     /tmp/ccxf1fbt.s:4519   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccxf1fbt.s:4526   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
ARM GAS  /tmp/ccxf1fbt.s 			page 336


     /tmp/ccxf1fbt.s:4861   .text.ADC_ConversionStop:0000000000000144 $d
     /tmp/ccxf1fbt.s:4868   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccxf1fbt.s:4875   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccxf1fbt.s:5031   .text.ADC_Enable:00000000000000a0 $d
     /tmp/ccxf1fbt.s:5036   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccxf1fbt.s:5043   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
     /tmp/ccxf1fbt.s:5178   .text.HAL_ADC_Start:00000000000000ac $d
     /tmp/ccxf1fbt.s:5184   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccxf1fbt.s:5191   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccxf1fbt.s:5386   .text.HAL_ADC_Start_IT:0000000000000110 $d
     /tmp/ccxf1fbt.s:5392   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccxf1fbt.s:5399   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccxf1fbt.s:5565   .text.HAL_ADC_Start_DMA:00000000000000d4 $d
     /tmp/ccxf1fbt.s:5574   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccxf1fbt.s:5581   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccxf1fbt.s:5728   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccxf1fbt.s:5735   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccxf1fbt.s:5988   .text.HAL_ADC_DeInit:0000000000000190 $d
     /tmp/ccxf1fbt.s:5999   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccxf1fbt.s:6006   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccxf1fbt.s:6081   .text.HAL_ADC_Stop:000000000000005c $d
     /tmp/ccxf1fbt.s:6087   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccxf1fbt.s:6094   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccxf1fbt.s:6174   .text.HAL_ADC_Stop_IT:0000000000000068 $d
     /tmp/ccxf1fbt.s:6180   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccxf1fbt.s:6187   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccxf1fbt.s:6303   .text.HAL_ADC_Stop_DMA:0000000000000098 $d
     /tmp/ccxf1fbt.s:6309   .rodata.HAL_ADC_Init.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
assert_failed
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
